{"version":3,"file":"static/js/850.519568d8.chunk.js","mappings":"wPAEaA,EAAiBC,EAAAA,GAAAA,IAAH,uPAIV,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACD,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAY,EAAxB,IAED,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,YAAYF,IAAxB,IAOLG,EAAgBP,EAAAA,GAAAA,GAAH,88C,SCX1B,SAASQ,IACP,IAAMC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAClC,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACJR,EAAcS,OAAS,GACzBJ,EAAUL,EAEb,GAAE,CAACM,EAAUN,IAEPI,GACL,SAACd,EAAD,WACE,SAACQ,EAAD,UACGM,EAAOM,KAAI,SAAAC,GACV,OACE,eAAkBC,KAAMD,EAAGC,KAA3B,SACGD,EAAGE,MADGF,EAAGE,KAIf,SAIL,sDAEH,CAED,MAAeC,EAAAA,KAAWf,GCP1B,EApBoB,WAClB,IAAMO,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASS,EAAAA,EAAAA,MACV,GAAE,CAACT,KAGF,iBACEU,MAAO,CACLC,UAAW,QAFf,UAKE,SAACC,EAAA,EAAD,WACE,SAACC,EAAD,OAIP,C,sYCxBM,IACMC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,IAAnB,EACnBC,EAAa,SAAAH,GAAK,OAAIA,EAAMC,SAASG,OAAnB,EAClBC,EAAgB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EACrBC,EAAsB,SAAAP,GAAK,OAAIA,EAAMC,SAASO,SAAnB,EAC3BC,EAAqB,SAAAT,GAAK,OAAIA,EAAMC,SAASS,QAAnB,EAC1BC,EAAoB,SAAAX,GAAK,OAAIA,EAAMC,SAASW,OAAnB,EACzBC,EAA8B,SAAAb,GAAK,OAC9CA,EAAMC,SAASa,iBAD+B,EAEnCC,EAAa,SAAAf,GAAK,OAAIA,EAAMC,SAASe,OAAnB,EAClBC,EAAc,SAAAjB,GAAK,OAAIA,EAAMC,SAASiB,QAAnB,EACnBC,EAAe,SAAAnB,GAAK,OAAIA,EAAMC,SAASmB,SAAnB,EACpBC,EAAa,SAAArB,GAAK,OAAIA,EAAMC,SAASqB,eAAnB,EAClBC,EAAkB,SAAAvB,GAAK,OAAIA,EAAMC,SAASW,QAAQY,KAA3B,EACvBC,EAAmB,SAAAzB,GAAK,OAAIA,EAAMC,SAASW,QAAQc,MAA3B,EACxBC,EAAa,SAAA3B,GAAK,OAAIA,EAAMC,SAAS2B,OAAnB,EAClB/C,EAAa,SAAAmB,GAAK,OAAIA,EAAMC,SAAS4B,OAAnB,C","sources":["components/HistoryBox/HistoryBox.styled.js","components/HistoryBox/HistoryBox.jsx","components/pages/HistoryPage/HistoryPage.jsx","redux/location/locSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 30px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 16px;\n  line-height: ${p => p.theme.lineHeights.main};\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const EventsWrapper = styled.ul`\n  position: relative;\n  background: url('https://i.imgur.com/0kjMcUe.png');\n  background-size: contain;\n  background-position: center right;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 16px;\n  padding: 32px 24px 80px 24px;\n  z-index: 1;\n  filter: brightness(0.95) sepia(30%) saturate(80%);\n  border-radius: 30px;\n  height: 70vh;\n\n  @media screen and (min-width: 768px) {\n    padding: 56px 32px 80px 32px;\n  }\n\n  clip-path: polygon(\n    0% 0%,\n    0% 93%,\n    5% 98%,\n    6% 99%,\n    8% 95%,\n    12% 94%,\n    15% 97%,\n    17% 93%,\n    20% 98%,\n    22% 97%,\n    25% 99%,\n    31% 94%,\n    35% 93%,\n    39% 96%,\n    43% 93%,\n    45% 94%,\n    47% 95%,\n    50% 92%,\n    52% 96%,\n    54% 93%,\n    58% 92%,\n    60% 95%,\n    62% 93%,\n    65% 96%,\n    69% 93%,\n    72% 93%,\n    75% 94%,\n    79% 97%,\n    81% 94%,\n    85% 93%,\n    88% 92%,\n    90% 95%,\n    93% 93%,\n    95% 92%,\n    97% 95%,\n    100% 97%,\n    100% 0%\n  );\n  overflow: auto;\n\n  ::-webkit-scrollbar {\n    width: 16px;\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n    }\n  }\n\n  ::-webkit-scrollbar-track {\n    background: #ae9d72;\n    background-image: url('https://www.transparenttextures.com/patterns/black-paper.png');\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #ae9d72;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: #8bba98;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getHistory } from 'redux/location/locSelectors';\nimport { ContentWrapper, EventsWrapper } from './HistoryBox.styled';\n\nfunction HistoryUI() {\n  const historyEvents = useSelector(getHistory);\n  const [events, setEvents] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (historyEvents.length > 0) {\n      setEvents(historyEvents);\n    }\n  }, [dispatch, historyEvents]);\n\n  return events ? (\n    <ContentWrapper>\n      <EventsWrapper>\n        {events.map(el => {\n          return (\n            <li key={el.text} year={el.year}>\n              {el.text}\n            </li>\n          );\n        })}\n      </EventsWrapper>\n    </ContentWrapper>\n  ) : (\n    <div>No history data available</div>\n  );\n}\n\nexport default React.memo(HistoryUI);\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchHistory } from 'redux/location/locOperations';\nimport { Container } from 'components/Container/Container';\nimport HistoryBox from 'components/HistoryBox/HistoryBox';\n\nconst HistoryPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchHistory());\n  }, [dispatch]);\n\n  return (\n    <main\n      style={{\n        minHeight: '70vh',\n      }}\n    >\n      <Container>\n        <HistoryBox />\n      </Container>\n    </main>\n  );\n};\n\nexport default HistoryPage;\n","export const getCityId = state => state.location.cityID;\nexport const getCityName = state => state.location.city;\nexport const getCountry = state => state.location.country;\nexport const getCityImages = state => state.location.image;\nexport const getCurrentLongitude = state => state.location.longitude;\nexport const getCurrentLatitude = state => state.location.latitude;\nexport const getCurrentWeather = state => state.location.weather;\nexport const getAdditionalCurrentWeather = state =>\n  state.location.weatherAdditional;\nexport const getDayTime = state => state.location.daytime;\nexport const getTimezone = state => state.location.timezone;\nexport const getAstroData = state => state.location.astrodata;\nexport const getForcast = state => state.location.weatherForecast;\nexport const getDailyForcast = state => state.location.weather.daily;\nexport const getHourlyForcast = state => state.location.weather.hourly;\nexport const getAirData = state => state.location.airdata;\nexport const getHistory = state => state.location.history;\n"],"names":["ContentWrapper","styled","p","theme","fonts","main","fontWeights","lineHeights","EventsWrapper","HistoryUI","historyEvents","useSelector","getHistory","useState","events","setEvents","dispatch","useDispatch","useEffect","length","map","el","year","text","React","fetchHistory","style","minHeight","Container","HistoryBox","getCityName","state","location","city","getCountry","country","getCityImages","image","getCurrentLongitude","longitude","getCurrentLatitude","latitude","getCurrentWeather","weather","getAdditionalCurrentWeather","weatherAdditional","getDayTime","daytime","getTimezone","timezone","getAstroData","astrodata","getForcast","weatherForecast","getDailyForcast","daily","getHourlyForcast","hourly","getAirData","airdata","history"],"sourceRoot":""}