{"version":3,"file":"static/js/229.7cfb3a06.chunk.js","mappings":"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","sources":["components/Card/Card.styled.js","redux/location/locSelectors.js","hooks/useMedia.js","components/Card/Card.jsx","utils/customAxis.js","utils/customDot.js","components/ChartBox/HourlyCharts.styled.js","components/ChartBox/HourlyCharts.jsx","components/Indicator/Indicator.styled.js","components/Indicator/Indicator.jsx","components/WeatherBox/WeatherBox.styled.jsx","components/ChartBox/DailyCharts.styled.js","components/ChartBox/DailyCharts.jsx","components/BoxSubheader/Subheader.styled.js","components/BoxSubheader/Subheader.jsx","components/WeatherBox/WeatherBox.jsx","utils/moonPhases.js","components/AstroBox/AstroBox.styled.js","components/AstroBox/AstroBox.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","utils/conditionsWeatherApi.js","components/MainBox/MainBox.styled.js","components/MainBox/MainBox.jsx","components/pages/Homepage/Homepage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n\n  /* @media screen and (min-width: 320px) {\n    width: 320px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n  } */\n`;\n","export const getCityId = state => state.location.cityID;\nexport const getCityName = state => state.location.city;\nexport const getCountry = state => state.location.country;\nexport const getCityImages = state => state.location.image;\nexport const getCurrentLongitude = state => state.location.longitude;\nexport const getCurrentLatitude = state => state.location.latitude;\nexport const getCurrentWeather = state => state.location.weather;\nexport const getAdditionalCurrentWeather = state =>\n  state.location.weatherAdditional;\nexport const getDayTime = state => state.location.daytime;\nexport const getTimezone = state => state.location.timezone;\nexport const getAstroData = state => state.location.astrodata;\nexport const getForcast = state => state.location.weatherForecast;\nexport const getDailyForcast = state => state.location.weather.daily;\nexport const getHourlyForcast = state => state.location.weather.hourly;\n","import { useEffect, useState } from 'react';\n\nexport const useMediaQuery = query => {\n  const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPexelsImage } from 'redux/location/locOperations';\nimport { useState } from 'react';\nimport { Card } from './Card.styled';\nimport { getCityImages, getCityName } from 'redux/location/locSelectors';\nimport { useMediaQuery } from 'hooks/useMedia';\nimport bgImgMob from '../../images/umbrella-red-wallpaper-mob.jpg';\nimport bgImg from '../../images/umbrella-red-wallpaper.jpg'; // 'https://www.wallpaperflare.com/static/79/210/459/nature-sky-umbrella-red-wallpaper-preview.jpg';\n\nexport const CardUI = ({ children }) => {\n  const isRowBased = useMediaQuery('(min-width: 500px)');\n  const city = useSelector(getCityName);\n  const images = useSelector(getCityImages);\n\n  const [image, setImage] = useState('');\n  const [imageMob, setImageMob] = useState('');\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (city) {\n      dispatch(fetchPexelsImage());\n    }\n  }, [city, dispatch]);\n\n  useEffect(() => {\n    if (images.length === 1) {\n      setImage(images[0].landscape);\n      setImageMob(images[0].portrait);\n    }\n    if (images.length > 1) {\n      const random = Math.floor(Math.random() * images.length);\n      setImage(images[random].landscape);\n      setImageMob(images[random].portrait);\n    }\n  }, [images]);\n\n  return (\n    <Card\n      style={{\n        backgroundImage: !isRowBased\n          ? `url(${imageMob ?? bgImgMob})`\n          : `url(${image ?? bgImg})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n      }}\n    >\n      {children}\n    </Card>\n  );\n};\n","import sprite from 'images/icons_sprite.svg';\n\nexport const renderCustomAxisTick = ({ x, y, payload }) => {\n  let path = '';\n\n  switch (payload.value) {\n    case '0':\n      path = 'day';\n      break;\n    case '1':\n      path = 'cloudy-day-1';\n      break;\n    case '2':\n      path = 'cloudy-day-2';\n      break;\n    case '3':\n    case '45':\n    case '48':\n      path = 'cloudy';\n      break;\n    case '51':\n    case '53':\n    case '55':\n    case '56':\n    case '57':\n      path = 'rainy-5';\n      break;\n    case '61':\n    case '63':\n    case '65':\n    case '66':\n    case '67':\n    case '80':\n    case '81':\n    case '82':\n      path = 'rainy-7';\n      break;\n    case '85':\n    case '86':\n    case '77':\n    case '71':\n    case '73':\n    case '75':\n      path = 'snowy';\n      break;\n    case '95':\n    case '96':\n    case '99':\n      path = 'thunder';\n      break;\n    default:\n      path = 'weather';\n  }\n\n  return (\n    <svg x={x - 30} y={y - 20} width={42} height={42} viewBox=\"0 0 46 46\">\n      <use href={sprite + `#${path}`} />\n    </svg>\n  );\n};\n","import sprite from 'images/icons_sprite.svg';\n\nimport { useSelector } from 'react-redux';\nimport { getCurrentWeather } from 'redux/location/locSelectors';\n\nexport const CustomizedDot = props => {\n  const { cx, cy, payload } = props;\n\n  const weather = useSelector(getCurrentWeather);\n  const currentTime = weather.current_weather.time.slice(11);\n\n  if (payload.time === currentTime) {\n    return (\n      <svg x={cx - 14} y={cy - 14} width={28} height={28}>\n        <use href={sprite + `#sun`} />\n      </svg>\n    );\n  }\n\n  return (\n    <>\n      {/* <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#planet-earth`} />\n      </svg> */}\n    </>\n  );\n};\n\nexport const CustomizeActivedDot = props => {\n  const { cx, cy } = props;\n\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#planet-earth`} />\n      </svg>\n    </>\n  );\n};\n\nexport const CustomizeActivedDotTempMin = props => {\n  const { cx, cy } = props;\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#temp-min`} />\n      </svg>\n    </>\n  );\n};\n\nexport const CustomizeActivedDotTempMax = props => {\n  const { cx, cy } = props;\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#temp-max`} />\n      </svg>\n    </>\n  );\n};\n\nexport const CustomizeActivedDotPrecipitation = props => {\n  const { cx, cy } = props;\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#umbrella`} />\n      </svg>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ChartsWrapper = styled.div`\n  width: 100%;\n  height: 250px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    height: 300px;\n    margin-top: 32px;\n  }\n`;\n","import { useMediaQuery } from 'hooks/useMedia';\nimport { useSelector } from 'react-redux';\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport { getHourlyForcast } from 'redux/location/locSelectors';\nimport { renderCustomAxisTick } from 'utils/customAxis';\nimport { CustomizeActivedDot, CustomizedDot } from 'utils/customDot';\nimport { ChartsWrapper } from './HourlyCharts.styled';\n\nexport const HourlyChartsUI = () => {\n  const hourlyForecast = useSelector(getHourlyForcast);\n  const isRowBased = useMediaQuery('(min-width: 768px)');\n\n  // FOR HOURLY FORECAST\n\n  const hours = hourlyForecast.time.map(el => el).slice(0, 24);\n  const temp = hourlyForecast.temperature_2m.map(el => el).slice(0, 24);\n  const code = hourlyForecast.weathercode.map(el => el).slice(0, 24);\n  const hourlyData = hours.map((el, index) => {\n    return {\n      time: `${el}`.slice(11),\n      temperature: `${temp[index]}`,\n      code: `${code[index]}`,\n    };\n  });\n\n  return (\n    <ChartsWrapper>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <AreaChart\n          width={200}\n          height={200}\n          data={hourlyData}\n          fill=\"rgba(233, 201, 57, 0.25)\"\n          margin={{\n            top: 5,\n            right: 16,\n            left: 16,\n            bottom: 5,\n          }}\n        >\n          <Tooltip />\n          {isRowBased && (\n            <>\n              <YAxis interval=\"preserveStartEnd\" />\n              <XAxis\n                dataKey=\"code\"\n                xAxisId=\"1\"\n                stroke=\"transparent\"\n                fill=\"transparent\"\n                tick={renderCustomAxisTick}\n              />\n            </>\n          )}\n          <XAxis dataKey=\"time\" xAxisId=\"0\" />\n\n          <Area\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"temperature\"\n            stroke=\"#E9C939\"\n            strokeWidth={3}\n            fill=\"rgba(233, 201, 57, 0.25)\"\n            activeDot={<CustomizeActivedDot />}\n            dot={<CustomizedDot />}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    </ChartsWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Indicator = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: calc(50% - 32px);\n  box-shadow: 4px 0px 20px rgba(0, 0, 0, 0.25);\n  border-radius: ${p => p.theme.radii.main};\n  padding: 8px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p =>\n    p.color === 'blue'\n      ? p.theme.colors.accentBlue\n      : p.color === 'pink'\n      ? p.theme.colors.accentPink\n      : p.color === 'violet'\n      ? p.theme.colors.accentViolet\n      : p.theme.colors.textGrey};\n  background-color: ${p =>\n    p.color === 'blue'\n      ? p.theme.colors.bgBlue\n      : p.color === 'pink'\n      ? p.theme.colors.bgPink\n      : p.color === 'violet'\n      ? p.theme.colors.bgViolet\n      : p.theme.colors.bgGrey};\n\n  & svg {\n    width: 20px;\n    height: 20px;\n  }\n\n  & img {\n    width: 20px;\n    height: 20px;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px;\n    width: 20%;\n\n    & img {\n      width: 30px;\n      height: 30px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: fit-content;\n    }\n  }\n`;\n\nexport const IndicatorText = styled.span`\n  display: none;\n\n  @media screen and (min-width: 1280px) {\n    display: inline-block;\n    margin-right: 8px;\n  }\n`;\n\nexport const IndicatorImg = styled.img`\n  display: block;\n  width: 40px;\n  height: auto;\n  margin: 0 !important;\n`;\n","import { Indicator, IndicatorText, IndicatorImg } from './Indicator.styled';\n\nexport const IndicatorUI = ({ src, text, source, color = 'grey' }) => {\n  return (\n    <Indicator color={color}>\n      <IndicatorImg src={src} alt={text} loading=\"lazy\" />\n      <IndicatorText>{text}</IndicatorText>\n      <span>{source}</span>\n    </Indicator>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WeatherWrapper = styled.div`\n  padding: 32px 16px;\n  background: rgba(255, 255, 255, 0.23);\n  border-radius: 30px;\n  /* box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1); */\n  /* box-shadow: 0px 5px 10px 0px rgba(0, 255, 255, 0.7); */\n  box-shadow: inset -5px -5px 9px rgba(255, 255, 255, 0.45),\n    inset 5px 5px 9px rgba(94, 104, 121, 0.3);\n  backdrop-filter: blur(5.3px);\n  -webkit-backdrop-filter: blur(5.3px);\n  border: 1px solid rgba(255, 255, 255, 0.77);\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n\n  @media screen and (min-width: 768px) {\n    padding: 56px 32px;\n  }\n`;\n\nexport const IndicatorsWrapper = styled.ul`\n  display: flex;\n  gap: 16px;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 32px;\n\n  & li {\n    display: flex;\n    width: 80%;\n\n    & span {\n      margin-right: 0;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-between;\n\n    & li {\n      width: 25%;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ChartsWrapper = styled.div`\n  width: 100%;\n  height: 350px;\n\n  @media screen and (min-width: 768px) {\n    height: 450px;\n    margin-top: 0;\n  }\n`;\n","import { useMediaQuery } from 'hooks/useMedia';\nimport { useSelector } from 'react-redux';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n} from 'recharts';\nimport { getDailyForcast } from 'redux/location/locSelectors';\nimport { renderCustomAxisTick } from 'utils/customAxis';\n\nimport {\n  CustomizeActivedDotPrecipitation,\n  CustomizeActivedDotTempMax,\n  CustomizeActivedDotTempMin,\n} from 'utils/customDot';\nimport { ChartsWrapper } from './DailyCharts.styled';\n\nfunction formatDate(date) {\n  const month = String(date.toLocaleString('en-us', { month: 'short' }));\n  const day = String(date.getDate()).padStart(2, '0');\n\n  return `${month}, ${day}`;\n}\n\nexport const DailyChartsUI = () => {\n  const dailyForecast = useSelector(getDailyForcast);\n\n  const isRowBased = useMediaQuery('(min-width: 768px)');\n\n  //   FOR DAILY FORECAST\n\n  const dates = dailyForecast.time.map(el => formatDate(new Date(el)));\n  const tempMin = dailyForecast.temperature_2m_min.map(el => el);\n  const tempMax = dailyForecast.temperature_2m_max.map(el => el);\n  const code = dailyForecast.weathercode.map(el => el);\n  const precipitation = dailyForecast.precipitation_sum.map(el => el);\n\n  const dailyData = dates.map((el, index) => {\n    return {\n      date: `${el}`,\n      dateShort: `${el}`.slice(5),\n      min: `${tempMin[index]}`,\n      max: `${tempMax[index]}`,\n      code: `${code[index]}`,\n      precipitation: `${precipitation[index]}`,\n    };\n  });\n\n  return (\n    <ChartsWrapper>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          width={200}\n          height={200}\n          data={dailyData}\n          margin={{\n            top: 0,\n            right: 16,\n            left: 16,\n            bottom: 16,\n          }}\n        >\n          <Tooltip />\n\n          {isRowBased ? (\n            <>\n              <YAxis />\n              <XAxis\n                dataKey=\"code\"\n                xAxisId=\"1\"\n                stroke=\"transparent\"\n                fill=\"transparent\"\n                tick={renderCustomAxisTick}\n              />\n              <XAxis dataKey=\"date\" />\n            </>\n          ) : (\n            <XAxis dataKey=\"dateShort\" />\n          )}\n\n          <XAxis dataKey=\"date\" />\n          <Line\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"min\"\n            stroke=\"#658ED9\"\n            strokeWidth={3}\n            activeDot={<CustomizeActivedDotTempMin />}\n            dot={{ r: 2 }}\n          />\n          <Line\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"max\"\n            stroke=\"rgba(212, 66, 111, 0.5)\"\n            strokeWidth={3}\n            activeDot={<CustomizeActivedDotTempMax />}\n            dot={{ r: 2 }}\n          />\n          <Line\n            stackId=\"1\"\n            dataKey=\"precipitation\"\n            stroke=\"rgba(51, 40, 33, 0.4)\"\n            strokeWidth={3}\n            strokeDasharray=\"3 3\"\n            activeDot={<CustomizeActivedDotPrecipitation />}\n            dot={{ r: 2 }}\n          />\n          <Legend />\n        </LineChart>\n      </ResponsiveContainer>\n    </ChartsWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Header = styled.h3`\n  text-align: center;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n    font-size: 32px;\n  }\n`;\n","import { Header } from './Subheader.styled';\n\nexport const Subheader = ({ text }) => {\n  return <Header>{text}</Header>;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  getAdditionalCurrentWeather,\n  getCurrentWeather,\n} from 'redux/location/locSelectors';\nimport { IndicatorUI } from 'components/Indicator/Indicator';\n\nimport { WeatherWrapper, IndicatorsWrapper } from './WeatherBox.styled';\n\nimport hot from '../../images/hot-min.png';\nimport cold from '../../images/cold-min.png';\nimport clouds from '../../images/cloud-min.png';\nimport windrose from '../../images/wind-rose-min.png';\nimport windBlow from '../../images/dashing-away-min.png';\nimport windSocket from '../../images/windsock-min.png';\nimport pressure from '../../images/pressure-min.png';\nimport uv from '../../images/uv-index-min.png';\nimport radio from '../../images/optical-radiation-min.png';\nimport { DailyChartsUI } from 'components/ChartBox/DailyCharts';\nimport { Subheader } from 'components/BoxSubheader/Subheader';\n\nconst WeatherUI = () => {\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n\n  return weather && extraWeather ? (\n    <WeatherWrapper>\n      <Subheader text=\"Today's data\" />\n      <IndicatorsWrapper>\n        <IndicatorUI\n          src={hot}\n          text=\"Max temperature:\"\n          source={`${weather.daily.temperature_2m_max[0]} °C`}\n        />\n        <IndicatorUI\n          src={cold}\n          text=\"Min temperature:\"\n          source={`${weather.daily.temperature_2m_min[0]} °C`}\n        />\n        <IndicatorUI\n          src={clouds}\n          text=\"Clouds:\"\n          source={`${extraWeather.cloud} %`}\n        />\n        <IndicatorUI\n          src={windBlow}\n          text=\"Max windgusts:\"\n          source={`${weather.daily.windgusts_10m_max[0]} km/h`}\n        />\n        <IndicatorUI\n          src={windSocket}\n          text=\"Max windspeed:\"\n          source={`${weather.daily.windspeed_10m_max[0]} km/h`}\n        />\n        <IndicatorUI\n          src={windrose}\n          text=\"Wind direction:\"\n          source={extraWeather.wind_dir}\n        />\n        <IndicatorUI\n          src={pressure}\n          text=\"Pressure:\"\n          source={`${extraWeather.pressure_mb} millibars`}\n        />\n        <IndicatorUI\n          src={radio}\n          text=\"Shortwave radiation:\"\n          source={`${weather.daily.shortwave_radiation_sum[0]} MJ/m²`}\n        />\n        <IndicatorUI src={uv} text=\"UV:\" source={`Index ${extraWeather.uv}`} />\n      </IndicatorsWrapper>\n      <Subheader text=\"7-day forecast\" />\n      <DailyChartsUI />\n    </WeatherWrapper>\n  ) : (\n    <div>No weather data available</div>\n  );\n};\n\nexport default React.memo(WeatherUI);\n","import newMoon from '../images/moonPhases/new-moon-min.png';\nimport waxingCrescent from '../images/moonPhases/waxing-crescent-min.png';\nimport firstQuarter from '../images/moonPhases/first-quarter-min.png';\nimport waxingGibbous from '../images/moonPhases/waxing-gibbous-min.png';\nimport fullMoon from '../images/moonPhases/full-moon-min.png';\nimport waningGibbous from '../images/moonPhases/waning-gibbous-min.png';\nimport lastQuarter from '../images/moonPhases/last-quarter-min.png';\nimport waningCrescent from '../images/moonPhases/waning-crescent-min.png';\n\nexport const moonPhasesPng = [\n  { phase: 'New', png: newMoon },\n  { phase: 'Waxing Crescent', png: waxingCrescent },\n  { phase: 'First Quarter', png: firstQuarter },\n  { phase: 'Waxing Gibbous', png: waxingGibbous },\n  { phase: 'Full' || 'Full moon', png: fullMoon },\n  { phase: 'Waning Gibbous', png: waningGibbous },\n  { phase: 'Third Quarter' || 'Last quarter', png: lastQuarter },\n  { phase: 'Waning Crescent', png: waningCrescent },\n];\n","import { IndicatorUI } from 'components/Indicator/Indicator';\n\nimport styled from 'styled-components';\n\nexport const AstroWrapper = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  padding: 32px 16px;\n  display: flex;\n  gap: 16px;\n  flex-direction: column;\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.23);\n  border-radius: 30px;\n  box-shadow: inset -5px -5px 9px rgba(255, 255, 255, 0.45),\n    inset 5px 5px 9px rgba(94, 104, 121, 0.3);\n  backdrop-filter: blur(5.3px);\n  -webkit-backdrop-filter: blur(5.3px);\n  border: 1px solid rgba(255, 255, 255, 0.77);\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n\n  @media screen and (min-width: 768px) {\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 56px 32px;\n  }\n`;\n\nexport const SunBox = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const MoonBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  column-gap: 32px;\n  row-gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const AstroIndicator = styled(IndicatorUI)`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MoonImg = styled.img`\n  width: 60%;\n  height: auto;\n  margin: 0;\n\n  @media screen and (min-width: 768px) {\n    width: calc(50% - 32px);\n    height: auto;\n  }\n`;\n\nexport const MoonIndicatorsWrapper = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  row-gap: 16px;\n  width: max-content;\n  width: 100%;\n\n  & li {\n    box-sizing: border-box;\n    width: 80%;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: column;\n    width: calc(50% - 16px);\n\n    & li {\n      width: 100%;\n    }\n  }\n`;\n\nexport const SunIndicatorsWrapper = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  row-gap: 16px;\n  column-gap: 32px;\n  width: 100%;\n\n  & li {\n    box-sizing: border-box;\n    width: 100%;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n\n    & li {\n      width: calc(50% - 16px);\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAstroDataFromWeatherApi } from 'redux/location/locOperations';\nimport { getAstroData } from 'redux/location/locSelectors';\nimport { moonPhasesPng } from 'utils/moonPhases';\nimport moonrise from '../../images/moonrise-min.png';\nimport moonset from '../../images/moonset-min.png';\nimport phase from '../../images/waxing-gibbous-min.png';\nimport moon from '../../images/moon-min.png';\nimport sunrise from '../../images/sunrise-min.png';\nimport sunset from '../../images/sunset-min.png';\n\nimport {\n  AstroWrapper,\n  MoonBox,\n  SunBox,\n  MoonImg,\n  AstroIndicator,\n  MoonIndicatorsWrapper,\n  SunIndicatorsWrapper,\n} from './AstroBox.styled';\n\nfunction AstroUI() {\n  const astro = useSelector(getAstroData);\n  const moonPhase = astro.moon_phase;\n  const [moonPng, setMoonPng] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (astro) {\n      const moonImg = moonPhasesPng.find(\n        cond => cond.phase.toLowerCase() === moonPhase.toLowerCase()\n      ).png;\n      setMoonPng(moonImg);\n      return;\n    }\n    dispatch(fetchAstroDataFromWeatherApi());\n  }, [dispatch, astro, moonPhase]);\n\n  return astro && moonPng ? (\n    <AstroWrapper>\n      <MoonBox>\n        <MoonImg src={moonPng} alt=\"moon phase\" loading=\"lazy\" />\n        <MoonIndicatorsWrapper>\n          <AstroIndicator\n            src={moon}\n            text=\"Moon illumination:\"\n            source={`${astro.moon_illumination} %`}\n          />\n          <AstroIndicator\n            src={phase}\n            text=\"Moon phase:\"\n            source={`${astro.moon_phase}`}\n          />\n          <AstroIndicator\n            src={moonrise}\n            text=\"Moonrise:\"\n            source={`${astro.moonrise}`}\n          />\n          <AstroIndicator\n            src={moonset}\n            text=\"Moonset:\"\n            source={`${astro.moonset}`}\n          />\n        </MoonIndicatorsWrapper>\n      </MoonBox>\n      <SunBox>\n        <SunIndicatorsWrapper>\n          <AstroIndicator\n            src={sunrise}\n            text=\"Sunrise:\"\n            source={`${astro.sunrise}`}\n          />\n          <AstroIndicator\n            src={sunset}\n            text=\"Sunset:\"\n            source={`${astro.sunset}`}\n          />\n        </SunIndicatorsWrapper>\n      </SunBox>\n    </AstroWrapper>\n  ) : (\n    <div>No astro data available</div>\n  );\n}\n\nexport default React.memo(AstroUI);\n","import styled from 'styled-components';\n\nexport const ButtonMain = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  height: 50px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p =>\n    p.color === 'blue' ? p.theme.colors.accentBlue : p.theme.colors.textGrey};\n  text-align: center;\n  text-transform: uppercase;\n  border: none;\n  background-color: transparent;\n\n  @media screen and (min-width: 768px) {\n    height: 70px;\n  }\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    display: inline-block;\n    width: calc(100%);\n    height: 40px;\n    border: 4px solid\n      ${p =>\n        p.color === 'blue'\n          ? p.theme.colors.accentBlue\n          : p.color === 'pink'\n          ? p.theme.colors.accentPink\n          : p.color === 'violet'\n          ? p.theme.colors.accentViolet\n          : p.theme.colors.iconsFill};\n    border-radius: 50px;\n    z-index: -10;\n\n    @media screen and (min-width: 768px) {\n      width: calc(100%);\n      height: 50px;\n    }\n  }\n\n  &:before {\n    bottom: 0;\n    left: 0;\n    background-color: ${p =>\n      p.selected ? p.theme.colors.bgYellow : 'transparent'};\n    transition: transform 0.3s, background-color 0.3s;\n  }\n\n  &:after {\n    top: 10px;\n    left: 0px;\n    opacity: 0.3;\n    transition: transform 0.3s, opacity 0.3s;\n\n    @media screen and (min-width: 768px) {\n      left: 10px;\n      top: 0px;\n    }\n  }\n\n  // Hover\n\n  &:hover {\n    span {\n      color: ${p => p.theme.colors.mainLight};\n      transform: translate(0px, -5px);\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n    &:before {\n      background-color: ${p =>\n        p.color === 'blue'\n          ? p.theme.colors.accentBlue\n          : p.theme.colors.textGrey};\n      transform: translate(0px, -5px);\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n    &:after {\n      transform: translate(0px, 5px);\n      opacity: 0;\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n  }\n\n  // Active\n  &:active {\n    &:before {\n      background-color: ${p => p.theme.colors.bgYellow};\n    }\n  }\n`;\n\nexport const ButtonText = styled.span`\n  display: inline-flex;\n  position: relative;\n  top: 5%;\n  left: 2%;\n  z-index: 1000;\n  transition: transform 0.3s, color 0.2s;\n\n  @media screen and (min-width: 768px) {\n    top: 10%;\n    left: 0px;\n  }\n`;\n","import { ButtonMain, ButtonText } from './Button.styled';\n\nexport const ButtonUI = ({ text, type, onClick, selected }) => {\n  return (\n    <ButtonMain selected={selected} type={type} onClick={onClick}>\n      <ButtonText>{text}</ButtonText>\n    </ButtonMain>\n  );\n};\n","import daySun from '../images/conditions/day-sun-min.png';\nimport dayClouds from '../images/conditions/day-clouds-min.png';\nimport dayRain from '../images/conditions/day-rain-min.png';\nimport daySnow from '../images/conditions/day-snow-min.png';\nimport dayStorm from '../images/conditions/day-storm-min.png';\nimport dayWind from '../images/conditions/day-wind-min.png';\n\nimport nightMoon from '../images/conditions/night-moon-min.png';\nimport nightClouds from '../images/conditions/night-clouds-min.png';\nimport nightRain from '../images/conditions/night-rain-min.png';\nimport nightWind from '../images/conditions/night-wind-min.png';\nimport nightSnow from '../images/conditions/night-snow-min.png';\nimport nightStorm from '../images/conditions/night-storm-min.png';\n\nexport const conditionsWeatherApi = [\n  {\n    code: 1000,\n    day: 'Sunny',\n    night: 'Clear',\n    icon: 113,\n    png: [daySun, nightMoon],\n  },\n  {\n    code: 1003,\n    day: 'Partly cloudy',\n    night: 'Partly cloudy',\n    icon: 116,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1006,\n    day: 'Cloudy',\n    night: 'Cloudy',\n    icon: 119,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1009,\n    day: 'Overcast',\n    night: 'Overcast',\n    icon: 122,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1030,\n    day: 'Mist',\n    night: 'Mist',\n    icon: 143,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1063,\n    day: 'Patchy rain possible',\n    night: 'Patchy rain possible',\n    icon: 176,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1066,\n    day: 'Patchy snow possible',\n    night: 'Patchy snow possible',\n    icon: 179,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1069,\n    day: 'Patchy sleet possible',\n    night: 'Patchy sleet possible',\n    icon: 182,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1072,\n    day: 'Patchy freezing drizzle possible',\n    night: 'Patchy freezing drizzle possible',\n    icon: 185,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1087,\n    day: 'Thundery outbreaks possible',\n    night: 'Thundery outbreaks possible',\n    icon: 200,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1114,\n    day: 'Blowing snow',\n    night: 'Blowing snow',\n    icon: 227,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1117,\n    day: 'Blizzard',\n    night: 'Blizzard',\n    icon: 230,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1135,\n    day: 'Fog',\n    night: 'Fog',\n    icon: 248,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1147,\n    day: 'Freezing fog',\n    night: 'Freezing fog',\n    icon: 260,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1150,\n    day: 'Patchy light drizzle',\n    night: 'Patchy light drizzle',\n    icon: 263,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1153,\n    day: 'Light drizzle',\n    night: 'Light drizzle',\n    icon: 266,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1168,\n    day: 'Freezing drizzle',\n    night: 'Freezing drizzle',\n    icon: 281,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1171,\n    day: 'Heavy freezing drizzle',\n    night: 'Heavy freezing drizzle',\n    icon: 284,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1180,\n    day: 'Patchy light rain',\n    night: 'Patchy light rain',\n    icon: 293,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1183,\n    day: 'Light rain',\n    night: 'Light rain',\n    icon: 296,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1186,\n    day: 'Moderate rain at times',\n    night: 'Moderate rain at times',\n    icon: 299,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1189,\n    day: 'Moderate rain',\n    night: 'Moderate rain',\n    icon: 302,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1192,\n    day: 'Heavy rain at times',\n    night: 'Heavy rain at times',\n    icon: 305,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1195,\n    day: 'Heavy rain',\n    night: 'Heavy rain',\n    icon: 308,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1198,\n    day: 'Light freezing rain',\n    night: 'Light freezing rain',\n    icon: 311,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1201,\n    day: 'Moderate or heavy freezing rain',\n    night: 'Moderate or heavy freezing rain',\n    icon: 314,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1204,\n    day: 'Light sleet',\n    night: 'Light sleet',\n    icon: 317,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1207,\n    day: 'Moderate or heavy sleet',\n    night: 'Moderate or heavy sleet',\n    icon: 320,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1210,\n    day: 'Patchy light snow',\n    night: 'Patchy light snow',\n    icon: 323,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1213,\n    day: 'Light snow',\n    night: 'Light snow',\n    icon: 326,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1216,\n    day: 'Patchy moderate snow',\n    night: 'Patchy moderate snow',\n    icon: 329,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1219,\n    day: 'Moderate snow',\n    night: 'Moderate snow',\n    icon: 332,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1222,\n    day: 'Patchy heavy snow',\n    night: 'Patchy heavy snow',\n    icon: 335,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1225,\n    day: 'Heavy snow',\n    night: 'Heavy snow',\n    icon: 338,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1237,\n    day: 'Ice pellets',\n    night: 'Ice pellets',\n    icon: 350,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1240,\n    day: 'Light rain shower',\n    night: 'Light rain shower',\n    icon: 353,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1243,\n    day: 'Moderate or heavy rain shower',\n    night: 'Moderate or heavy rain shower',\n    icon: 356,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1246,\n    day: 'Torrential rain shower',\n    night: 'Torrential rain shower',\n    icon: 359,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1249,\n    day: 'Light sleet showers',\n    night: 'Light sleet showers',\n    icon: 362,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1252,\n    day: 'Moderate or heavy sleet showers',\n    night: 'Moderate or heavy sleet showers',\n    icon: 365,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1255,\n    day: 'Light snow showers',\n    night: 'Light snow showers',\n    icon: 368,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1258,\n    day: 'Moderate or heavy snow showers',\n    night: 'Moderate or heavy snow showers',\n    icon: 371,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1261,\n    day: 'Light showers of ice pellets',\n    night: 'Light showers of ice pellets',\n    icon: 374,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1264,\n    day: 'Moderate or heavy showers of ice pellets',\n    night: 'Moderate or heavy showers of ice pellets',\n    icon: 377,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1273,\n    day: 'Patchy light rain with thunder',\n    night: 'Patchy light rain with thunder',\n    icon: 386,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1276,\n    day: 'Moderate or heavy rain with thunder',\n    night: 'Moderate or heavy rain with thunder',\n    icon: 389,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1279,\n    day: 'Patchy light snow with thunder',\n    night: 'Patchy light snow with thunder',\n    icon: 392,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1282,\n    day: 'Moderate or heavy snow with thunder',\n    night: 'Moderate or heavy snow with thunder',\n    icon: 395,\n    png: [dayStorm, nightStorm],\n  },\n];\n","import { Indicator } from 'components/Indicator/Indicator.styled';\nimport styled from 'styled-components';\n\nexport const DataWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 16px;\n  margin: 0 auto;\n  border-radius: 30px;\n  padding: 32px 16px;\n  background: rgba(255, 255, 255, 0.63);\n  /* box-shadow: inset -5px -5px 9px rgba(255, 255, 255, 0.45),\n    inset 5px 5px 9px rgba(94, 104, 121, 0.3); */\n  box-shadow: -5px -5px 80px #fff, 5px 5px 20px #babecc;\n  backdrop-filter: blur(2.3px);\n  -webkit-backdrop-filter: blur(2.3px);\n  /* border: 1px solid rgba(255, 255, 255, 0.77); */\n\n  @media screen and (min-width: 768px) {\n    padding: 32px 56px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 70%;\n  }\n`;\n\nexport const WeatherDataWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 16px;\n  width: 100%;\n  position: relative;\n`;\n\nexport const WeatherInfoWrapper = styled.div`\n  padding: 32px 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-end;\n  gap: 16px;\n  border-radius: 30px;\n  background: rgba(255, 255, 255, 0.28);\n  border-radius: 16px;\n  /* box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1); */\n  /* box-shadow: -2px -2px 5px white, 3px 3px 5px rgba(0, 0, 0, 0.1); */\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n\n  @media screen and (min-width: 768px) {\n    padding: 56px 32px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40vw;\n  top: -25%;\n  left: -10%;\n  position: absolute;\n\n  & img {\n    width: 100%;\n  }\n\n  @media screen and (min-width: 420px) {\n    width: 170px;\n  }\n\n  @media screen and (min-width: 768px) {\n    position: static;\n    width: 30vw;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 40%;\n  }\n`;\n\nexport const CityName = styled.p`\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n  }\n`;\n\nexport const WeatherConditions = styled.div`\n  padding: 10px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.mainLight};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  background-color: ${p => p.theme.colors.mainAccentPink};\n  border-radius: ${p => p.theme.radii.main};\n`;\n\nexport const IndicatorsWrapper = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n    align-items: stretch;\n  }\n`;\n\nexport const ChanceOfIndicator = styled(Indicator)`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${p => p.theme.colors.bgGrey};\n  color: #8495b2;\n  gap: 8px;\n\n  & div {\n    display: flex;\n  }\n\n  & img {\n    margin-right: 8px;\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    align-items: flex-start;\n  }\n`;\n\nexport const TemperatureWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  flex-grow: 1;\n`;\n\nexport const FeelsLike = styled.span`\n  font-size: 20px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.textGrey};\n`;\nexport const Temperature = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-family: ${p => p.theme.fonts.main};\n\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 96px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  & img {\n    width: 40px;\n  }\n\n  & span {\n    font-weight: ${p => p.theme.fontWeights[0]};\n    font-size: 24px;\n  }\n`;\n\nexport const ButtonsWrapper = styled.ul`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n\n  gap: 16px;\n\n  & li {\n    display: inline-flex;\n    width: calc(50% - 16px);\n  }\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-between;\n\n    & li {\n      width: calc(100% / 3 - 32px);\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { HourlyChartsUI } from 'components/ChartBox/HourlyCharts';\nimport WeatherUI from 'components/WeatherBox/WeatherBox';\nimport AstroUI from 'components/AstroBox/AstroBox';\nimport { ButtonUI } from 'components/Button/Button';\nimport { IndicatorText } from 'components/Indicator/Indicator.styled';\nimport { IndicatorUI } from 'components/Indicator/Indicator';\n\nimport {\n  getAdditionalCurrentWeather,\n  getCityName,\n  getCountry,\n  getCurrentWeather,\n  getDayTime,\n  getForcast,\n} from 'redux/location/locSelectors';\nimport { conditionsWeatherApi } from 'utils/conditionsWeatherApi';\nimport {\n  ChanceOfIndicator,\n  CityName,\n  DataWrapper,\n  FeelsLike,\n  IconWrapper,\n  IndicatorsWrapper,\n  Temperature,\n  TemperatureWrapper,\n  WeatherConditions,\n  WeatherDataWrapper,\n  WeatherInfoWrapper,\n  ButtonsWrapper,\n} from './MainBox.styled';\n\nimport termometrPlus from '../../images/thermomater-max-min.png';\nimport termometrMinus from '../../images/thermomater-min-min.png';\nimport percipitationImg from '../../images/percipitation-min.png';\nimport windImg from '../../images/wind-min.png';\nimport humidityImg from '../../images/humidity-min.png';\nimport rain from '../../images/rain-min.png';\nimport snow from '../../images/snow-min.png';\n\nexport const MainBoxUI = () => {\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n  const forecast = useSelector(getForcast);\n  const dayTime = useSelector(getDayTime);\n  const city = useSelector(getCityName);\n  const country = useSelector(getCountry);\n\n  //   console.log(forecast[0].day.daily_chance_of_rain);\n\n  const [showWeather, setShowWeather] = useState(false);\n  const [showAstro, setShowAstro] = useState(false);\n  const [showAir, setShowAir] = useState(false);\n  const [weatherPng, setWeatherPng] = useState(null);\n\n  useEffect(() => {\n    if (extraWeather) {\n      const weatherCode = extraWeather.condition.code;\n      const conditionPng = conditionsWeatherApi.find(\n        cond => cond.code === weatherCode\n      ).png;\n      dayTime ? setWeatherPng(conditionPng[0]) : setWeatherPng(conditionPng[1]);\n    }\n  }, [dayTime, extraWeather]);\n\n  const onWeatherBtnClick = () => {\n    setShowWeather(!showWeather);\n    setShowAstro(false);\n    setShowAir(false);\n  };\n\n  const onShowAstroBtnClick = () => {\n    setShowAstro(!showAstro);\n    setShowAir(false);\n    setShowWeather(false);\n  };\n\n  const onShowAirBtnClick = () => {\n    setShowAir(!showAir);\n    setShowAstro(false);\n    setShowWeather(false);\n  };\n\n  return (\n    <DataWrapper>\n      {weather && extraWeather ? (\n        <>\n          <WeatherDataWrapper>\n            <IconWrapper>\n              <img\n                src={weatherPng}\n                alt={extraWeather.condition.text}\n                loading=\"lazy\"\n              />\n            </IconWrapper>\n            <TemperatureWrapper>\n              <WeatherConditions>\n                <span>{extraWeather.condition.text}</span>\n              </WeatherConditions>\n              <CityName>\n                {city}, {country}\n              </CityName>\n              <Temperature>\n                <img\n                  src={\n                    extraWeather.temp_c >= 0 ? termometrPlus : termometrMinus\n                  }\n                  alt=\"temperature\"\n                  loading=\"lazy\"\n                />\n                {extraWeather.temp_c} <span>°C</span>\n              </Temperature>\n              <FeelsLike>Feels like {extraWeather.feelslike_c} °C</FeelsLike>\n              {/* <FeelsLike>\n                Local time {weather.current_weather.time.slice(11)}\n              </FeelsLike> */}\n            </TemperatureWrapper>\n          </WeatherDataWrapper>\n          <WeatherInfoWrapper>\n            <IndicatorsWrapper>\n              <ChanceOfIndicator>\n                <div>\n                  <img src={rain} alt=\"rain\" loading=\"lazy\" />\n                  <IndicatorText>Chance of rain:</IndicatorText>\n                  <span>{forecast[0].day.daily_chance_of_rain} %</span>\n                </div>\n                <div>\n                  <img src={snow} alt=\"snow\" loading=\"lazy\" />\n                  <IndicatorText>Chance of snow:</IndicatorText>\n                  <span>{forecast[0].day.daily_chance_of_snow} %</span>\n                </div>\n              </ChanceOfIndicator>\n              <IndicatorUI\n                color=\"blue\"\n                src={percipitationImg}\n                text=\"Precipitation:\"\n                source={`${weather.daily.precipitation_sum[0]} mm`}\n              />\n              <IndicatorUI\n                color=\"pink\"\n                src={humidityImg}\n                text=\"Humidity:\"\n                source={`${extraWeather.humidity} %`}\n              />\n\n              <IndicatorUI\n                color=\"violet\"\n                src={windImg}\n                text=\"Windspeed:\"\n                source={`${weather.current_weather.windspeed} km/h`}\n              />\n            </IndicatorsWrapper>\n            <HourlyChartsUI />\n            <ButtonsWrapper>\n              <li>\n                <ButtonUI\n                  type=\"button\"\n                  onClick={onWeatherBtnClick}\n                  text=\"Details\"\n                  selected={showWeather}\n                />\n              </li>\n              <li>\n                <ButtonUI\n                  type=\"button\"\n                  onClick={onShowAstroBtnClick}\n                  text=\"Astro\"\n                  selected={showAstro}\n                />\n              </li>\n              <li>\n                <ButtonUI\n                  type=\"button\"\n                  onClick={onShowAirBtnClick}\n                  text=\"Air quality\"\n                  selected={showAir}\n                />\n              </li>\n            </ButtonsWrapper>\n          </WeatherInfoWrapper>\n          {showWeather && <WeatherUI />}\n          {showAstro && <AstroUI />}\n        </>\n      ) : (\n        <div>No data to display</div>\n      )}\n    </DataWrapper>\n  );\n};\n","import { CardUI } from 'components/Card/Card';\nimport { Container } from 'components/Container/Container';\nimport { Loader } from 'components/Loader/Loader';\nimport { MainBoxUI } from 'components/MainBox/MainBox';\nimport { useEffect } from 'react';\nimport { useGeolocated } from 'react-geolocated';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchAstroDataFromWeatherApi,\n  fetchCity,\n  fetchCurrentWeather,\n  fetchCurrentWeatherFromWeatherApi,\n  fetchWeatherForecastFromWeatherApi,\n} from 'redux/location/locOperations';\nimport {\n  getAdditionalCurrentWeather,\n  getCurrentLatitude,\n  getCurrentLongitude,\n  getCurrentWeather,\n  getTimezone,\n} from 'redux/location/locSelectors';\nimport { setLatitude, setLongitude } from 'redux/location/locSlice';\n\nconst Homepage = () => {\n  const { coords, isGeolocationAvailable, isGeolocationEnabled } =\n    useGeolocated({\n      positionOptions: {\n        enableHighAccuracy: false,\n      },\n\n      userDecisionTimeout: undefined,\n      suppressLocationOnMount: false,\n    });\n\n  const dispatch = useDispatch();\n  const latitude = useSelector(getCurrentLatitude);\n  const longitude = useSelector(getCurrentLongitude);\n\n  const timezone = useSelector(getTimezone);\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n\n  useEffect(() => {\n    if (coords) {\n      dispatch(setLatitude(coords.latitude));\n      dispatch(setLongitude(coords.longitude));\n      dispatch(fetchCity());\n\n      // ----------check exact coordinates\n      // dispatch(setLatitude(48.33));\n      // dispatch(setLongitude(34.77));\n\n      // dispatch(fetchTimezone());\n    }\n    return;\n  }, [coords, dispatch]);\n\n  useEffect(() => {\n    if (extraWeather) {\n      return;\n    }\n    if (coords) {\n      dispatch(fetchAstroDataFromWeatherApi());\n      dispatch(fetchCurrentWeatherFromWeatherApi());\n      dispatch(fetchWeatherForecastFromWeatherApi());\n    }\n  }, [dispatch, extraWeather, coords]);\n\n  useEffect(() => {\n    if (weather) {\n      return;\n    }\n    if (timezone) {\n      dispatch(fetchCurrentWeather());\n    }\n  }, [dispatch, timezone, weather]);\n\n  return (\n    <main>\n      <CardUI />\n      <Container>\n        {!isGeolocationAvailable ? (\n          <div>Your browser does not support Geolocation</div>\n        ) : !isGeolocationEnabled ? (\n          <div>Geolocation is not enabled</div>\n        ) : latitude && longitude ? (\n          <MainBoxUI />\n        ) : (\n          <div>\n            <Loader />\n          </div>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default Homepage;\n"],"names":["Card","styled","getCityName","state","location","city","getCountry","country","getCityImages","image","getCurrentLongitude","longitude","getCurrentLatitude","latitude","getCurrentWeather","weather","getAdditionalCurrentWeather","weatherAdditional","getDayTime","daytime","getTimezone","timezone","getAstroData","astrodata","getForcast","weatherForecast","getDailyForcast","daily","getHourlyForcast","hourly","useMediaQuery","query","mediaMatch","window","matchMedia","useState","matches","setMatches","useEffect","handler","e","addListener","removeListener","CardUI","children","isRowBased","useSelector","images","setImage","imageMob","setImageMob","dispatch","useDispatch","fetchPexelsImage","length","landscape","portrait","random","Math","floor","style","backgroundImage","bgImg","bgImgMob","backgroundRepeat","backgroundSize","renderCustomAxisTick","x","y","path","payload","value","width","height","viewBox","href","sprite","CustomizedDot","props","cx","cy","currentTime","current_weather","time","slice","CustomizeActivedDot","CustomizeActivedDotTempMin","CustomizeActivedDotTempMax","CustomizeActivedDotPrecipitation","ChartsWrapper","HourlyChartsUI","hourlyForecast","hours","map","el","temp","temperature_2m","code","weathercode","hourlyData","index","temperature","ResponsiveContainer","AreaChart","data","fill","margin","top","right","left","bottom","Tooltip","YAxis","interval","XAxis","dataKey","xAxisId","stroke","tick","Area","type","stackId","strokeWidth","activeDot","dot","Indicator","p","theme","radii","main","fonts","fontWeights","lineHeights","color","colors","accentBlue","accentPink","accentViolet","textGrey","bgBlue","bgPink","bgViolet","bgGrey","IndicatorText","IndicatorImg","IndicatorUI","src","text","source","alt","loading","WeatherWrapper","IndicatorsWrapper","DailyChartsUI","dailyForecast","dates","date","month","String","toLocaleString","day","getDate","padStart","formatDate","Date","tempMin","temperature_2m_min","tempMax","temperature_2m_max","precipitation","precipitation_sum","dailyData","dateShort","min","max","LineChart","Line","r","strokeDasharray","Legend","Header","mainDark","Subheader","WeatherUI","extraWeather","hot","cold","clouds","cloud","windBlow","windgusts_10m_max","windSocket","windspeed_10m_max","windrose","wind_dir","pressure","pressure_mb","radio","shortwave_radiation_sum","uv","React","moonPhasesPng","phase","png","AstroWrapper","SunBox","MoonBox","AstroIndicator","MoonImg","MoonIndicatorsWrapper","SunIndicatorsWrapper","AstroUI","astro","moonPhase","moon_phase","moonPng","setMoonPng","moonImg","find","cond","toLowerCase","fetchAstroDataFromWeatherApi","moon","moon_illumination","moonrise","moonset","sunrise","sunset","ButtonMain","iconsFill","selected","bgYellow","mainLight","ButtonText","ButtonUI","onClick","conditionsWeatherApi","night","icon","daySun","nightMoon","dayClouds","nightClouds","dayWind","nightWind","dayRain","nightRain","daySnow","nightSnow","dayStorm","nightStorm","DataWrapper","WeatherDataWrapper","WeatherInfoWrapper","IconWrapper","CityName","WeatherConditions","mainAccentPink","ChanceOfIndicator","TemperatureWrapper","FeelsLike","Temperature","ButtonsWrapper","MainBoxUI","forecast","dayTime","showWeather","setShowWeather","showAstro","setShowAstro","showAir","setShowAir","weatherPng","setWeatherPng","weatherCode","condition","conditionPng","temp_c","termometrPlus","termometrMinus","feelslike_c","rain","daily_chance_of_rain","snow","daily_chance_of_snow","percipitationImg","humidityImg","humidity","windImg","windspeed","useGeolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","undefined","suppressLocationOnMount","coords","isGeolocationAvailable","isGeolocationEnabled","setLatitude","setLongitude","fetchCity","fetchCurrentWeatherFromWeatherApi","fetchWeatherForecastFromWeatherApi","fetchCurrentWeather","Container","Loader"],"sourceRoot":""}