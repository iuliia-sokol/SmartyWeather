{"version":3,"file":"static/js/469.8feee578.chunk.js","mappings":"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","sources":["components/TextLine/TextLine.styled.js","components/TextLine/TextLine.jsx","pages/Homepage/Homepage.jsx","../node_modules/react-geolocated/dist-modules/index.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\n\nconst text = keyframes`\nfrom {\n    transform: translateX(100%);\n  }\n  to {\n    transform: translateX(-100%);\n  }\n  `;\n\nexport const TextContainer = styled.div`\n  /* position: absolute; */\n  border-radius: 5px;\n  overflow: hidden;\n  margin-bottom: 16px;\n  padding: 8px;\n`;\n\nexport const RunningText = styled.div`\n  font-size: 20px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.textGrey};\n  width: max-content;\n  display: inline-flex;\n  animation: ${text} 25s linear infinite;\n  text-shadow: 2px 2px 2px #fbfff3;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import { RunningText, TextContainer } from './TextLine.styled';\n\nexport const TextLine = ({ text }) => {\n  return (\n    <TextContainer>\n      <RunningText>{text}</RunningText>\n    </TextContainer>\n  );\n};\n","import { CardUI } from 'components/Card/Card';\nimport { DEFAULT_LATITUDE, DEFAULT_LONGITUDE } from 'utils/consts/consts';\nimport { Container } from 'components/Container/Container';\nimport { Loader } from 'components/Loader/Loader';\nimport { MainBoxUI } from 'components/MainBox/MainBox';\nimport { TextLine } from 'components/TextLine/TextLine';\nimport React, { useEffect } from 'react';\nimport { useGeolocated } from 'react-geolocated';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchAirQuality,\n  fetchAstroDataFromWeatherApi,\n  fetchCity,\n  fetchCurrentWeather,\n  fetchCurrentWeatherFromWeatherApi,\n  fetchPexelsImage,\n  fetchWeatherForecastFromWeatherApi,\n} from 'redux/location/locOperations';\nimport {\n  getAdditionalCurrentWeather,\n  getCityImages,\n  getCityName,\n  getCurrentLatitude,\n  getCurrentLongitude,\n  getTimezone,\n  getCurrentWeather,\n} from 'redux/location/locSelectors';\nimport {\n  setInitState,\n  setLatitude,\n  setLongitude,\n} from 'redux/location/locSlice';\n\nconst Homepage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(setInitState());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { coords, isGeolocationAvailable, isGeolocationEnabled } =\n    useGeolocated({\n      positionOptions: {\n        enableHighAccuracy: false,\n      },\n\n      userDecisionTimeout: undefined,\n      suppressLocationOnMount: false,\n    });\n\n  const latitude = useSelector(getCurrentLatitude);\n  const longitude = useSelector(getCurrentLongitude);\n  const timezone = useSelector(getTimezone);\n  const city = useSelector(getCityName);\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n\n  useEffect(() => {\n    if (coords) {\n      dispatch(setLatitude(coords.latitude));\n      dispatch(setLongitude(coords.longitude));\n      dispatch(fetchCity(coords.latitude, coords.longitude));\n      dispatch(fetchAstroDataFromWeatherApi(coords.latitude, coords.longitude));\n      dispatch(\n        fetchCurrentWeatherFromWeatherApi(coords.latitude, coords.longitude)\n      );\n      dispatch(\n        fetchWeatherForecastFromWeatherApi(coords.latitude, coords.longitude)\n      );\n      if (city) {\n        dispatch(fetchPexelsImage(city));\n      }\n    }\n    if (!isGeolocationAvailable || !isGeolocationEnabled || !city) {\n      dispatch(setLatitude(DEFAULT_LATITUDE));\n      dispatch(setLongitude(DEFAULT_LONGITUDE));\n      dispatch(fetchCity({ DEFAULT_LATITUDE, DEFAULT_LONGITUDE }));\n      dispatch(\n        fetchAstroDataFromWeatherApi({ DEFAULT_LATITUDE, DEFAULT_LONGITUDE })\n      );\n      dispatch(\n        fetchCurrentWeatherFromWeatherApi({\n          DEFAULT_LATITUDE,\n          DEFAULT_LONGITUDE,\n        })\n      );\n      dispatch(\n        fetchWeatherForecastFromWeatherApi({\n          DEFAULT_LATITUDE,\n          DEFAULT_LONGITUDE,\n        })\n      );\n      dispatch(fetchPexelsImage('Dnipro'));\n    }\n    return;\n  }, [city, coords, dispatch, isGeolocationAvailable, isGeolocationEnabled]);\n\n  useEffect(() => {\n    if (extraWeather && timezone) {\n      dispatch(fetchCurrentWeather({ latitude, longitude, timezone }));\n      dispatch(fetchAirQuality({ latitude, longitude, timezone }));\n    }\n  }, [dispatch, extraWeather, latitude, longitude, timezone]);\n\n  return (\n    <main\n      style={{\n        minHeight: '70vh',\n      }}\n    >\n      {city && <CardUI selector={getCityImages} page=\"home\" />}\n      {!isGeolocationAvailable && (\n        <TextLine text=\"Due to your browser does not support geolocation, the default location data is being shown. Please update your browser, allow the location access and turn on geolocation on your device.\" />\n      )}\n      {!isGeolocationEnabled && (\n        <TextLine text=\"Due to the geolocation is not enabled on your device, the default location data is being shown. Please enable geolocation on your device to get your current location data.\" />\n      )}\n      <Container>\n        {latitude && longitude && weather ? (\n          <>\n            <MainBoxUI />\n          </>\n        ) : (\n          <div>\n            <Loader />\n          </div>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default React.memo(Homepage);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useGeolocated = void 0;\nconst react_1 = require(\"react\");\n/**\n * Hook abstracting away the interaction with the Geolocation API.\n * @param config - the configuration to use\n */\nfunction useGeolocated(config = {}) {\n    const { positionOptions = {\n        enableHighAccuracy: true,\n        maximumAge: 0,\n        timeout: Infinity,\n    }, isOptimisticGeolocationEnabled = true, userDecisionTimeout = undefined, suppressLocationOnMount = false, watchPosition = false, geolocationProvider = typeof navigator !== \"undefined\"\n        ? navigator.geolocation\n        : undefined, onError, onSuccess, } = config;\n    const userDecisionTimeoutId = (0, react_1.useRef)(0);\n    const isCurrentlyMounted = (0, react_1.useRef)(true);\n    const watchId = (0, react_1.useRef)(0);\n    const [isGeolocationEnabled, setIsGeolocationEnabled] = (0, react_1.useState)(isOptimisticGeolocationEnabled);\n    const [coords, setCoords] = (0, react_1.useState)();\n    const [timestamp, setTimestamp] = (0, react_1.useState)();\n    const [positionError, setPositionError] = (0, react_1.useState)();\n    const cancelUserDecisionTimeout = (0, react_1.useCallback)(() => {\n        if (userDecisionTimeoutId.current) {\n            window.clearTimeout(userDecisionTimeoutId.current);\n        }\n    }, []);\n    const handlePositionError = (0, react_1.useCallback)((error) => {\n        cancelUserDecisionTimeout();\n        if (isCurrentlyMounted.current) {\n            setCoords(() => undefined);\n            setIsGeolocationEnabled(false);\n            setPositionError(error);\n        }\n        onError === null || onError === void 0 ? void 0 : onError(error);\n    }, [onError, cancelUserDecisionTimeout]);\n    const handlePositionSuccess = (0, react_1.useCallback)((position) => {\n        cancelUserDecisionTimeout();\n        if (isCurrentlyMounted.current) {\n            setCoords(position.coords);\n            setTimestamp(position.timestamp);\n            setIsGeolocationEnabled(true);\n            setPositionError(() => undefined);\n        }\n        onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(position);\n    }, [onSuccess, cancelUserDecisionTimeout]);\n    const getPosition = (0, react_1.useCallback)(() => {\n        if (!geolocationProvider ||\n            !geolocationProvider.getCurrentPosition ||\n            !geolocationProvider.watchPosition) {\n            throw new Error(\"The provided geolocation provider is invalid\");\n        }\n        const funcPosition = (watchPosition\n            ? geolocationProvider.watchPosition\n            : geolocationProvider.getCurrentPosition).bind(geolocationProvider);\n        if (userDecisionTimeout) {\n            userDecisionTimeoutId.current = window.setTimeout(() => {\n                handlePositionError();\n            }, userDecisionTimeout);\n        }\n        watchId.current = funcPosition(handlePositionSuccess, handlePositionError, positionOptions);\n    }, [\n        geolocationProvider,\n        watchPosition,\n        userDecisionTimeout,\n        handlePositionError,\n        handlePositionSuccess,\n        positionOptions,\n    ]);\n    (0, react_1.useEffect)(() => {\n        if (!suppressLocationOnMount) {\n            getPosition();\n        }\n        return () => {\n            cancelUserDecisionTimeout();\n            if (watchPosition && watchId.current) {\n                geolocationProvider === null || geolocationProvider === void 0 ? void 0 : geolocationProvider.clearWatch(watchId.current);\n            }\n        };\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n    return {\n        getPosition,\n        coords,\n        timestamp,\n        isGeolocationEnabled,\n        isGeolocationAvailable: Boolean(geolocationProvider),\n        positionError,\n    };\n}\nexports.useGeolocated = useGeolocated;\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["text","keyframes","TextContainer","styled","RunningText","p","theme","fonts","main","fontWeights","lineHeights","colors","textGrey","TextLine","Homepage","dispatch","useDispatch","useEffect","setInitState","useGeolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","undefined","suppressLocationOnMount","coords","isGeolocationAvailable","isGeolocationEnabled","latitude","useSelector","getCurrentLatitude","longitude","getCurrentLongitude","timezone","getTimezone","city","getCityName","weather","getCurrentWeather","extraWeather","getAdditionalCurrentWeather","setLatitude","setLongitude","fetchCity","fetchAstroDataFromWeatherApi","fetchCurrentWeatherFromWeatherApi","fetchWeatherForecastFromWeatherApi","fetchPexelsImage","DEFAULT_LATITUDE","DEFAULT_LONGITUDE","fetchCurrentWeather","fetchAirQuality","style","minHeight","Card","selector","getCityImages","page","Container","MainBox","Loader","React","exports","react_1","require","config","maximumAge","timeout","Infinity","isOptimisticGeolocationEnabled","watchPosition","geolocationProvider","navigator","geolocation","onError","onSuccess","userDecisionTimeoutId","useRef","isCurrentlyMounted","watchId","useState","setIsGeolocationEnabled","setCoords","timestamp","setTimestamp","positionError","setPositionError","cancelUserDecisionTimeout","useCallback","current","window","clearTimeout","handlePositionError","error","handlePositionSuccess","position","getPosition","getCurrentPosition","Error","funcPosition","bind","setTimeout","clearWatch","Boolean","module","arr","len","length","i","arr2","Array","__esModule","isArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","err","TypeError","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayLikeToArray","o","minLen","n","prototype","toString","slice","constructor","name","from","test"],"sourceRoot":""}