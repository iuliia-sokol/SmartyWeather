{"version":3,"file":"static/js/272.a1ca8b59.chunk.js","mappings":"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","sources":["components/Card/Card.styled.js","components/HistoryBox/HistoryBox.styled.js","components/HistoryBox/HistoryBox.jsx","components/Card/HistoryCard.styled.js","components/Card/HistoryCard.jsx","components/pages/HistoryPage/HistoryPage.styled.js","components/pages/HistoryPage/HistoryPage.jsx","hooks/useMedia.js","redux/location/locSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  background-image: ${p =>\n    p.image\n      ? p.image\n      : 'linear-gradient(47.75deg, #082276 7.07%, #030f34 97.3%), #082276;'};\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  -webkit-background-size: cover;\n  -o-background-size: cover;\n  -moz-background-size: cover;\n`;\n\nexport const View = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-size: cover;\n  z-index: -2;\n\n  background: ${p =>\n    p.dayTime\n      ? 'linear-gradient(45deg, rgba(245, 70, 66, 0.45), rgba(8, 83, 156, 0.45))'\n      : 'linear-gradient(to bottom, rgba(245, 246, 252, 0.52), rgba(117, 19, 93, 0.73))'};\n\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#002f4b', endColorstr='#00000000',GradientType=0 );\n  opacity: 0.8;\n`;\n","import styled from 'styled-components';\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-radius: 30px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 16px;\n  line-height: ${p => p.theme.lineHeights.main};\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Date = styled.h4`\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 32px;\n  margin-right: 12px;\n  align-self: flex-end;\n\n  @media screen and (min-width: 768px) {\n    font-size: 46px;\n  }\n`;\n\nexport const EventsWrapper = styled.ul`\n  position: relative;\n  background: url('https://i.imgur.com/0kjMcUe.png');\n  background-size: contain;\n  background-position: center right;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 16px;\n  padding: 32px 24px 80px 24px;\n  z-index: 1;\n  filter: brightness(0.95) sepia(30%) saturate(80%);\n  border-radius: 30px;\n  height: 70vh;\n\n  @media screen and (min-width: 768px) {\n    padding: 56px 32px 80px 32px;\n  }\n\n  clip-path: polygon(\n    0% 0%,\n    0% 93%,\n    5% 98%,\n    6% 99%,\n    8% 95%,\n    12% 94%,\n    15% 97%,\n    17% 93%,\n    20% 98%,\n    22% 97%,\n    25% 99%,\n    31% 94%,\n    35% 93%,\n    39% 96%,\n    43% 93%,\n    45% 94%,\n    47% 95%,\n    50% 92%,\n    52% 96%,\n    54% 93%,\n    58% 92%,\n    60% 95%,\n    62% 93%,\n    65% 96%,\n    69% 93%,\n    72% 93%,\n    75% 94%,\n    79% 97%,\n    81% 94%,\n    85% 93%,\n    88% 92%,\n    90% 95%,\n    93% 93%,\n    95% 92%,\n    97% 95%,\n    100% 97%,\n    100% 0%\n  );\n  overflow: auto;\n\n  ::-webkit-scrollbar {\n    width: 16px;\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n    }\n  }\n\n  ::-webkit-scrollbar-track {\n    background: #ae9d72;\n    background-image: url('https://www.transparenttextures.com/patterns/black-paper.png');\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #ae9d72;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background: #8bba98;\n  }\n`;\n\nexport const Event = styled.div`\n  & span {\n    font-weight: ${p => p.theme.fontWeights[1]};\n    font-size: 32px;\n    margin-right: 12px;\n\n    @media screen and (min-width: 768px) {\n      font-size: 46px;\n    }\n  }\n`;\n","// import { FadeInSection } from 'components/FadingList/FadingList';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDate, getHistory } from 'redux/location/locSelectors';\nimport {\n  ContentWrapper,\n  Date,\n  Event,\n  EventsWrapper,\n} from './HistoryBox.styled';\n\nfunction HistoryUI() {\n  const historyEvents = useSelector(getHistory);\n  const date = useSelector(getDate);\n  const [events, setEvents] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (historyEvents.length > 0) {\n      setEvents(historyEvents);\n    }\n  }, [dispatch, historyEvents]);\n\n  return events ? (\n    <ContentWrapper>\n      <EventsWrapper>\n        <Date>{date}</Date>\n        {events.map(el => {\n          return (\n            // <FadeInSection key={el.description}>\n            <Event key={el.description}>\n              <span>{el.year}</span> {el.description}\n            </Event>\n            // </FadeInSection>\n          );\n        })}\n      </EventsWrapper>\n    </ContentWrapper>\n  ) : (\n    <div>No history data available</div>\n  );\n}\n\nexport default React.memo(HistoryUI);\n","import styled from 'styled-components';\n\nimport paper from '../../images/old-paper.jpg';\n\nexport const View = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-image: url(${paper});\n  background-size: contain;\n\n  z-index: -2;\n\n  opacity: 0.5;\n`;\n","import { useMediaQuery } from 'hooks/useMedia';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getHistoryImages } from 'redux/location/locSelectors';\n\nimport { Card } from './Card.styled';\nimport { View } from './HistoryCard.styled';\n\nexport const HistoryCardUI = () => {\n  const isRowBased = useMediaQuery('(min-width: 1280px)');\n  const images = useSelector(getHistoryImages);\n  const [image, setImage] = useState('');\n  const [imageMob, setImageMob] = useState('');\n\n  useEffect(() => {\n    if (images.length === 0) {\n      return;\n    }\n    if (images.length === 1) {\n      setImage(images[0].landscape);\n      setImageMob(images[0].portrait);\n    }\n    if (images.length > 1) {\n      const random = Math.floor(Math.random() * images.length);\n      setImage(images[random].landscape);\n      setImageMob(images[random].portrait);\n    }\n  }, [images]);\n\n  return (\n    <Card image={!isRowBased ? `url(${imageMob})` : `url(${image})`}>\n      <View />\n    </Card>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HeaderText = styled.h3`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n  margin-top: -32px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 36px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  & img {\n    width: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    justify-content: flex-start;\n    font-size: 72px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchHistory, fetchHistoryImage } from 'redux/location/locOperations';\nimport { Container } from 'components/Container/Container';\nimport HistoryBox from 'components/HistoryBox/HistoryBox';\nimport { HistoryCardUI } from 'components/Card/HistoryCard';\nimport { HeaderText } from './HistoryPage.styled';\n\nconst HistoryPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchHistory());\n    dispatch(fetchHistoryImage());\n  }, [dispatch]);\n\n  return (\n    <main\n      style={{\n        minHeight: '70vh',\n      }}\n    >\n      <HistoryCardUI />\n      <Container>\n        <HeaderText>This day in history</HeaderText>\n        <HistoryBox />\n      </Container>\n    </main>\n  );\n};\n\nexport default HistoryPage;\n","import { useEffect, useState } from 'react';\n\nexport const useMediaQuery = query => {\n  const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};\n","export const getCityId = state => state.location.cityID;\nexport const getCityName = state => state.location.city;\nexport const getCountry = state => state.location.country;\nexport const getCityImages = state => state.location.image;\nexport const getCurrentLongitude = state => state.location.longitude;\nexport const getCurrentLatitude = state => state.location.latitude;\nexport const getCurrentWeather = state => state.location.weather;\nexport const getAdditionalCurrentWeather = state =>\n  state.location.weatherAdditional;\nexport const getDayTime = state => state.location.daytime;\nexport const getTimezone = state => state.location.timezone;\nexport const getAstroData = state => state.location.astrodata;\nexport const getForcast = state => state.location.weatherForecast;\nexport const getDailyForcast = state => state.location.weather.daily;\nexport const getHourlyForcast = state => state.location.weather.hourly;\nexport const getAirData = state => state.location.airdata;\nexport const getHistory = state => state.location.history;\nexport const getHistoryImages = state => state.location.historyImages;\nexport const getDate = state => state.location.date;\n"],"names":["Card","styled","p","image","View","dayTime","ContentWrapper","theme","fonts","main","fontWeights","lineHeights","Date","EventsWrapper","Event","HistoryUI","historyEvents","useSelector","getHistory","date","getDate","useState","events","setEvents","dispatch","useDispatch","useEffect","length","map","el","year","description","React","paper","HistoryCardUI","isRowBased","useMediaQuery","images","getHistoryImages","setImage","imageMob","setImageMob","landscape","portrait","random","Math","floor","HeaderText","colors","mainDark","fetchHistory","fetchHistoryImage","style","minHeight","Container","HistoryBox","query","mediaMatch","window","matchMedia","matches","setMatches","handler","e","addListener","removeListener","getCityName","state","location","city","getCountry","country","getCityImages","getCurrentLongitude","longitude","getCurrentLatitude","latitude","getCurrentWeather","weather","getAdditionalCurrentWeather","weatherAdditional","getDayTime","daytime","getTimezone","timezone","getAstroData","astrodata","getForcast","weatherForecast","getDailyForcast","daily","getHourlyForcast","hourly","getAirData","airdata","history","historyImages"],"sourceRoot":""}