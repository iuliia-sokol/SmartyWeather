{"version":3,"file":"static/js/146.fb63e65d.chunk.js","mappings":"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","sources":["components/Card/Card.styled.js","redux/location/locSelectors.js","hooks/useMedia.js","components/Card/Card.jsx","utils/customAxis.js","utils/customDot.js","components/ChartBox/Charts.styled.js","components/ChartBox/Charts.jsx","components/MainBox/MainBox.styled.js","components/WeatherBox/WeatherBox.styled.jsx","components/WeatherBox/WeatherBox.jsx","components/AstroBox/AstroBox.styled.js","components/AstroBox/AstroBox.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","utils/conditionsWeatherApi.js","components/MainBox/MainBox.jsx","components/pages/Homepage/Homepage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  box-sizing: border-box;\n\n  /* @media screen and (min-width: 320px) {\n    width: 320px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n  } */\n`;\n","export const getCityId = state => state.location.cityID;\nexport const getCityName = state => state.location.city;\nexport const getCountry = state => state.location.country;\nexport const getCityImages = state => state.location.image;\nexport const getCurrentLongitude = state => state.location.longitude;\nexport const getCurrentLatitude = state => state.location.latitude;\nexport const getCurrentWeather = state => state.location.weather;\nexport const getAdditionalCurrentWeather = state =>\n  state.location.weatherAdditional;\nexport const getDayTime = state => state.location.daytime;\nexport const getTimezone = state => state.location.timezone;\nexport const getAstroData = state => state.location.astrodata;\nexport const getForcast = state => state.location.weatherForecast;\nexport const getDailyForcast = state => state.location.weather.daily;\nexport const getHourlyForcast = state => state.location.weather.hourly;\n","import { useEffect, useState } from 'react';\n\nexport const useMediaQuery = query => {\n  const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPexelsImage } from 'redux/location/locOperations';\nimport { useState } from 'react';\nimport { Card } from './Card.styled';\nimport { getCityImages, getCityName } from 'redux/location/locSelectors';\nimport { useMediaQuery } from 'hooks/useMedia';\nimport bgImgMob from '../../images/umbrella-red-wallpaper-mob.jpg';\nimport bgImg from '../../images/umbrella-red-wallpaper.jpg'; // 'https://www.wallpaperflare.com/static/79/210/459/nature-sky-umbrella-red-wallpaper-preview.jpg';\n\nexport const CardUI = ({ children }) => {\n  const isRowBased = useMediaQuery('(min-width: 500px)');\n  const city = useSelector(getCityName);\n  const images = useSelector(getCityImages);\n\n  const [image, setImage] = useState('');\n  const [imageMob, setImageMob] = useState('');\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (city) {\n      dispatch(fetchPexelsImage());\n    }\n  }, [city, dispatch]);\n\n  useEffect(() => {\n    if (images.length === 1) {\n      setImage(images[0].landscape);\n      setImageMob(images[0].portrait);\n    }\n    if (images.length > 1) {\n      const random = Math.floor(Math.random() * images.length);\n      setImage(images[random].landscape);\n      setImageMob(images[random].portrait);\n    }\n  }, [images]);\n\n  return (\n    <Card\n      style={{\n        backgroundImage: !isRowBased\n          ? `url(${imageMob ?? bgImgMob})`\n          : `url(${image ?? bgImg})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n      }}\n    >\n      {children}\n    </Card>\n  );\n};\n","import sprite from 'images/icons_sprite.svg';\n\nexport const renderCustomAxisTick = ({ x, y, payload }) => {\n  let path = '';\n\n  switch (payload.value) {\n    case '0':\n      path = 'day';\n      break;\n    case '1':\n      path = 'cloudy-day-1';\n      break;\n    case '2':\n      path = 'cloudy-day-2';\n      break;\n    case '3':\n    case '45':\n    case '48':\n      path = 'cloudy';\n      break;\n    case '51':\n    case '53':\n    case '55':\n    case '56':\n    case '57':\n      path = 'rainy-5';\n      break;\n    case '61':\n    case '63':\n    case '65':\n    case '66':\n    case '67':\n    case '80':\n    case '81':\n    case '82':\n      path = 'rainy-7';\n      break;\n    case '85':\n    case '86':\n    case '77':\n    case '71':\n    case '73':\n    case '75':\n      path = 'snowy';\n      break;\n    case '95':\n    case '96':\n    case '99':\n      path = 'thunder';\n      break;\n    default:\n      path = 'weather';\n  }\n\n  return (\n    <svg x={x - 12} y={y - 20} width={46} height={42} viewBox=\"0 0 46 46\">\n      <use href={sprite + `#${path}`} />\n    </svg>\n  );\n};\n","import sprite from 'images/icons_sprite.svg';\n\nimport { useSelector } from 'react-redux';\nimport { getCurrentWeather } from 'redux/location/locSelectors';\n\nexport const CustomizedDot = props => {\n  const { cx, cy, payload } = props;\n\n  const weather = useSelector(getCurrentWeather);\n  const currentTime = weather.current_weather.time.slice(11);\n\n  if (payload.time === currentTime) {\n    return (\n      <svg x={cx - 16} y={cy - 15} width={32} height={32}>\n        <use href={sprite + `#sun`} />\n      </svg>\n    );\n  }\n\n  return (\n    <>\n      {/* <svg\n          x={cx - 10}\n          y={cy - 10}\n          width={20}\n          height={20}\n          fill=\"green\"\n          viewBox=\"0 0 1024 1024\"\n        >\n          <path d=\"M517.12 53.248q95.232 0 179.2 36.352t145.92 98.304 98.304 145.92 36.352 179.2-36.352 179.2-98.304 145.92-145.92 98.304-179.2 36.352-179.2-36.352-145.92-98.304-98.304-145.92-36.352-179.2 36.352-179.2 98.304-145.92 145.92-98.304 179.2-36.352zM663.552 261.12q-15.36 0-28.16 6.656t-23.04 18.432-15.872 27.648-5.632 33.28q0 35.84 21.504 61.44t51.2 25.6 51.2-25.6 21.504-61.44q0-17.408-5.632-33.28t-15.872-27.648-23.04-18.432-28.16-6.656zM373.76 261.12q-29.696 0-50.688 25.088t-20.992 60.928 20.992 61.44 50.688 25.6 50.176-25.6 20.48-61.44-20.48-60.928-50.176-25.088zM520.192 602.112q-51.2 0-97.28 9.728t-82.944 27.648-62.464 41.472-35.84 51.2q-1.024 1.024-1.024 2.048-1.024 3.072-1.024 8.704t2.56 11.776 7.168 11.264 12.8 6.144q25.6-27.648 62.464-50.176 31.744-19.456 79.36-35.328t114.176-15.872q67.584 0 116.736 15.872t81.92 35.328q37.888 22.528 63.488 50.176 17.408-5.12 19.968-18.944t0.512-18.944-3.072-7.168-1.024-3.072q-26.624-55.296-100.352-88.576t-176.128-33.28z\" />\n        </svg> */}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ChartsWrapper = styled.div`\n  width: 100%;\n  height: 200px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    height: 250px;\n    margin-top: 0;\n  }\n`;\n","import { useMediaQuery } from 'hooks/useMedia';\nimport { useSelector } from 'react-redux';\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport {\n  // getDailyForcast,\n  getHourlyForcast,\n} from 'redux/location/locSelectors';\nimport { renderCustomAxisTick } from 'utils/customAxis';\nimport { CustomizedDot } from 'utils/customDot';\nimport { ChartsWrapper } from './Charts.styled';\n\nexport const ChartsUI = () => {\n  // const dailyForecast = useSelector(getDailyForcast);\n  const hourlyForecast = useSelector(getHourlyForcast);\n  const isRowBased = useMediaQuery('(min-width: 768px)');\n\n  // FOR HOURLY FORECAST\n\n  const hours = hourlyForecast.time.map(el => el).slice(0, 24);\n  const temp = hourlyForecast.temperature_2m.map(el => el).slice(0, 24);\n  const code = hourlyForecast.weathercode.map(el => el).slice(0, 24);\n  const hourlyData = hours.map((el, index) => {\n    return {\n      time: `${el}`.slice(11),\n      temperature: `${temp[index]}`,\n      code: `${code[index]}`,\n    };\n  });\n\n  // FOR DAILY FORECAST\n  // const dates = dailyForecast.time.map(el => el);\n  // const tempMin = dailyForecast.temperature_2m_min.map(el => el);\n  // const tempMax = dailyForecast.temperature_2m_max.map(el => el);\n\n  // const dailyData = dates.map((el, index) => {\n  //   return {\n  //     date: `${el}`,\n  //     min_temperature: `${tempMin[index]}`,\n  //     max_temperature: `${tempMax[index]}`,\n  //   };\n  // });\n\n  return (\n    <ChartsWrapper>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <AreaChart\n          width={200}\n          height={200}\n          data={hourlyData}\n          fill=\"rgba(233, 201, 57, 0.25)\"\n          margin={{\n            top: 5,\n            right: 0,\n            left: 0,\n            bottom: 5,\n          }}\n        >\n          <Tooltip />\n          {isRowBased && (\n            <XAxis\n              dataKey=\"code\"\n              xAxisId=\"1\"\n              stroke=\"transparent\"\n              fill=\"transparent\"\n              tick={renderCustomAxisTick}\n            />\n          )}\n          <XAxis dataKey=\"time\" xAxisId=\"0\" />\n          {isRowBased && <YAxis />}\n          <Area\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"temperature\"\n            stroke=\"#E9C939\"\n            strokeWidth={3}\n            fill=\"rgba(233, 201, 57, 0.25)\"\n            activeDot={{ r: 6 }}\n            dot={<CustomizedDot />}\n          />\n          {/* <Area\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"max_temperature\"\n            stroke=\"#4be939\"\n            strokeWidth={3}\n            fill=\"rgba(235, 209, 131, 0.267)\"\n          /> */}\n        </AreaChart>\n      </ResponsiveContainer>\n    </ChartsWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DataWrapper = styled.div`\n  /* width: 100%; */\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 16px;\n  margin: 0 auto;\n  border-radius: 30px;\n  padding: 16px;\n  background: rgba(255, 255, 255, 0.63);\n  /* box-shadow: inset -5px -5px 9px rgba(255, 255, 255, 0.45),\n    inset 5px 5px 9px rgba(94, 104, 121, 0.3); */\n  box-shadow: -5px -5px 80px #fff, 5px 5px 20px #babecc;\n  backdrop-filter: blur(2.3px);\n  -webkit-backdrop-filter: blur(2.3px);\n  /* border: 1px solid rgba(255, 255, 255, 0.77); */\n\n  @media screen and (min-width: 1280px) {\n    width: 70%;\n    padding: 32px 56px;\n  }\n`;\n\nexport const WeatherDataWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 16px;\n  width: 100%;\n  position: relative;\n`;\n\nexport const WeatherInfoWrapper = styled.div`\n  padding: 32px 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-end;\n  gap: 16px;\n  border-radius: 30px;\n  background: rgba(255, 255, 255, 0.28);\n  border-radius: 16px;\n  /* box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1); */\n  /* box-shadow: -2px -2px 5px white, 3px 3px 5px rgba(0, 0, 0, 0.1); */\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n\n  @media screen and (min-width: 768px) {\n    padding: 32px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40vw;\n  top: -35%;\n  left: -25%;\n  position: absolute;\n\n  & img {\n    width: 100%;\n  }\n\n  @media screen and (min-width: 320px) {\n    width: 170px;\n  }\n\n  @media screen and (min-width: 768px) {\n    position: static;\n    width: 30vw;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 40%;\n  }\n`;\n\nexport const CityName = styled.p`\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n  }\n`;\n\nexport const WeatherConditions = styled.div`\n  padding: 10px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.mainLight};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  background-color: ${p => p.theme.colors.mainAccentPink};\n  border-radius: ${p => p.theme.radii.main};\n`;\n\nexport const IndicatorsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: 1280px) {\n    flex-wrap: nowrap;\n    align-items: stretch;\n  }\n`;\n\nexport const Indicator = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: calc(50% - 32px);\n  box-shadow: 4px 0px 20px rgba(0, 0, 0, 0.25);\n  border-radius: ${p => p.theme.radii.main};\n  padding: 8px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p =>\n    p.color === 'blue'\n      ? p.theme.colors.accentBlue\n      : p.color === 'pink'\n      ? p.theme.colors.accentPink\n      : p.color === 'violet'\n      ? p.theme.colors.accentViolet\n      : p.theme.colors.textGrey};\n  background-color: ${p =>\n    p.color === 'blue'\n      ? p.theme.colors.bgBlue\n      : p.color === 'pink'\n      ? p.theme.colors.bgPink\n      : p.color === 'violet'\n      ? p.theme.colors.bgViolet\n      : p.theme.colors.bgGrey};\n\n  & svg {\n    width: 20px;\n    height: 20px;\n  }\n\n  & img {\n    width: 20px;\n    height: 20px;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px;\n    width: 20%;\n\n    & img {\n      width: 30px;\n      height: 30px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: fit-content;\n    }\n  }\n`;\n\nexport const IndicatorText = styled.span`\n  display: none;\n\n  @media screen and (min-width: 1280px) {\n    display: inline-block;\n    margin-right: 8px;\n  }\n`;\n\nexport const ChanceOfIndicator = styled(Indicator)`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${p => p.theme.colors.bgGrey};\n  color: #8495b2;\n  gap: 8px;\n\n  & div {\n    display: flex;\n  }\n\n  & img {\n    margin-right: 8px;\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    align-items: flex-start;\n  }\n`;\n\nexport const TemperatureWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  flex-grow: 1;\n`;\n\nexport const FeelsLike = styled.span`\n  font-size: 20px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.textGrey};\n`;\nexport const Temperature = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-family: ${p => p.theme.fonts.main};\n\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 96px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  & img {\n    width: 40px;\n  }\n\n  & span {\n    font-weight: ${p => p.theme.fontWeights[0]};\n    font-size: 24px;\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n","import styled from 'styled-components';\n\nexport const WeatherWrapper = styled.div`\n  padding: 32px;\n  background: rgba(255, 255, 255, 0.23);\n  border-radius: 30px;\n  /* box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1); */\n  /* box-shadow: 0px 5px 10px 0px rgba(0, 255, 255, 0.7); */\n  box-shadow: inset -5px -5px 9px rgba(255, 255, 255, 0.45),\n    inset 5px 5px 9px rgba(94, 104, 121, 0.3);\n  backdrop-filter: blur(5.3px);\n  -webkit-backdrop-filter: blur(5.3px);\n  border: 1px solid rgba(255, 255, 255, 0.77);\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  /* &:hover {\n    box-shadow: 0px 10px 20px 2px rgba(0, 255, 255, 0.7);\n  } */\n`;\n\nexport const IndicatorsWrapper = styled.div`\n  display: flex;\n  gap: 16px;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  & div {\n    display: flex;\n    width: 100%;\n  }\n`;\n","import { Indicator, IndicatorText } from 'components/MainBox/MainBox.styled';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  TbTemperaturePlus,\n  TbTemperatureMinus,\n  TbWindmill,\n} from 'react-icons/tb';\nimport { BsClouds, BsWind } from 'react-icons/bs';\nimport { WiBarometer, WiWindDeg } from 'react-icons/wi';\nimport { GiSunRadiations, GiStripedSun } from 'react-icons/gi';\nimport {\n  getAdditionalCurrentWeather,\n  getCurrentWeather,\n} from 'redux/location/locSelectors';\nimport { WeatherWrapper, IndicatorsWrapper } from './WeatherBox.styled';\n\nexport const WeatherUI = () => {\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n\n  console.log(TbTemperatureMinus);\n  // console.log(extraWeather);\n\n  return weather && extraWeather ? (\n    <WeatherWrapper>\n      <IndicatorsWrapper>\n        <Indicator>\n          <TbTemperaturePlus />\n          {/* <img src={maxTemp} alt=\"max temperature\" loading=\"lazy\" /> */}\n          <IndicatorText>Max temperature:</IndicatorText>\n          <span>{weather.daily.temperature_2m_max[0]} °C</span>\n        </Indicator>\n        <Indicator>\n          <TbTemperatureMinus />\n          <IndicatorText>Min temperature:</IndicatorText>\n          <span>{weather.daily.temperature_2m_min[0]} °C</span>\n        </Indicator>\n        <Indicator>\n          <BsClouds />\n          <IndicatorText>Clouds:</IndicatorText>\n          <span>{extraWeather.cloud} %</span>\n        </Indicator>\n\n        <Indicator>\n          <TbWindmill />\n          <IndicatorText>Max windgusts:</IndicatorText>\n          <span>{weather.daily.windgusts_10m_max[0]} km/h</span>\n        </Indicator>\n        <Indicator>\n          <BsWind />\n          <IndicatorText>Max windspeed:</IndicatorText>\n          <span>{weather.daily.windspeed_10m_max[0]} km/h</span>\n        </Indicator>\n        <Indicator>\n          <WiWindDeg />\n          <IndicatorText>Wind direction:</IndicatorText>\n          <span>{extraWeather.wind_dir}</span>\n        </Indicator>\n        <Indicator>\n          <WiBarometer />\n          <IndicatorText>Pressure:</IndicatorText>\n          <span>{extraWeather.pressure_mb} millibars</span>\n        </Indicator>\n        <Indicator>\n          <GiSunRadiations />\n          <IndicatorText>Shortwave radiation:</IndicatorText>\n          <span>{weather.daily.shortwave_radiation_sum[0]} MJ/m²</span>\n        </Indicator>\n        <Indicator>\n          <GiStripedSun />\n          <IndicatorText>UV:</IndicatorText>\n          <span>Index {extraWeather.uv} </span>\n        </Indicator>\n      </IndicatorsWrapper>\n    </WeatherWrapper>\n  ) : (\n    <div>No weather data available</div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const AstroWrapper = styled.div`\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAstroDataFromWeatherApi } from 'redux/location/locOperations';\nimport { getAstroData } from 'redux/location/locSelectors';\nimport { AstroWrapper } from './AstroBox.styled';\n\nfunction AstroUI() {\n  const astro = useSelector(getAstroData);\n\n  //   console.log(astro);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (astro) {\n      return;\n    }\n    dispatch(fetchAstroDataFromWeatherApi());\n  }, [dispatch, astro]);\n\n  return astro ? (\n    <AstroWrapper>\n      <p>\n        Is moon up:\n        <span>{astro.is_moon_up ? 'Yes' : 'No'}</span>\n      </p>\n      <p>\n        Moon illumination:\n        <span>{astro.moon_illumination} %</span>\n      </p>\n      <p>\n        Moon phase:\n        <span>{astro.moon_phase}</span>\n      </p>\n      <p>\n        Moonrise:\n        <span>{astro.moonrise}</span>\n      </p>\n      <p>\n        Moonset:\n        <span>{astro.moonset}</span>\n      </p>\n      <p>\n        Is sun up:\n        <span>{astro.is_sun_up ? 'Yes' : 'No'}</span>\n      </p>\n      <p>\n        Sunrise:\n        <span>{astro.sunrise}</span>\n      </p>\n      <p>\n        Sunset:\n        <span>{astro.sunset}</span>\n      </p>\n    </AstroWrapper>\n  ) : (\n    <div>No astro data available</div>\n  );\n}\n\nexport default React.memo(AstroUI);\n","import styled from 'styled-components';\n\nexport const ButtonMain = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: calc(50%-32px);\n  height: 50px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p =>\n    p.color === 'blue' ? p.theme.colors.accentBlue : p.theme.colors.textGrey};\n  text-align: center;\n  text-transform: uppercase;\n  border: none;\n  background-color: transparent;\n\n  @media screen and (min-width: 768px) {\n    width: calc(30%);\n    height: 70px;\n  }\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    display: inline-block;\n    width: calc(100%);\n    height: 40px;\n    border: 4px solid\n      ${p =>\n        p.color === 'blue'\n          ? p.theme.colors.accentBlue\n          : p.color === 'pink'\n          ? p.theme.colors.accentPink\n          : p.color === 'violet'\n          ? p.theme.colors.accentViolet\n          : p.theme.colors.iconsFill};\n    border-radius: 50px;\n    z-index: -10;\n\n    @media screen and (min-width: 768px) {\n      width: calc(100%);\n      height: 50px;\n    }\n  }\n\n  &:before {\n    bottom: 0;\n    left: 0;\n    background-color: ${p =>\n      p.selected ? p.theme.colors.bgYellow : 'transparent'};\n    transition: transform 0.3s, background-color 0.3s;\n  }\n\n  &:after {\n    top: 10px;\n    left: 0px;\n    opacity: 0.3;\n    transition: transform 0.3s, opacity 0.3s;\n\n    @media screen and (min-width: 768px) {\n      left: 10px;\n      top: 0px;\n    }\n  }\n\n  // Hover\n\n  &:hover {\n    span {\n      color: ${p => p.theme.colors.mainLight};\n      transform: translate(0px, -5px);\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n    &:before {\n      background-color: ${p =>\n        p.color === 'blue'\n          ? p.theme.colors.accentBlue\n          : p.theme.colors.textGrey};\n      transform: translate(0px, -5px);\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n    &:after {\n      transform: translate(0px, 5px);\n      opacity: 0;\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n  }\n\n  // Active\n  &:active {\n    &:before {\n      background-color: ${p => p.theme.colors.bgYellow};\n    }\n  }\n`;\n\nexport const ButtonText = styled.span`\n  display: inline-flex;\n  position: relative;\n  top: 5%;\n  left: 2%;\n  z-index: 1000;\n  transition: transform 0.3s, color 0.2s;\n\n  @media screen and (min-width: 768px) {\n    top: 10%;\n    left: 0px;\n  }\n`;\n","import { ButtonMain, ButtonText } from './Button.styled';\n\nexport const ButtonUI = ({ text, type, onClick, selected }) => {\n  return (\n    <ButtonMain selected={selected} type={type} onClick={onClick}>\n      <ButtonText>{text}</ButtonText>\n    </ButtonMain>\n  );\n};\n","import daySun from '../images/conditions/day-sun-min.png';\nimport dayClouds from '../images/conditions/day-clouds-min.png';\nimport dayRain from '../images/conditions/day-rain-min.png';\nimport daySnow from '../images/conditions/day-snow-min.png';\nimport dayStorm from '../images/conditions/day-storm-min.png';\nimport dayWind from '../images/conditions/day-wind-min.png';\n\nimport nightMoon from '../images/conditions/night-moon-min.png';\nimport nightClouds from '../images/conditions/night-clouds-min.png';\nimport nightRain from '../images/conditions/night-rain-min.png';\nimport nightWind from '../images/conditions/night-wind-min.png';\nimport nightSnow from '../images/conditions/night-snow-min.png';\nimport nightStorm from '../images/conditions/night-storm-min.png';\n\nexport const conditionsWeatherApi = [\n  {\n    code: 1000,\n    day: 'Sunny',\n    night: 'Clear',\n    icon: 113,\n    png: [daySun, nightMoon],\n  },\n  {\n    code: 1003,\n    day: 'Partly cloudy',\n    night: 'Partly cloudy',\n    icon: 116,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1006,\n    day: 'Cloudy',\n    night: 'Cloudy',\n    icon: 119,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1009,\n    day: 'Overcast',\n    night: 'Overcast',\n    icon: 122,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1030,\n    day: 'Mist',\n    night: 'Mist',\n    icon: 143,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1063,\n    day: 'Patchy rain possible',\n    night: 'Patchy rain possible',\n    icon: 176,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1066,\n    day: 'Patchy snow possible',\n    night: 'Patchy snow possible',\n    icon: 179,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1069,\n    day: 'Patchy sleet possible',\n    night: 'Patchy sleet possible',\n    icon: 182,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1072,\n    day: 'Patchy freezing drizzle possible',\n    night: 'Patchy freezing drizzle possible',\n    icon: 185,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1087,\n    day: 'Thundery outbreaks possible',\n    night: 'Thundery outbreaks possible',\n    icon: 200,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1114,\n    day: 'Blowing snow',\n    night: 'Blowing snow',\n    icon: 227,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1117,\n    day: 'Blizzard',\n    night: 'Blizzard',\n    icon: 230,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1135,\n    day: 'Fog',\n    night: 'Fog',\n    icon: 248,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1147,\n    day: 'Freezing fog',\n    night: 'Freezing fog',\n    icon: 260,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1150,\n    day: 'Patchy light drizzle',\n    night: 'Patchy light drizzle',\n    icon: 263,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1153,\n    day: 'Light drizzle',\n    night: 'Light drizzle',\n    icon: 266,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1168,\n    day: 'Freezing drizzle',\n    night: 'Freezing drizzle',\n    icon: 281,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1171,\n    day: 'Heavy freezing drizzle',\n    night: 'Heavy freezing drizzle',\n    icon: 284,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1180,\n    day: 'Patchy light rain',\n    night: 'Patchy light rain',\n    icon: 293,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1183,\n    day: 'Light rain',\n    night: 'Light rain',\n    icon: 296,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1186,\n    day: 'Moderate rain at times',\n    night: 'Moderate rain at times',\n    icon: 299,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1189,\n    day: 'Moderate rain',\n    night: 'Moderate rain',\n    icon: 302,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1192,\n    day: 'Heavy rain at times',\n    night: 'Heavy rain at times',\n    icon: 305,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1195,\n    day: 'Heavy rain',\n    night: 'Heavy rain',\n    icon: 308,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1198,\n    day: 'Light freezing rain',\n    night: 'Light freezing rain',\n    icon: 311,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1201,\n    day: 'Moderate or heavy freezing rain',\n    night: 'Moderate or heavy freezing rain',\n    icon: 314,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1204,\n    day: 'Light sleet',\n    night: 'Light sleet',\n    icon: 317,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1207,\n    day: 'Moderate or heavy sleet',\n    night: 'Moderate or heavy sleet',\n    icon: 320,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1210,\n    day: 'Patchy light snow',\n    night: 'Patchy light snow',\n    icon: 323,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1213,\n    day: 'Light snow',\n    night: 'Light snow',\n    icon: 326,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1216,\n    day: 'Patchy moderate snow',\n    night: 'Patchy moderate snow',\n    icon: 329,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1219,\n    day: 'Moderate snow',\n    night: 'Moderate snow',\n    icon: 332,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1222,\n    day: 'Patchy heavy snow',\n    night: 'Patchy heavy snow',\n    icon: 335,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1225,\n    day: 'Heavy snow',\n    night: 'Heavy snow',\n    icon: 338,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1237,\n    day: 'Ice pellets',\n    night: 'Ice pellets',\n    icon: 350,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1240,\n    day: 'Light rain shower',\n    night: 'Light rain shower',\n    icon: 353,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1243,\n    day: 'Moderate or heavy rain shower',\n    night: 'Moderate or heavy rain shower',\n    icon: 356,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1246,\n    day: 'Torrential rain shower',\n    night: 'Torrential rain shower',\n    icon: 359,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1249,\n    day: 'Light sleet showers',\n    night: 'Light sleet showers',\n    icon: 362,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1252,\n    day: 'Moderate or heavy sleet showers',\n    night: 'Moderate or heavy sleet showers',\n    icon: 365,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1255,\n    day: 'Light snow showers',\n    night: 'Light snow showers',\n    icon: 368,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1258,\n    day: 'Moderate or heavy snow showers',\n    night: 'Moderate or heavy snow showers',\n    icon: 371,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1261,\n    day: 'Light showers of ice pellets',\n    night: 'Light showers of ice pellets',\n    icon: 374,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1264,\n    day: 'Moderate or heavy showers of ice pellets',\n    night: 'Moderate or heavy showers of ice pellets',\n    icon: 377,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1273,\n    day: 'Patchy light rain with thunder',\n    night: 'Patchy light rain with thunder',\n    icon: 386,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1276,\n    day: 'Moderate or heavy rain with thunder',\n    night: 'Moderate or heavy rain with thunder',\n    icon: 389,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1279,\n    day: 'Patchy light snow with thunder',\n    night: 'Patchy light snow with thunder',\n    icon: 392,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1282,\n    day: 'Moderate or heavy snow with thunder',\n    night: 'Moderate or heavy snow with thunder',\n    icon: 395,\n    png: [dayStorm, nightStorm],\n  },\n];\n","import { ChartsUI } from 'components/ChartBox/Charts';\nimport { WeatherUI } from 'components/WeatherBox/WeatherBox';\nimport AstroUI from 'components/AstroBox/AstroBox';\nimport { ButtonUI } from 'components/Button/Button';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  getAdditionalCurrentWeather,\n  getCityName,\n  getCountry,\n  getCurrentWeather,\n  getDayTime,\n  getForcast,\n} from 'redux/location/locSelectors';\nimport { conditionsWeatherApi } from 'utils/conditionsWeatherApi';\nimport {\n  ChanceOfIndicator,\n  CityName,\n  DataWrapper,\n  FeelsLike,\n  IconWrapper,\n  Indicator,\n  IndicatorsWrapper,\n  IndicatorText,\n  Temperature,\n  TemperatureWrapper,\n  WeatherConditions,\n  WeatherDataWrapper,\n  WeatherInfoWrapper,\n  ButtonsWrapper,\n} from './MainBox.styled';\n\nimport termometrPlus from '../../images/thermomater-max-min.png';\nimport termometrMinus from '../../images/thermomater-min-min.png';\nimport percipitationImg from '../../images/percipitation-min.png';\nimport windImg from '../../images/wind-min.png';\nimport humidityImg from '../../images/humidity-min.png';\nimport rain from '../../images/rain-min.png';\nimport snow from '../../images/snow-min.png';\n\nexport const MainBoxUI = () => {\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n  const forecast = useSelector(getForcast);\n  const dayTime = useSelector(getDayTime);\n  const city = useSelector(getCityName);\n  const country = useSelector(getCountry);\n\n  //   console.log(forecast[0].day.daily_chance_of_rain);\n\n  const [showWeather, setShowWeather] = useState(false);\n  const [showAstro, setShowAstro] = useState(false);\n  const [showAir, setShowAir] = useState(false);\n  const [weatherPng, setWeatherPng] = useState(null);\n\n  useEffect(() => {\n    if (extraWeather) {\n      const weatherCode = extraWeather.condition.code;\n      const conditionPng = conditionsWeatherApi.find(\n        cond => cond.code === weatherCode\n      ).png;\n      dayTime ? setWeatherPng(conditionPng[0]) : setWeatherPng(conditionPng[1]);\n    }\n  }, [dayTime, extraWeather]);\n\n  const onWeatherBtnClick = () => {\n    setShowWeather(!showWeather);\n    setShowAstro(false);\n    setShowAir(false);\n  };\n\n  const onShowAstroBtnClick = () => {\n    setShowAstro(!showAstro);\n    setShowAir(false);\n    setShowWeather(false);\n  };\n\n  const onShowAirBtnClick = () => {\n    setShowAir(!showAir);\n    setShowAstro(false);\n    setShowWeather(false);\n  };\n\n  return (\n    <DataWrapper>\n      {weather && extraWeather ? (\n        <>\n          <WeatherDataWrapper>\n            <IconWrapper>\n              <img\n                src={weatherPng}\n                alt={extraWeather.condition.text}\n                loading=\"lazy\"\n              />\n            </IconWrapper>\n\n            <TemperatureWrapper>\n              <WeatherConditions>\n                <span>{extraWeather.condition.text}</span>\n              </WeatherConditions>\n              <CityName>\n                {city}, {country}\n              </CityName>\n\n              <Temperature>\n                <img\n                  src={\n                    extraWeather.temp_c >= 0 ? termometrPlus : termometrMinus\n                  }\n                  alt=\"temperature\"\n                  loading=\"lazy\"\n                />\n                {extraWeather.temp_c} <span>°C</span>\n              </Temperature>\n\n              <FeelsLike>Feels like {extraWeather.feelslike_c} °C</FeelsLike>\n              <FeelsLike>\n                Local time {weather.current_weather.time.slice(11)}\n              </FeelsLike>\n            </TemperatureWrapper>\n          </WeatherDataWrapper>\n          <WeatherInfoWrapper>\n            <IndicatorsWrapper>\n              <ChanceOfIndicator>\n                <div>\n                  <img src={rain} alt=\"rain\" loading=\"lazy\" />\n                  <IndicatorText>Chance of rain:</IndicatorText>\n                  <span>{forecast[0].day.daily_chance_of_rain} %</span>\n                </div>\n                <div>\n                  <img src={snow} alt=\"snow\" loading=\"lazy\" />\n                  <IndicatorText>Chance of snow:</IndicatorText>\n                  <span>{forecast[0].day.daily_chance_of_snow} %</span>\n                </div>\n              </ChanceOfIndicator>\n              <Indicator color=\"blue\">\n                <img\n                  src={percipitationImg}\n                  alt=\"percipitation\"\n                  loading=\"lazy\"\n                />\n                <div>\n                  <IndicatorText>Precipitation:</IndicatorText>\n\n                  <span>{weather.daily.precipitation_sum[0]} mm</span>\n                </div>\n              </Indicator>\n              <Indicator color=\"pink\">\n                <img src={humidityImg} alt=\"humidity\" loading=\"lazy\" />\n                <div>\n                  <IndicatorText>Humidity:</IndicatorText>\n\n                  <span>{extraWeather.humidity} %</span>\n                </div>\n              </Indicator>\n              <Indicator color=\"violet\">\n                <img src={windImg} alt=\"wind\" loading=\"lazy\" />\n                <div>\n                  <IndicatorText>Windspeed:</IndicatorText>\n\n                  <span>{weather.current_weather.windspeed} km/h</span>\n                </div>\n              </Indicator>\n            </IndicatorsWrapper>\n            <ChartsUI />\n            <ButtonsWrapper>\n              <ButtonUI\n                type=\"button\"\n                onClick={onWeatherBtnClick}\n                text=\"Details\"\n                selected={showWeather}\n              />\n              <ButtonUI\n                type=\"button\"\n                onClick={onShowAstroBtnClick}\n                text=\"Astro\"\n                selected={showAstro}\n              />\n              <ButtonUI\n                type=\"button\"\n                onClick={onShowAirBtnClick}\n                text=\"Air\"\n                selected={showAir}\n              />\n            </ButtonsWrapper>\n          </WeatherInfoWrapper>\n          {showWeather && <WeatherUI />}\n          {showAstro && <AstroUI />}\n        </>\n      ) : (\n        <div>No data to display</div>\n      )}\n    </DataWrapper>\n  );\n};\n","import { CardUI } from 'components/Card/Card';\nimport { Container } from 'components/Container/Container';\nimport { Loader } from 'components/Loader/Loader';\nimport { MainBoxUI } from 'components/MainBox/MainBox';\nimport { useEffect } from 'react';\nimport { useGeolocated } from 'react-geolocated';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchAstroDataFromWeatherApi,\n  fetchCity,\n  fetchCurrentWeather,\n  fetchCurrentWeatherFromWeatherApi,\n  fetchWeatherForecastFromWeatherApi,\n} from 'redux/location/locOperations';\nimport {\n  getAdditionalCurrentWeather,\n  getCurrentLatitude,\n  getCurrentLongitude,\n  getCurrentWeather,\n  getTimezone,\n} from 'redux/location/locSelectors';\nimport { setLatitude, setLongitude } from 'redux/location/locSlice';\n\nconst Homepage = () => {\n  const { coords, isGeolocationAvailable, isGeolocationEnabled } =\n    useGeolocated({\n      positionOptions: {\n        enableHighAccuracy: false,\n      },\n\n      userDecisionTimeout: undefined,\n      suppressLocationOnMount: false,\n    });\n\n  const dispatch = useDispatch();\n  const latitude = useSelector(getCurrentLatitude);\n  const longitude = useSelector(getCurrentLongitude);\n\n  const timezone = useSelector(getTimezone);\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n\n  useEffect(() => {\n    if (coords) {\n      dispatch(setLatitude(coords.latitude));\n      dispatch(setLongitude(coords.longitude));\n      dispatch(fetchCity());\n\n      // ----------check exact coordinates\n      // dispatch(setLatitude(48.33));\n      // dispatch(setLongitude(34.77));\n\n      // dispatch(fetchTimezone());\n    }\n    return;\n  }, [coords, dispatch]);\n\n  useEffect(() => {\n    if (extraWeather) {\n      return;\n    }\n    if (coords) {\n      dispatch(fetchAstroDataFromWeatherApi());\n      dispatch(fetchCurrentWeatherFromWeatherApi());\n      dispatch(fetchWeatherForecastFromWeatherApi());\n    }\n  }, [dispatch, extraWeather, coords]);\n\n  useEffect(() => {\n    if (weather) {\n      return;\n    }\n    if (timezone) {\n      dispatch(fetchCurrentWeather());\n    }\n  }, [dispatch, timezone, weather]);\n\n  return (\n    <main>\n      <CardUI />\n      <Container>\n        {!isGeolocationAvailable ? (\n          <div>Your browser does not support Geolocation</div>\n        ) : !isGeolocationEnabled ? (\n          <div>Geolocation is not enabled</div>\n        ) : latitude && longitude ? (\n          <MainBoxUI />\n        ) : (\n          <div>\n            <Loader />\n          </div>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default Homepage;\n"],"names":["Card","styled","getCityName","state","location","city","getCountry","country","getCityImages","image","getCurrentLongitude","longitude","getCurrentLatitude","latitude","getCurrentWeather","weather","getAdditionalCurrentWeather","weatherAdditional","getDayTime","daytime","getTimezone","timezone","getAstroData","astrodata","getForcast","weatherForecast","getHourlyForcast","hourly","useMediaQuery","query","mediaMatch","window","matchMedia","useState","matches","setMatches","useEffect","handler","e","addListener","removeListener","CardUI","children","isRowBased","useSelector","images","setImage","imageMob","setImageMob","dispatch","useDispatch","fetchPexelsImage","length","landscape","portrait","random","Math","floor","style","backgroundImage","bgImg","bgImgMob","backgroundRepeat","backgroundSize","renderCustomAxisTick","x","y","path","payload","value","width","height","viewBox","href","sprite","CustomizedDot","props","cx","cy","currentTime","current_weather","time","slice","ChartsWrapper","ChartsUI","hourlyForecast","hours","map","el","temp","temperature_2m","code","weathercode","hourlyData","index","temperature","ResponsiveContainer","AreaChart","data","fill","margin","top","right","left","bottom","Tooltip","XAxis","dataKey","xAxisId","stroke","tick","YAxis","Area","type","stackId","strokeWidth","activeDot","r","dot","DataWrapper","WeatherDataWrapper","WeatherInfoWrapper","IconWrapper","CityName","p","theme","fonts","main","fontWeights","lineHeights","colors","mainDark","WeatherConditions","mainLight","mainAccentPink","radii","IndicatorsWrapper","Indicator","color","accentBlue","accentPink","accentViolet","textGrey","bgBlue","bgPink","bgViolet","bgGrey","IndicatorText","ChanceOfIndicator","TemperatureWrapper","FeelsLike","Temperature","ButtonsWrapper","WeatherWrapper","WeatherUI","extraWeather","console","log","TbTemperatureMinus","daily","temperature_2m_max","temperature_2m_min","cloud","windgusts_10m_max","windspeed_10m_max","wind_dir","pressure_mb","shortwave_radiation_sum","uv","AstroWrapper","AstroUI","astro","fetchAstroDataFromWeatherApi","is_moon_up","moon_illumination","moon_phase","moonrise","moonset","is_sun_up","sunrise","sunset","React","ButtonMain","iconsFill","selected","bgYellow","ButtonText","ButtonUI","text","onClick","conditionsWeatherApi","day","night","icon","png","daySun","nightMoon","dayClouds","nightClouds","dayWind","nightWind","dayRain","nightRain","daySnow","nightSnow","dayStorm","nightStorm","MainBoxUI","forecast","dayTime","showWeather","setShowWeather","showAstro","setShowAstro","showAir","setShowAir","weatherPng","setWeatherPng","weatherCode","condition","conditionPng","find","cond","src","alt","loading","temp_c","termometrPlus","termometrMinus","feelslike_c","rain","daily_chance_of_rain","snow","daily_chance_of_snow","percipitationImg","precipitation_sum","humidityImg","humidity","windImg","windspeed","useGeolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","undefined","suppressLocationOnMount","coords","isGeolocationAvailable","isGeolocationEnabled","setLatitude","setLongitude","fetchCity","fetchCurrentWeatherFromWeatherApi","fetchWeatherForecastFromWeatherApi","fetchCurrentWeather","Container","Loader"],"sourceRoot":""}