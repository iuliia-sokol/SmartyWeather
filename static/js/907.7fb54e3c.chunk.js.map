{"version":3,"file":"static/js/907.7fb54e3c.chunk.js","mappings":"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","sources":["components/Card/Card.styled.js","components/StormAnimation/Storm.styled.js","components/StormAnimation/Storm.jsx","components/FogAnimation/Fog.styled.js","components/FogAnimation/Fog.jsx","components/Card/Card.jsx","hooks/useMedia.js","services/citySearchAPI.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/SearchPage/SearchPage.jsx","redux/location/locSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport paper from '../../images/old-paper.jpg';\nimport compass from '../../images/compass.jpg';\n\nexport const Card = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  background-image: ${p =>\n    p.image\n      ? p.image\n      : 'linear-gradient(47.75deg, #082276 7.07%, #030f34 97.3%), #082276;'};\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  -webkit-background-size: cover;\n  -o-background-size: cover;\n  -moz-background-size: cover;\n`;\n\nexport const View = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-size: ${p =>\n    p.page === 'home' ? 'cover' : p.page === 'history' ? 'contain' : 'cover'};\n  z-index: -2;\n  background: ${p =>\n    p.page === 'home'\n      ? 'linear-gradient(45deg, rgba(245, 70, 66, 0.45), rgba(8, 83, 156, 0.45))'\n      : p.page === 'history'\n      ? `url(${paper})`\n      : `url(${compass})`};\n\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#002f4b', endColorstr='#00000000',GradientType=0 );\n  opacity: ${p =>\n    p.page === 'home' ? '0.8' : p.page === 'history' ? '0.5' : '0.1'};\n`;\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\n\nimport lightiningPng from '../../images/lightining.png';\n\nconst lightining = keyframes`\n\n    0%{\n        opacity: 0;\n    }\n    20%{\n        opacity: 0;\n    }\n    21%{\n        opacity: 1;\n    }\n    25%{\n        opacity: 0;\n    }\n    30%{\n        opacity: 0;\n    }\n    31%{\n        opacity: 1;\n    }\n    35%{\n        opacity: 0;\n    }\n    100%{\n        opacity: 0;\n    }\n`;\n\nexport const Lightning = styled.div`\n  &::before {\n    content: '';\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    z-index: -1;\n    background-image: url(${lightiningPng});\n    transform: rotate(180deg);\n    animation: ${lightining} 4s linear infinite;\n    opacity: 1;\n  }\n`;\n","import { Lightning } from './Storm.styled';\n\nexport const Storm = () => {\n  return (\n    <>\n      <Lightning />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\n\nimport fog1 from '../../images/fog1.png';\nimport fog2 from '../../images/fog2.png';\n\nconst drift = keyframes`\n  from {\n      transform: translate3d(0, 0, 0);\n    }\n    to {\n      transform: translate3d(-200vw, 0, 0);\n    }`;\n\nexport const FogWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100%;\n  overflow: hidden;\n  pointer-events: none;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 300%;\n    background-size: cover;\n    /* background-position: center; */\n    background-repeat: repeat;\n  }\n  &:before {\n    background-image: url(${fog1});\n    animation: ${drift} 60s linear 0s infinite;\n  }\n  &:after {\n    background-image: url(${fog2});\n    animation: ${drift} 25s linear 0s infinite;\n  }\n`;\n","import { FogWrapper } from './Fog.styled';\n\nexport const Fog = () => {\n  return <FogWrapper />;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Snowfall from 'react-snowfall';\nimport Rainfall from 'react-rainfall-animation/src/Rain';\nimport ObliqueRain from 'react-rainfall-animation/src/ObliqueRain';\n\nimport { Card, View } from './Card.styled';\nimport {\n  getAdditionalCurrentWeather,\n  getDayTime,\n} from 'redux/location/locSelectors';\nimport { useMediaQuery } from 'hooks/useMedia';\nimport bgImgMob from '../../images/umbrella-red-wallpaper-mob.jpg';\nimport bgImg from '../../images/umbrella-red-wallpaper.jpg'; // 'https://www.wallpaperflare.com/static/79/210/459/nature-sky-umbrella-red-wallpaper-preview.jpg';\nimport { Storm } from 'components/StormAnimation/Storm';\nimport { Fog } from 'components/FogAnimation/Fog';\n\nexport const CardUI = ({ selector, page }) => {\n  const isRowBased = useMediaQuery('(min-width: 1280px)');\n  const images = useSelector(selector);\n  const dayTime = useSelector(getDayTime);\n\n  const currentWeather = useSelector(getAdditionalCurrentWeather);\n\n  const [image, setImage] = useState(bgImg);\n  const [imageMob, setImageMob] = useState(bgImgMob);\n  const [weatherCode, setWeatherCode] = useState('');\n  const [showSnow, setShowSnow] = useState(false);\n  const [showRain, setShowRain] = useState(false);\n  const [showDrizzle, setShowDrizzle] = useState(false);\n  const [showHeavyDrizzle, setShowHeavyDrizzle] = useState(false);\n  const [showStorm, setShowStorm] = useState(false);\n  const [showBigSnow, setShowBigSnow] = useState(false);\n  const [showFog, setShowFog] = useState(false);\n  const [showThunderSnow, setShowThunderSnow] = useState(false);\n\n  useEffect(() => {\n    if (images.length === 0) {\n      return;\n    }\n    if (images.length === 1) {\n      setImage(images[0].landscape);\n      setImageMob(images[0].portrait);\n    }\n    if (images.length > 1) {\n      const random = Math.floor(Math.random() * images.length);\n      setImage(images[random].landscape);\n      setImageMob(images[random].portrait);\n    }\n  }, [images]);\n\n  useEffect(() => {\n    if (page !== 'home' || page !== 'search') {\n      return;\n    }\n    if (currentWeather) {\n      setWeatherCode(currentWeather.condition.code);\n    }\n    if (\n      weatherCode === 1066 ||\n      weatherCode === 1210 ||\n      weatherCode === 1213 ||\n      weatherCode === 1216 ||\n      weatherCode === 1219 ||\n      weatherCode === 1261 ||\n      weatherCode === 1255\n    ) {\n      setShowSnow(true);\n      setShowRain(false);\n      setShowDrizzle(false);\n      setShowStorm(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1063 ||\n      weatherCode === 1069 ||\n      weatherCode === 1072 ||\n      weatherCode === 1150 ||\n      weatherCode === 1153 ||\n      weatherCode === 1168 ||\n      weatherCode === 1204 ||\n      weatherCode === 1249\n    ) {\n      setShowDrizzle(true);\n      setShowRain(false);\n      setShowSnow(false);\n      setShowStorm(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1180 ||\n      weatherCode === 1183 ||\n      weatherCode === 1186 ||\n      weatherCode === 1189 ||\n      weatherCode === 1192 ||\n      weatherCode === 1195 ||\n      weatherCode === 1198 ||\n      weatherCode === 1201 ||\n      weatherCode === 1240\n    ) {\n      setShowRain(true);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowStorm(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1087 ||\n      weatherCode === 1246 ||\n      weatherCode === 1243 ||\n      weatherCode === 1273 ||\n      weatherCode === 1276\n    ) {\n      setShowStorm(true);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1114 ||\n      weatherCode === 1117 ||\n      weatherCode === 1222 ||\n      weatherCode === 1225 ||\n      weatherCode === 1237 ||\n      weatherCode === 1264 ||\n      weatherCode === 1258\n    ) {\n      setShowBigSnow(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1009 ||\n      weatherCode === 1030 ||\n      weatherCode === 1006 ||\n      weatherCode === 1135 ||\n      weatherCode === 1147\n    ) {\n      setShowFog(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (weatherCode === 1279 || weatherCode === 1282) {\n      setShowThunderSnow(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1252 ||\n      weatherCode === 1207 ||\n      weatherCode === 1171\n    ) {\n      setShowHeavyDrizzle(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n    } else {\n      setShowHeavyDrizzle(false);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n    }\n  }, [currentWeather, page, weatherCode]);\n\n  return (\n    <>\n      {images && (\n        <Card image={!isRowBased ? `url(${imageMob})` : `url(${image})`}>\n          <View dayTime={dayTime} page={page} />\n        </Card>\n      )}\n      {showSnow && (\n        <Snowfall\n          style={{\n            position: 'fixed',\n            width: '100vw',\n            height: '100vh',\n          }}\n          snowflakeCount={200}\n        />\n      )}\n      {showBigSnow && (\n        <Snowfall\n          style={{\n            position: 'fixed',\n            width: '100vw',\n            height: '100vh',\n          }}\n          snowflakeCount={750}\n          wind={[2.5, 6.5]}\n          speed={[1.5, 5.5]}\n        />\n      )}\n      {showRain && (\n        <div id=\"Rain\">\n          <Rainfall dropletsAmount={1000} />\n        </div>\n      )}\n      {showDrizzle && (\n        <div id=\"Rain\">\n          <ObliqueRain dropletsAmount={300} amplitude={100} />\n        </div>\n      )}\n      {showHeavyDrizzle && (\n        <div id=\"Rain\">\n          <ObliqueRain dropletsAmount={1000} amplitude={100} />\n        </div>\n      )}\n      {showStorm && (\n        <div id=\"Rain\">\n          <Rainfall dropletsAmount={1000} />\n          <Storm />\n        </div>\n      )}\n      {showFog && <Fog />}\n      {showThunderSnow && (\n        <>\n          <Snowfall\n            style={{\n              position: 'fixed',\n              width: '100vw',\n              height: '100vh',\n            }}\n            snowflakeCount={750}\n            wind={[2.5, 6.5]}\n            speed={[1.5, 5.5]}\n          />\n          <Storm />\n        </>\n      )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport const useMediaQuery = query => {\n  const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};\n","import axios from 'axios';\nimport { OPEN_METEO_SEARCH_URL } from 'utils/consts/consts';\n\nexport const fetchCityByName = async query => {\n  try {\n    const res = await axios.get(\n      `${OPEN_METEO_SEARCH_URL}?name=${query}&count=100`\n    );\n    return res.data.results;\n  } catch (err) {\n    console.log(`${err}: 'Unable to retrieve places'`);\n  }\n};\n","import styled from 'styled-components';\n\nexport const PlacesAutocomplete = styled.div`\n  align-items: center;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n`;\n\nexport const InputWrap = styled.div`\n  padding: 8px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n`;\n\nexport const InputError = styled.span`\n  background: #ff00002e;\n  border-radius: 20px;\n  display: inline-block;\n  font-size: 14px;\n  margin-left: 4px;\n  padding: 8px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #222;\n  border-radius: 0;\n  box-sizing: border-box;\n  display: block;\n  height: 42px;\n  padding: 8px;\n  width: 300px;\n`;\n\nexport const DataList = styled.ul`\n  max-height: 20vh;\n  overflow-y: scroll;\n  background-color: white;\n`;\n\nexport const Option = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 8px;\n`;\n\nexport const PlacesAutocompleteHint = styled.span`\n  display: inline-block;\n  font-size: 12px;\n  margin-top: 4px;\n`;\n\nexport const CityName = styled.span``;\n","import { useState } from 'react';\nimport { fetchCityByName } from 'services/citySearchAPI';\nimport {\n  CityName,\n  DataList,\n  Input,\n  InputError,\n  InputWrap,\n  Label,\n  Option,\n  PlacesAutocomplete,\n  PlacesAutocompleteHint,\n} from './SearchForm.styled';\n\nexport const SearchForm = () => {\n  const [city, setCity] = useState('');\n  const [flag, setFlag] = useState('');\n  const [autocompleteCities, setAutocompleteCities] = useState([]);\n  const [autocompleteErr, setAutocompleteErr] = useState('');\n\n  const [isHideSuggs, setIsHideSuggs] = useState(false);\n\n  console.log(autocompleteCities);\n\n  const handleCityChange = async e => {\n    setCity(e.target.value);\n    setIsHideSuggs(false);\n\n    if (!city) return;\n\n    const res = await fetchCityByName(city);\n\n    console.log(res);\n\n    !autocompleteCities.includes(e.target.value) &&\n      res &&\n      setAutocompleteCities(res.map(place => place.name));\n    setFlag(res.map(place => place.country_code.toLowerCase()));\n    res.error ? setAutocompleteErr(res.error) : setAutocompleteErr('');\n  };\n\n  const hideSuggs = value => {\n    // onSelected(value);\n    setIsHideSuggs(true);\n  };\n\n  return (\n    <form>\n      <PlacesAutocomplete>\n        <InputWrap>\n          <Label>\n            Your city\n            {autocompleteErr && <InputError>{autocompleteErr}</InputError>}\n          </Label>\n          <Input\n            list=\"places\"\n            type=\"text\"\n            id=\"city\"\n            name=\"city\"\n            onChange={handleCityChange}\n            value={city}\n            required\n            pattern={autocompleteCities.join('|')}\n            autoComplete=\"off\"\n          />\n          <DataList style={{ display: isHideSuggs ? 'none' : 'block' }}>\n            {autocompleteCities.map((item, idx) => (\n              <Option\n                key={'' + item + idx}\n                onClick={() => {\n                  hideSuggs(item);\n                }}\n              >\n                <img\n                  src={`https://hatscripts.github.io/circle-flags/flags/${flag[idx]}.svg`}\n                  width=\"30\"\n                  alt=\"flag\"\n                />\n\n                <CityName>{item}</CityName>\n              </Option>\n            ))}\n          </DataList>\n          <PlacesAutocompleteHint>\n            *start typing and choose your city from the given options\n          </PlacesAutocompleteHint>\n          <button type=\"submit\">Submit</button>\n        </InputWrap>\n      </PlacesAutocomplete>\n    </form>\n  );\n};\n","import { CardUI } from 'components/Card/Card';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchGeoImage } from 'redux/location/locOperations';\nimport { getCityName, getGeoImages } from 'redux/location/locSelectors';\n\nconst { Container } = require('components/Container/Container');\n\nconst SearchPage = () => {\n  const city = useSelector(getCityName);\n  const images = useSelector(getGeoImages);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (city && images.length === 0) {\n      dispatch(fetchGeoImage());\n    }\n  }, [city, dispatch, images.length]);\n\n  return (\n    <main\n      style={{\n        minHeight: '70vh',\n      }}\n    >\n      <CardUI selector={getGeoImages} page=\"search\" />\n      <Container>\n        <SearchForm />\n      </Container>\n    </main>\n  );\n};\n\nexport default React.memo(SearchPage);\n","export const getCityId = state => state.location.cityID;\nexport const getCityName = state => state.location.city;\nexport const getCountry = state => state.location.country;\nexport const getCityImages = state => state.location.image;\nexport const getCurrentLongitude = state => state.location.longitude;\nexport const getCurrentLatitude = state => state.location.latitude;\nexport const getCurrentWeather = state => state.location.weather;\nexport const getAdditionalCurrentWeather = state =>\n  state.location.weatherAdditional;\nexport const getDayTime = state => state.location.daytime;\nexport const getTimezone = state => state.location.timezone;\nexport const getAstroData = state => state.location.astrodata;\nexport const getForcast = state => state.location.weatherForecast;\nexport const getDailyForcast = state => state.location.weather.daily;\nexport const getHourlyForcast = state => state.location.weather.hourly;\nexport const getAirData = state => state.location.airdata;\nexport const getHistory = state => state.location.history;\nexport const getHistoryImages = state => state.location.historyImages;\nexport const getDate = state => state.location.date;\nexport const getGeoImages = state => state.location.geoImages;\n"],"names":["Card","styled","p","image","View","page","paper","compass","lightining","keyframes","Lightning","lightiningPng","Storm","drift","FogWrapper","fog1","fog2","Fog","CardUI","selector","isRowBased","useMediaQuery","images","useSelector","dayTime","getDayTime","currentWeather","getAdditionalCurrentWeather","useState","bgImg","setImage","bgImgMob","imageMob","setImageMob","weatherCode","setWeatherCode","showSnow","setShowSnow","showRain","setShowRain","showDrizzle","setShowDrizzle","showHeavyDrizzle","setShowHeavyDrizzle","showStorm","setShowStorm","showBigSnow","setShowBigSnow","showFog","setShowFog","showThunderSnow","setShowThunderSnow","useEffect","length","landscape","portrait","random","Math","floor","condition","code","Snowfall","style","position","width","height","snowflakeCount","wind","speed","id","dropletsAmount","amplitude","query","mediaMatch","window","matchMedia","matches","setMatches","handler","e","addListener","removeListener","fetchCityByName","axios","OPEN_METEO_SEARCH_URL","res","data","results","console","log","PlacesAutocomplete","InputWrap","Label","InputError","Input","DataList","Option","PlacesAutocompleteHint","CityName","SearchForm","city","setCity","flag","setFlag","autocompleteCities","setAutocompleteCities","autocompleteErr","setAutocompleteErr","isHideSuggs","setIsHideSuggs","handleCityChange","target","value","includes","map","place","name","country_code","toLowerCase","error","list","type","onChange","required","pattern","join","autoComplete","display","item","idx","onClick","src","alt","Container","require","SearchPage","getCityName","getGeoImages","dispatch","useDispatch","fetchGeoImage","minHeight","React","state","location","getCountry","country","getCityImages","getCurrentLongitude","longitude","getCurrentLatitude","latitude","getCurrentWeather","weather","weatherAdditional","daytime","getTimezone","timezone","getAstroData","astrodata","getForcast","weatherForecast","getDailyForcast","daily","getHourlyForcast","hourly","getAirData","airdata","getHistory","history","getHistoryImages","historyImages","getDate","date","geoImages"],"sourceRoot":""}