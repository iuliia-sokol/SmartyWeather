{"version":3,"file":"static/js/647.3e507ef1.chunk.js","mappings":"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","sources":["components/Card/Card.styled.js","components/StormAnimation/Storm.styled.js","components/StormAnimation/Storm.jsx","components/FogAnimation/Fog.styled.js","components/FogAnimation/Fog.jsx","components/Card/Card.jsx","hooks/useMedia.js","utils/customAxis.js","utils/customDot.js","components/ChartBox/HourlyCharts.styled.js","components/ChartBox/HourlyCharts.jsx","components/Indicator/Indicator.styled.js","components/Indicator/Indicator.jsx","utils/formatDate.js","components/ChartBox/DailyCharts.styled.js","components/ChartBox/DailyCharts.jsx","components/BoxSubheader/Subheader.styled.js","components/BoxSubheader/Subheader.jsx","components/BoxWrapper/Wrapper.styled.js","components/BoxWrapper/Wrapper.jsx","components/ForecastBox/Forecast.styled.js","components/ForecastBox/Forecast.jsx","components/WeatherBox/WeatherBox.styled.js","components/WeatherBox/WeatherBox.jsx","utils/moonPhases.js","components/AstroBox/AstroBox.styled.js","components/AstroBox/AstroBox.jsx","components/AirBox/AirBox.styled.js","components/ChartBox/HourlyChartsAir.styled.js","components/ChartBox/HourlyChartsAir.jsx","components/AirBox/AirBox.jsx","utils/formatAirIndex.js","components/Button/Button.styled.js","components/Button/Button.jsx","utils/conditionsWeatherApi.js","components/MainBox/MainBox.styled.js","components/MainBox/MainBox.jsx","components/TextLine/TextLine.styled.js","components/TextLine/TextLine.jsx","pages/Homepage/Homepage.jsx","redux/location/locSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport paper from '../../images/old-paper.jpg';\nimport compass from '../../images/compass.jpg';\n\nexport const Card = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  background-image: ${p =>\n    p.image\n      ? p.image\n      : 'linear-gradient(47.75deg, #082276 7.07%, #030f34 97.3%), #082276;'};\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  -webkit-background-size: cover;\n  -o-background-size: cover;\n  -moz-background-size: cover;\n`;\n\nexport const View = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-size: ${p =>\n    p.page === 'home' ? 'cover' : p.page === 'history' ? 'contain' : 'cover'};\n  z-index: -2;\n  background: ${p =>\n    p.page === 'home'\n      ? 'linear-gradient(45deg, rgba(245, 70, 66, 0.45), rgba(8, 83, 156, 0.45))'\n      : p.page === 'history'\n      ? `url(${paper})`\n      : `url(${compass})`};\n\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#002f4b', endColorstr='#00000000',GradientType=0 );\n  opacity: ${p =>\n    p.page === 'home' ? '0.8' : p.page === 'history' ? '0.5' : '0.1'};\n`;\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\n\nimport lightiningPng from '../../images/lightining.png';\n\nconst lightining = keyframes`\n\n    0%{\n        opacity: 0;\n    }\n    20%{\n        opacity: 0;\n    }\n    21%{\n        opacity: 1;\n    }\n    25%{\n        opacity: 0;\n    }\n    30%{\n        opacity: 0;\n    }\n    31%{\n        opacity: 1;\n    }\n    35%{\n        opacity: 0;\n    }\n    100%{\n        opacity: 0;\n    }\n`;\n\nexport const Lightning = styled.div`\n  &::before {\n    content: '';\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    z-index: -1;\n    background-image: url(${lightiningPng});\n    transform: rotate(180deg);\n    animation: ${lightining} 4s linear infinite;\n    opacity: 1;\n  }\n`;\n","import { Lightning } from './Storm.styled';\n\nexport const Storm = () => {\n  return (\n    <>\n      <Lightning />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\n\nimport fog1 from '../../images/fog1.png';\nimport fog2 from '../../images/fog2.png';\n\nconst drift = keyframes`\n  from {\n      transform: translate3d(0, 0, 0);\n    }\n    to {\n      transform: translate3d(-200vw, 0, 0);\n    }`;\n\nexport const FogWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100%;\n  overflow: hidden;\n  pointer-events: none;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 300%;\n    background-size: cover;\n    /* background-position: center; */\n    background-repeat: repeat;\n  }\n  &:before {\n    background-image: url(${fog1});\n    animation: ${drift} 60s linear 0s infinite;\n  }\n  &:after {\n    background-image: url(${fog2});\n    animation: ${drift} 25s linear 0s infinite;\n  }\n`;\n","import { FogWrapper } from './Fog.styled';\n\nexport const Fog = () => {\n  return <FogWrapper />;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Snowfall from 'react-snowfall';\nimport Rainfall from 'react-rainfall-animation/src/Rain';\nimport ObliqueRain from 'react-rainfall-animation/src/ObliqueRain';\n\nimport { Card, View } from './Card.styled';\nimport {\n  getAdditionalCurrentWeather,\n  getDayTime,\n} from 'redux/location/locSelectors';\nimport { useMediaQuery } from 'hooks/useMedia';\nimport bgImgMob from '../../images/umbrella-red-wallpaper-mob.jpg';\nimport bgImg from '../../images/umbrella-red-wallpaper.jpg'; // 'https://www.wallpaperflare.com/static/79/210/459/nature-sky-umbrella-red-wallpaper-preview.jpg';\nimport { Storm } from 'components/StormAnimation/Storm';\nimport { Fog } from 'components/FogAnimation/Fog';\n\nexport const CardUI = ({ selector, page }) => {\n  const isRowBased = useMediaQuery('(min-width: 1280px)');\n  const images = useSelector(selector);\n  const dayTime = useSelector(getDayTime);\n\n  const currentWeather = useSelector(getAdditionalCurrentWeather);\n\n  const [image, setImage] = useState(bgImg);\n  const [imageMob, setImageMob] = useState(bgImgMob);\n  const [weatherCode, setWeatherCode] = useState('');\n  const [showSnow, setShowSnow] = useState(false);\n  const [showRain, setShowRain] = useState(false);\n  const [showDrizzle, setShowDrizzle] = useState(false);\n  const [showHeavyDrizzle, setShowHeavyDrizzle] = useState(false);\n  const [showStorm, setShowStorm] = useState(false);\n  const [showBigSnow, setShowBigSnow] = useState(false);\n  const [showFog, setShowFog] = useState(false);\n  const [showThunderSnow, setShowThunderSnow] = useState(false);\n\n  useEffect(() => {\n    if (images.length === 0) {\n      return;\n    }\n    if (images.length === 1) {\n      setImage(images[0].landscape);\n      setImageMob(images[0].portrait);\n    }\n    if (images.length > 1) {\n      const random = Math.floor(Math.random() * images.length);\n      setImage(images[random].landscape);\n      setImageMob(images[random].portrait);\n    }\n  }, [images]);\n\n  useEffect(() => {\n    if (page !== 'home' || page !== 'search') {\n      return;\n    }\n    if (currentWeather) {\n      setWeatherCode(currentWeather.condition.code);\n    }\n    if (\n      weatherCode === 1066 ||\n      weatherCode === 1210 ||\n      weatherCode === 1213 ||\n      weatherCode === 1216 ||\n      weatherCode === 1219 ||\n      weatherCode === 1261 ||\n      weatherCode === 1255\n    ) {\n      setShowSnow(true);\n      setShowRain(false);\n      setShowDrizzle(false);\n      setShowStorm(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1063 ||\n      weatherCode === 1069 ||\n      weatherCode === 1072 ||\n      weatherCode === 1150 ||\n      weatherCode === 1153 ||\n      weatherCode === 1168 ||\n      weatherCode === 1204 ||\n      weatherCode === 1249\n    ) {\n      setShowDrizzle(true);\n      setShowRain(false);\n      setShowSnow(false);\n      setShowStorm(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1180 ||\n      weatherCode === 1183 ||\n      weatherCode === 1186 ||\n      weatherCode === 1189 ||\n      weatherCode === 1192 ||\n      weatherCode === 1195 ||\n      weatherCode === 1198 ||\n      weatherCode === 1201 ||\n      weatherCode === 1240\n    ) {\n      setShowRain(true);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowStorm(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1087 ||\n      weatherCode === 1246 ||\n      weatherCode === 1243 ||\n      weatherCode === 1273 ||\n      weatherCode === 1276\n    ) {\n      setShowStorm(true);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1114 ||\n      weatherCode === 1117 ||\n      weatherCode === 1222 ||\n      weatherCode === 1225 ||\n      weatherCode === 1237 ||\n      weatherCode === 1264 ||\n      weatherCode === 1258\n    ) {\n      setShowBigSnow(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1009 ||\n      weatherCode === 1030 ||\n      weatherCode === 1006 ||\n      weatherCode === 1135 ||\n      weatherCode === 1147\n    ) {\n      setShowFog(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (weatherCode === 1279 || weatherCode === 1282) {\n      setShowThunderSnow(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1252 ||\n      weatherCode === 1207 ||\n      weatherCode === 1171\n    ) {\n      setShowHeavyDrizzle(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n    } else {\n      setShowHeavyDrizzle(false);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n    }\n  }, [currentWeather, page, weatherCode]);\n\n  return (\n    <>\n      {images && (\n        <Card image={!isRowBased ? `url(${imageMob})` : `url(${image})`}>\n          <View dayTime={dayTime} page={page} />\n        </Card>\n      )}\n      {showSnow && (\n        <Snowfall\n          style={{\n            position: 'fixed',\n            width: '100vw',\n            height: '100vh',\n          }}\n          snowflakeCount={200}\n        />\n      )}\n      {showBigSnow && (\n        <Snowfall\n          style={{\n            position: 'fixed',\n            width: '100vw',\n            height: '100vh',\n          }}\n          snowflakeCount={750}\n          wind={[2.5, 6.5]}\n          speed={[1.5, 5.5]}\n        />\n      )}\n      {showRain && (\n        <div id=\"Rain\">\n          <Rainfall dropletsAmount={1000} />\n        </div>\n      )}\n      {showDrizzle && (\n        <div id=\"Rain\">\n          <ObliqueRain dropletsAmount={300} amplitude={100} />\n        </div>\n      )}\n      {showHeavyDrizzle && (\n        <div id=\"Rain\">\n          <ObliqueRain dropletsAmount={1000} amplitude={100} />\n        </div>\n      )}\n      {showStorm && (\n        <div id=\"Rain\">\n          <Rainfall dropletsAmount={1000} />\n          <Storm />\n        </div>\n      )}\n      {showFog && <Fog />}\n      {showThunderSnow && (\n        <>\n          <Snowfall\n            style={{\n              position: 'fixed',\n              width: '100vw',\n              height: '100vh',\n            }}\n            snowflakeCount={750}\n            wind={[2.5, 6.5]}\n            speed={[1.5, 5.5]}\n          />\n          <Storm />\n        </>\n      )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport const useMediaQuery = query => {\n  const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};\n","import sprite from 'images/icons_sprite.svg';\n\nexport const renderCustomAxisTick = ({ x, y, payload }) => {\n  let path = '';\n\n  switch (payload.value) {\n    case '0':\n      path = 'day';\n      break;\n    case '1':\n      path = 'cloudy-day-1';\n      break;\n    case '2':\n      path = 'cloudy-day-2';\n      break;\n    case '3':\n    case '45':\n    case '48':\n      path = 'cloudy';\n      break;\n    case '51':\n    case '53':\n    case '55':\n    case '56':\n    case '57':\n      path = 'rainy-5';\n      break;\n    case '61':\n    case '63':\n    case '65':\n    case '66':\n    case '67':\n    case '80':\n    case '81':\n    case '82':\n      path = 'rainy-7';\n      break;\n    case '85':\n    case '86':\n    case '77':\n    case '71':\n    case '73':\n    case '75':\n      path = 'snowy';\n      break;\n    case '95':\n    case '96':\n    case '99':\n      path = 'thunder';\n      break;\n    default:\n      path = 'weather';\n  }\n\n  return (\n    <svg x={x - 30} y={y - 20} width={42} height={42} viewBox=\"0 0 46 46\">\n      <use href={sprite + `#${path}`} />\n    </svg>\n  );\n};\n","import sprite from 'images/icons_sprite.svg';\n\nimport { useSelector } from 'react-redux';\nimport { getCurrentWeather } from 'redux/location/locSelectors';\n\nexport const CustomizedDot = props => {\n  const { cx, cy, payload } = props;\n\n  const weather = useSelector(getCurrentWeather);\n  const currentTime = weather.current_weather.time.slice(11);\n\n  if (payload.time === currentTime) {\n    return (\n      <svg x={cx - 14} y={cy - 14} width={28} height={28}>\n        <use href={sprite + `#sun`} />\n      </svg>\n    );\n  }\n\n  return <></>;\n};\n\nexport const CustomizeActivedDot = props => {\n  const { cx, cy } = props;\n\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#planet-earth`} />\n      </svg>\n    </>\n  );\n};\n\nexport const CustomizeActivedDotTempMin = props => {\n  const { cx, cy } = props;\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#temp-min`} />\n      </svg>\n    </>\n  );\n};\n\nexport const CustomizeActivedDotTempMax = props => {\n  const { cx, cy } = props;\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#temp-max`} />\n      </svg>\n    </>\n  );\n};\n\nexport const CustomizeActivedDotPrecipitation = props => {\n  const { cx, cy } = props;\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#umbrella`} />\n      </svg>\n    </>\n  );\n};\n\nexport const CustomizedDotEuAQI = props => {\n  const { cx, cy, value } = props;\n\n  if (value <= 100 && value >= 80) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"red\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 79 && value >= 60) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"orange\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 59 && value >= 40) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"#ffb44a\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 39 && value >= 20) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"#a3d661\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  return (\n    <svg\n      x={cx - 8}\n      y={cy - 8}\n      width={16}\n      height={16}\n      fill=\"#4ad295\"\n      stroke=\"black\"\n    >\n      <use href={sprite + `#balloon`} />\n    </svg>\n  );\n};\n\nexport const CustomizedDotUsAQI = props => {\n  const { cx, cy, value } = props;\n\n  if (value <= 500 && value >= 301) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"red\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 300 && value >= 201) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"orange\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 200 && value >= 151) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"#ffb44a\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 150 && value >= 101) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"#bcba1c\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 100 && value >= 51) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"#a3d661\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  return (\n    <svg\n      x={cx - 8}\n      y={cy - 8}\n      width={16}\n      height={16}\n      fill=\"#4ad295\"\n      stroke=\"black\"\n    >\n      <use href={sprite + `#balloon`} />\n    </svg>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ChartsWrapper = styled.div`\n  width: 100%;\n  height: 250px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    height: 300px;\n    margin-top: 32px;\n  }\n`;\n","import { useMediaQuery } from 'hooks/useMedia';\nimport { useSelector } from 'react-redux';\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  ReferenceLine,\n} from 'recharts';\nimport { getHourlyForcast } from 'redux/location/locSelectors';\nimport { renderCustomAxisTick } from 'utils/customAxis';\nimport { CustomizeActivedDot, CustomizedDot } from 'utils/customDot';\nimport { ChartsWrapper } from './HourlyCharts.styled';\n\nexport const HourlyChartsUI = () => {\n  const hourlyForecast = useSelector(getHourlyForcast);\n  const isRowBased = useMediaQuery('(min-width: 768px)');\n\n  // FOR HOURLY FORECAST\n\n  const hours = hourlyForecast.time.map(el => el).slice(0, 24);\n  const temp = hourlyForecast.temperature_2m.map(el => el).slice(0, 24);\n  const code = hourlyForecast.weathercode.map(el => el).slice(0, 24);\n  const hourlyData = hours.map((el, index) => {\n    return {\n      time: `${el}`.slice(11),\n      temperature: `${temp[index]}`,\n      code: `${code[index]}`,\n    };\n  });\n\n  return (\n    <ChartsWrapper>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <AreaChart\n          width={200}\n          height={200}\n          data={hourlyData}\n          fill=\"rgba(233, 201, 57, 0.25)\"\n          margin={{\n            top: 5,\n            right: 16,\n            left: 16,\n            bottom: 5,\n          }}\n        >\n          <ReferenceLine\n            y={0}\n            strokeDasharray=\"5 5\"\n            stroke=\"rgba(51, 40, 33, 0.7)\"\n          />\n          <Tooltip />\n          {isRowBased && (\n            <>\n              <YAxis interval=\"preserveStartEnd\" />\n              <XAxis\n                dataKey=\"code\"\n                xAxisId=\"1\"\n                stroke=\"transparent\"\n                fill=\"transparent\"\n                tick={renderCustomAxisTick}\n              />\n            </>\n          )}\n          <XAxis dataKey=\"time\" xAxisId=\"0\" />\n\n          <Area\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"temperature\"\n            stroke=\"#E9C939\"\n            strokeWidth={3}\n            fill=\"rgba(233, 201, 57, 0.25)\"\n            activeDot={<CustomizeActivedDot />}\n            dot={<CustomizedDot />}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    </ChartsWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Indicator = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: calc(50% - 32px);\n  box-shadow: 4px 0px 20px rgba(0, 0, 0, 0.25);\n  border-radius: ${p => p.theme.radii.main};\n  padding: 8px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p =>\n    p.color === 'blue'\n      ? p.theme.colors.accentBlue\n      : p.color === 'pink'\n      ? p.theme.colors.accentPink\n      : p.color === 'violet'\n      ? p.theme.colors.accentViolet\n      : p.theme.colors.textGrey};\n  background-color: ${p =>\n    p.color === 'blue'\n      ? p.theme.colors.bgBlue\n      : p.color === 'pink'\n      ? p.theme.colors.bgPink\n      : p.color === 'violet'\n      ? p.theme.colors.bgViolet\n      : p.theme.colors.bgGrey};\n\n  & svg {\n    width: 20px;\n    height: 20px;\n  }\n\n  & img {\n    width: 30px;\n    height: 30px;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px;\n    width: 20%;\n\n    & img {\n      width: 40px;\n      height: 40px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: fit-content;\n    }\n  }\n`;\n\nexport const IndicatorText = styled.span`\n  display: none;\n\n  @media screen and (min-width: 1280px) {\n    display: inline-block;\n    margin-right: 8px;\n  }\n`;\n\nexport const IndicatorImg = styled.img`\n  display: block;\n  width: 40px;\n  height: auto;\n  margin: 0 !important;\n`;\n","import { Indicator, IndicatorText, IndicatorImg } from './Indicator.styled';\n\nexport const IndicatorUI = ({ src, text, source, color = 'grey' }) => {\n  return (\n    <Indicator color={color}>\n      <IndicatorImg src={src} alt={text} loading=\"lazy\" />\n      <IndicatorText>{text}</IndicatorText>\n      <span>{source}</span>\n    </Indicator>\n  );\n};\n","export const formatDate = date => {\n  const month = String(date.toLocaleString('en-us', { month: 'short' }));\n  const day = String(date.getDate()).padStart(2, '0');\n\n  return `${month}, ${day}`;\n};\n","import styled from 'styled-components';\n\nexport const ChartsWrapper = styled.div`\n  width: 100%;\n  height: 350px;\n\n  @media screen and (min-width: 768px) {\n    height: 450px;\n    margin-top: 0;\n  }\n`;\n","import { useMediaQuery } from 'hooks/useMedia';\nimport { useSelector } from 'react-redux';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  ReferenceLine,\n} from 'recharts';\nimport { getDailyForcast } from 'redux/location/locSelectors';\nimport { renderCustomAxisTick } from 'utils/customAxis';\n\nimport {\n  CustomizeActivedDotPrecipitation,\n  CustomizeActivedDotTempMax,\n  CustomizeActivedDotTempMin,\n} from 'utils/customDot';\nimport { formatDate } from 'utils/formatDate';\nimport { ChartsWrapper } from './DailyCharts.styled';\n\nexport const DailyChartsUI = () => {\n  const dailyForecast = useSelector(getDailyForcast);\n\n  const isRowBased = useMediaQuery('(min-width: 768px)');\n\n  //   FOR DAILY FORECAST\n\n  const dates = dailyForecast.time.map(el => formatDate(new Date(el)));\n  const tempMin = dailyForecast.temperature_2m_min.map(el => el);\n  const tempMax = dailyForecast.temperature_2m_max.map(el => el);\n  const code = dailyForecast.weathercode.map(el => el);\n  const precipitation = dailyForecast.precipitation_sum.map(el => el);\n\n  const dailyData = dates.map((el, index) => {\n    return {\n      date: `${el}`,\n      dateShort: `${el}`.slice(5),\n      min: `${tempMin[index]}`,\n      max: `${tempMax[index]}`,\n      code: `${code[index]}`,\n      precipitation: `${precipitation[index]}`,\n    };\n  });\n\n  return (\n    <ChartsWrapper>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          width={200}\n          height={200}\n          data={dailyData}\n          margin={{\n            top: 0,\n            right: 16,\n            left: 16,\n            bottom: 16,\n          }}\n        >\n          <Tooltip />\n          <ReferenceLine\n            y={0}\n            strokeDasharray=\"5 5\"\n            stroke=\"rgba(51, 40, 33, 0.7)\"\n          />\n          {isRowBased ? (\n            <>\n              <YAxis />\n              <XAxis\n                dataKey=\"code\"\n                xAxisId=\"1\"\n                stroke=\"transparent\"\n                fill=\"transparent\"\n                tick={renderCustomAxisTick}\n              />\n              <XAxis dataKey=\"date\" />\n            </>\n          ) : (\n            <XAxis dataKey=\"dateShort\" />\n          )}\n\n          <XAxis dataKey=\"date\" />\n          <Line\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"min\"\n            stroke=\"#658ED9\"\n            strokeWidth={3}\n            activeDot={<CustomizeActivedDotTempMin />}\n            dot={{ r: 2 }}\n          />\n          <Line\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"max\"\n            stroke=\"rgba(212, 66, 111, 0.5)\"\n            strokeWidth={3}\n            activeDot={<CustomizeActivedDotTempMax />}\n            dot={{ r: 2 }}\n          />\n          <Line\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"precipitation\"\n            stroke=\"rgba(51, 40, 33, 0.4)\"\n            strokeWidth={3}\n            strokeDasharray=\"3 3\"\n            activeDot={<CustomizeActivedDotPrecipitation />}\n            dot={{ r: 2 }}\n          />\n          <Legend />\n        </LineChart>\n      </ResponsiveContainer>\n    </ChartsWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Header = styled.h3`\n  text-align: center;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n    font-size: 32px;\n  }\n`;\n","import { Header } from './Subheader.styled';\n\nexport const Subheader = ({ text }) => {\n  return <Header>{text}</Header>;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 32px 16px;\n  background: rgba(255, 255, 255, 0.23);\n  border-radius: 30px;\n  gap: 16px;\n  /* box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1); */\n  /* box-shadow: 0px 5px 10px 0px rgba(0, 255, 255, 0.7); */\n  box-shadow: inset -5px -5px 9px rgba(255, 255, 255, 0.45),\n    inset 5px 5px 9px rgba(94, 104, 121, 0.3);\n  backdrop-filter: blur(5.3px);\n  -webkit-backdrop-filter: blur(5.3px);\n  border: 1px solid rgba(255, 255, 255, 0.77);\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n\n  @media screen and (min-width: 768px) {\n    padding: 56px 32px;\n  }\n`;\n","import { Wrapper } from './Wrapper.styled';\n\nexport const WrapperBox = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n","import styled from 'styled-components';\n\nexport const ForecastWrapper = styled.li`\n  /* width: 80%; */\n  width: calc(100% / 3 - 16px);\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n  align-items: center;\n  padding: 16px 8px;\n  background: rgba(255, 255, 255, 0.28);\n  border-radius: 16px;\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border-radius: ${p => p.theme.radii.main};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 16px;\n  line-height: ${p => p.theme.lineHeights.main};\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: calc(100% / 3 - 16px);\n    padding: 16px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & img {\n    /* position: absolute;\n    top: -10%; */\n  }\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const DateText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 24px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  @media screen and (min-width: 1280px) {\n    font-size: 46px;\n  }\n`;\n\nexport const ConditionText = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center; */\n  align-items: center;\n  gap: 6px;\n  margin-bottom: 8px;\n  flex-grow: 1;\n\n  & span {\n    display: flex;\n    padding: 10px;\n    color: ${p => p.theme.colors.mainLight};\n    background-color: ${p => p.theme.colors.mainAccentPink};\n    border-radius: ${p => p.theme.radii.main};\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    gap: 16px;\n    margin-bottom: 12px;\n    justify-content: space-between;\n  }\n`;\n\nexport const Text = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & img {\n    width: 30px;\n  }\n\n  & span {\n    display: none;\n  }\n\n  @media screen and (min-width: 1280px) {\n    & span {\n      display: inline-flex;\n    }\n  }\n`;\n\nexport const TextRain = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & img {\n    width: 20px;\n  }\n`;\n","import { formatDate } from 'utils/formatDate';\nimport {\n  ForecastWrapper,\n  IconWrapper,\n  Text,\n  ConditionText,\n  TextWrapper,\n  DateText,\n  TextRain,\n} from './Forecast.styled';\n\nimport tempPng from '../../images/celsius-min.png';\nimport humidPng from '../../images/hydrometer-min.png';\nimport yes from '../../images/yes-min.png';\nimport no from '../../images/no-min.png';\n\nexport const ForecastUI = ({\n  icon,\n  date,\n  temperature,\n  humidity,\n\n  condition,\n  percipitation,\n}) => {\n  const formatedDate = formatDate(new Date(date));\n  return (\n    <ForecastWrapper>\n      <DateText>{formatedDate}</DateText>\n      <ConditionText>\n        <IconWrapper>\n          <img src={icon} alt={condition} />\n        </IconWrapper>\n        <span>{condition}</span>\n      </ConditionText>\n      <TextWrapper>\n        <Text>\n          <img src={tempPng} alt=\"Temperature\" />\n          <span>Temperature:</span> {temperature} °C\n        </Text>\n        <Text>\n          <img src={humidPng} alt=\"Humidity\" />\n          <span>Humidity:</span> {humidity} %\n        </Text>\n        <TextRain>\n          <span>Rain:</span>\n          {percipitation ? (\n            <img src={yes} alt=\"yes\" />\n          ) : (\n            <img src={no} alt=\"no\" />\n          )}\n        </TextRain>\n      </TextWrapper>\n    </ForecastWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ForecastWrapper = styled.ul`\n  display: flex;\n  width: 100%;\n  align-items: stretch;\n  gap: 6px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    gap: 16px;\n  }\n`;\n\nexport const IndicatorsWrapper = styled.ul`\n  display: flex;\n  gap: 16px;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 16px;\n\n  & li {\n    display: flex;\n    width: 80%;\n\n    & span {\n      margin-right: 0;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-between;\n\n    & li {\n      width: 25%;\n    }\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  getAdditionalCurrentWeather,\n  getCurrentWeather,\n  getForcast,\n} from 'redux/location/locSelectors';\n\nimport { IndicatorUI } from 'components/Indicator/Indicator';\nimport { DailyChartsUI } from 'components/ChartBox/DailyCharts';\nimport { Subheader } from 'components/BoxSubheader/Subheader';\nimport { WrapperBox } from 'components/BoxWrapper/Wrapper';\nimport { ForecastUI } from 'components/ForecastBox/Forecast';\nimport { ForecastWrapper, IndicatorsWrapper } from './WeatherBox.styled';\n\nimport hot from '../../images/hot-min.png';\nimport cold from '../../images/cold-min.png';\nimport clouds from '../../images/cloud-min.png';\nimport windrose from '../../images/wind-rose-min.png';\nimport windBlow from '../../images/dashing-away-min.png';\nimport windSocket from '../../images/windsock-min.png';\nimport pressure from '../../images/pressure-min.png';\nimport uv from '../../images/uv-index-min.png';\nimport radio from '../../images/optical-radiation-min.png';\n\nconst WeatherUI = () => {\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n  const forecast = useSelector(getForcast);\n\n  return weather && extraWeather ? (\n    <WrapperBox>\n      <Subheader text=\"Today's data\" />\n      <IndicatorsWrapper>\n        <IndicatorUI\n          src={hot}\n          text=\"Max temperature:\"\n          source={`${weather.daily.temperature_2m_max[0]} °C`}\n        />\n        <IndicatorUI\n          src={cold}\n          text=\"Min temperature:\"\n          source={`${weather.daily.temperature_2m_min[0]} °C`}\n        />\n        <IndicatorUI\n          src={clouds}\n          text=\"Clouds:\"\n          source={`${extraWeather.cloud} %`}\n        />\n        <IndicatorUI\n          src={windBlow}\n          text=\"Max windgusts:\"\n          source={`${weather.daily.windgusts_10m_max[0]} km/h`}\n        />\n        <IndicatorUI\n          src={windSocket}\n          text=\"Max windspeed:\"\n          source={`${weather.daily.windspeed_10m_max[0]} km/h`}\n        />\n        <IndicatorUI\n          src={windrose}\n          text=\"Wind direction:\"\n          source={extraWeather.wind_dir}\n        />\n        <IndicatorUI\n          src={pressure}\n          text=\"Pressure:\"\n          source={`${extraWeather.pressure_mb} millibars`}\n        />\n        <IndicatorUI\n          src={radio}\n          text=\"Shortwave radiation:\"\n          source={`${weather.daily.shortwave_radiation_sum[0]} MJ/m²`}\n        />\n        <IndicatorUI src={uv} text=\"UV:\" source={`Index ${extraWeather.uv}`} />\n      </IndicatorsWrapper>\n      <Subheader text=\"Next days forecast\" />\n      <ForecastWrapper>\n        {forecast.map(el => {\n          return (\n            <ForecastUI\n              key={el.date}\n              date={el.date}\n              humidity={el.day.avghumidity}\n              percipitation={el.day.daily_will_it_rain}\n              condition={el.day.condition.text}\n              icon={el.day.condition.icon}\n              temperature={el.day.avgtemp_c}\n            />\n          );\n        })}\n      </ForecastWrapper>\n      <Subheader text=\"7-day forecast\" />\n      <DailyChartsUI />\n    </WrapperBox>\n  ) : (\n    <div>No weather data available</div>\n  );\n};\n\nexport default React.memo(WeatherUI);\n","import newMoon from '../images/moonPhases/new-moon-min.png';\nimport waxingCrescent from '../images/moonPhases/waxing-crescent-min.png';\nimport firstQuarter from '../images/moonPhases/first-quarter-min.png';\nimport waxingGibbous from '../images/moonPhases/waxing-gibbous-min.png';\nimport fullMoon from '../images/moonPhases/full-moon-min.png';\nimport waningGibbous from '../images/moonPhases/waning-gibbous-min.png';\nimport lastQuarter from '../images/moonPhases/last-quarter-min.png';\nimport waningCrescent from '../images/moonPhases/waning-crescent-min.png';\n\nexport const moonPhasesPng = [\n  { phase: 'New', png: newMoon },\n  { phase: 'New moon', png: newMoon },\n  { phase: 'Waxing Crescent', png: waxingCrescent },\n  { phase: 'First Quarter', png: firstQuarter },\n  { phase: 'Waxing Gibbous', png: waxingGibbous },\n  { phase: 'Full moon', png: fullMoon },\n  { phase: 'Full', png: fullMoon },\n  { phase: 'Waning Gibbous', png: waningGibbous },\n  { phase: 'Last Quarter', png: lastQuarter },\n  { phase: 'Third Quarter', png: lastQuarter },\n  { phase: 'Waning Crescent', png: waningCrescent },\n];\n","import { IndicatorUI } from 'components/Indicator/Indicator';\n\nimport styled from 'styled-components';\n\nexport const SunBox = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const MoonBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  column-gap: 32px;\n  row-gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const AstroIndicator = styled(IndicatorUI)`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MoonImg = styled.img`\n  width: 60%;\n  height: auto;\n  margin: 0;\n\n  @media screen and (min-width: 768px) {\n    width: calc(50% - 32px);\n    height: auto;\n  }\n`;\n\nexport const MoonIndicatorsWrapper = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  row-gap: 16px;\n  width: max-content;\n  width: 100%;\n\n  & li {\n    box-sizing: border-box;\n    width: 80%;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: column;\n    width: calc(50% - 16px);\n\n    & li {\n      width: 100%;\n    }\n  }\n`;\n\nexport const SunIndicatorsWrapper = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  row-gap: 16px;\n  column-gap: 32px;\n  width: 100%;\n\n  & li {\n    box-sizing: border-box;\n    width: 80%;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n\n    & li {\n      width: calc(50% - 16px);\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAstroDataFromWeatherApi } from 'redux/location/locOperations';\nimport { getAstroData } from 'redux/location/locSelectors';\nimport { moonPhasesPng } from 'utils/moonPhases';\nimport moonrise from '../../images/moonrise-min.png';\nimport moonset from '../../images/moonset-min.png';\nimport phase from '../../images/waxing-gibbous-min.png';\nimport moon from '../../images/moon-min.png';\nimport sunrise from '../../images/sunrise-min.png';\nimport sunset from '../../images/sunset-min.png';\n\nimport {\n  MoonBox,\n  SunBox,\n  MoonImg,\n  AstroIndicator,\n  MoonIndicatorsWrapper,\n  SunIndicatorsWrapper,\n} from './AstroBox.styled';\nimport { WrapperBox } from 'components/BoxWrapper/Wrapper';\n\nfunction AstroUI() {\n  const astro = useSelector(getAstroData);\n  const moonPhase = astro.moon_phase;\n  const [moonPng, setMoonPng] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (astro) {\n      const moonImg = moonPhasesPng.find(\n        cond => cond.phase.toLowerCase() === moonPhase.toLowerCase()\n      ).png;\n\n      setMoonPng(moonImg);\n      return;\n    }\n    dispatch(fetchAstroDataFromWeatherApi());\n  }, [dispatch, astro, moonPhase]);\n\n  return astro && moonPng ? (\n    <WrapperBox>\n      <MoonBox>\n        <MoonImg src={moonPng} alt=\"moon phase\" loading=\"lazy\" />\n        <MoonIndicatorsWrapper>\n          <AstroIndicator\n            src={moon}\n            text=\"Moon illumination:\"\n            source={`${astro.moon_illumination} %`}\n          />\n          <AstroIndicator\n            src={phase}\n            text=\"Moon phase:\"\n            source={`${astro.moon_phase}`}\n          />\n          <AstroIndicator\n            src={moonrise}\n            text=\"Moonrise:\"\n            source={`${astro.moonrise}`}\n          />\n          <AstroIndicator\n            src={moonset}\n            text=\"Moonset:\"\n            source={`${astro.moonset}`}\n          />\n        </MoonIndicatorsWrapper>\n      </MoonBox>\n      <SunBox>\n        <SunIndicatorsWrapper>\n          <AstroIndicator\n            src={sunrise}\n            text=\"Sunrise:\"\n            source={`${astro.sunrise}`}\n          />\n          <AstroIndicator\n            src={sunset}\n            text=\"Sunset:\"\n            source={`${astro.sunset}`}\n          />\n        </SunIndicatorsWrapper>\n      </SunBox>\n    </WrapperBox>\n  ) : (\n    <div>No astro data available</div>\n  );\n}\n\nexport default React.memo(AstroUI);\n","import styled from 'styled-components';\n\nexport const CurrentState = styled.div`\n  padding: 10px 24px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.mainLight};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  background-color: ${p =>\n    p.index === 'Good'\n      ? '#31a37d'\n      : p.index === 'Moderate'\n      ? '#709f2e'\n      : p.index === 'Unhealthy for sensitive group'\n      ? '#bcba1c'\n      : p.index === 'Unhealthy'\n      ? '#ca7616'\n      : p.index === 'Very unhealthy'\n      ? '#ca5b16'\n      : p.index === 'Hazardous'\n      ? '#ca3116'\n      : '#5E4FC1'};\n  border-radius: ${p => p.theme.radii.main};\n\n  & span {\n    font-weight: ${p => p.theme.fontWeights[1]};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const IndicatorsWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n\n  & li {\n    font-size: 16px;\n    justify-content: center;\n    width: 80%;\n    height: fit-content;\n\n    & img {\n      width: 40px;\n      height: auto;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-between;\n    & li {\n      width: 25%;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ChartsWrapper = styled.div`\n  width: 100%;\n  height: 250px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    height: 300px;\n    margin-top: 32px;\n  }\n`;\n","import { useMediaQuery } from 'hooks/useMedia';\nimport { useSelector } from 'react-redux';\nimport {\n  ReferenceLine,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  LineChart,\n  Line,\n} from 'recharts';\nimport { getAirData, getCurrentWeather } from 'redux/location/locSelectors';\nimport { CustomizedDotEuAQI, CustomizedDotUsAQI } from 'utils/customDot';\nimport { ChartsWrapper } from './HourlyChartsAir.styled';\n\nexport const HourlyChartsAirUI = () => {\n  const airData = useSelector(getAirData);\n  const isRowBased = useMediaQuery('(min-width: 768px)');\n\n  const hours = airData.hourly.time.map(el => el).slice(0, 24);\n  const dust = airData.hourly.dust.map(el => el).slice(0, 24);\n  const alder_pollen = airData.hourly.alder_pollen.map(el => el).slice(0, 24);\n  const birch_pollen = airData.hourly.birch_pollen.map(el => el).slice(0, 24);\n  const grass_pollen = airData.hourly.grass_pollen.map(el => el).slice(0, 24);\n  const mugwort_pollen = airData.hourly.mugwort_pollen\n    .map(el => el)\n    .slice(0, 24);\n  const olive_pollen = airData.hourly.olive_pollen.map(el => el).slice(0, 24);\n  const ragweed_pollen = airData.hourly.ragweed_pollen\n    .map(el => el)\n    .slice(0, 24);\n  const euAQI = airData.hourly.european_aqi.map(el => el).slice(0, 24);\n  const usAQI = airData.hourly.us_aqi.map(el => el).slice(0, 24);\n  const weather = useSelector(getCurrentWeather);\n  const currentTime = weather.current_weather.time.slice(11);\n\n  const hourlyData = hours.map((el, index) => {\n    return {\n      time: `${el}`.slice(11),\n      dust: `${dust[index]}`,\n      alder_pollen: `${alder_pollen[index]}`,\n      birch_pollen: `${birch_pollen[index]}`,\n      grass_pollen: `${grass_pollen[index]}`,\n      mugwort_pollen: `${mugwort_pollen[index]}`,\n      olive_pollen: `${olive_pollen[index]}`,\n      ragweed_pollen: `${ragweed_pollen[index]}`,\n      euAQI: `${euAQI[index]}`,\n      usAQI: `${usAQI[index]}`,\n    };\n  });\n\n  //   console.log(hourlyData);\n\n  return (\n    <ChartsWrapper>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          width={500}\n          height={300}\n          data={hourlyData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <Tooltip />\n          <Legend />\n          {isRowBased && (\n            <>\n              <YAxis interval=\"preserveStartEnd\" />\n            </>\n          )}\n          <XAxis dataKey=\"time\" xAxisId=\"0\" />\n          <ReferenceLine\n            x={currentTime}\n            strokeDasharray=\"5 5\"\n            stroke=\"rgba(212, 66, 111, 0.5)\"\n          />\n          <Line dataKey=\"dust\" stroke=\"rgba(21, 144, 165, 0.454)\" />\n          <Line\n            dataKey=\"usAQI\"\n            stroke=\"rgba(91, 138, 219, 0.763)\"\n            dot={<CustomizedDotUsAQI />}\n          />\n          <Line\n            dataKey=\"euAQI\"\n            stackId=\"a\"\n            stroke=\"rgba(103, 225, 66, 0.664)\"\n            dot={<CustomizedDotEuAQI />}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </ChartsWrapper>\n  );\n};\n","import { WrapperBox } from 'components/BoxWrapper/Wrapper';\nimport { IndicatorUI } from 'components/Indicator/Indicator';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAirData } from 'redux/location/locSelectors';\nimport { CurrentState, IndicatorsWrapper } from './AirBox.styled';\n\nimport co from '../../images/air/co-min.png';\nimport no2 from '../../images/air/no2-min.png';\nimport o3 from '../../images/air/o3-min.png';\nimport so2 from '../../images/air/so2-min.png';\nimport pm25 from '../../images/air/pm25-min.png';\nimport pm10 from '../../images/air/pm10-min.png';\nimport { formatIndex } from 'utils/formatAirIndex';\nimport { HourlyChartsAirUI } from 'components/ChartBox/HourlyChartsAir';\n\nconst AirUI = () => {\n  const air = useSelector(getAirData);\n  const index = formatIndex(air['us-epa-index']);\n  return (\n    <WrapperBox>\n      <CurrentState index={index}>\n        Air quality: <span> {index}</span>\n      </CurrentState>\n      <IndicatorsWrapper>\n        <IndicatorUI\n          src={co}\n          text=\"Carbon monoxide\"\n          source={`${air.co.toFixed(2)} μg/m3`}\n        />\n        <IndicatorUI\n          src={no2}\n          text=\"Nitrogen dioxide\"\n          source={`${air.no2.toFixed(2)} μg/m3`}\n        />\n        <IndicatorUI\n          src={o3}\n          text=\"Ozone\"\n          source={`${air.o3.toFixed(2)} μg/m3`}\n        />\n        <IndicatorUI\n          src={so2}\n          text=\"Sulphur dioxide\"\n          source={`${air.so2.toFixed(2)} μg/m3`}\n        />\n        <IndicatorUI\n          src={pm25}\n          text=\"PM2.5\"\n          source={`${air.pm2_5.toFixed(2)} μg/m3`}\n        />\n        <IndicatorUI\n          src={pm10}\n          text=\"PM10\"\n          source={`${air.pm10.toFixed(2)} μg/m3`}\n        />\n      </IndicatorsWrapper>\n      <HourlyChartsAirUI />\n    </WrapperBox>\n  );\n};\n\nexport default React.memo(AirUI);\n","export const formatIndex = index => {\n  switch (index) {\n    case 1:\n      return 'Good';\n    case 2:\n      return 'Moderate';\n    case 3:\n      return 'Unhealthy for sensitive group';\n    case 4:\n      return 'Unhealthy';\n    case 5:\n      return 'Very unhealthy';\n    case 6:\n      return 'Hazardous';\n    default:\n      return;\n  }\n};\n","import styled from 'styled-components';\n\nexport const ButtonMain = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  height: 50px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p =>\n    p.color === 'blue' ? p.theme.colors.accentBlue : p.theme.colors.textGrey};\n  text-align: center;\n  text-transform: uppercase;\n  border: none;\n  background-color: transparent;\n\n  @media screen and (min-width: 768px) {\n    height: 70px;\n  }\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    display: inline-block;\n    width: calc(100%);\n    height: 40px;\n    border: 4px solid\n      ${p =>\n        p.color === 'blue'\n          ? p.theme.colors.accentBlue\n          : p.color === 'pink'\n          ? p.theme.colors.accentPink\n          : p.color === 'violet'\n          ? p.theme.colors.accentViolet\n          : p.theme.colors.iconsFill};\n    border-radius: 50px;\n    z-index: -10;\n\n    @media screen and (min-width: 768px) {\n      width: calc(100%);\n      height: 50px;\n    }\n  }\n\n  &:before {\n    bottom: 0;\n    left: 0;\n    background-color: ${p =>\n      p.selected ? p.theme.colors.bgYellow : 'transparent'};\n    transition: transform 0.3s, background-color 0.3s;\n  }\n\n  &:after {\n    top: 10px;\n    left: 0px;\n    opacity: 0.3;\n    transition: transform 0.3s, opacity 0.3s;\n\n    @media screen and (min-width: 768px) {\n      left: 10px;\n      top: 0px;\n    }\n  }\n\n  // Hover\n\n  &:hover {\n    span {\n      color: ${p => p.theme.colors.mainLight};\n      transform: translate(0px, -5px);\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n    &:before {\n      background-color: ${p =>\n        p.color === 'blue'\n          ? p.theme.colors.accentBlue\n          : p.theme.colors.textGrey};\n      transform: translate(0px, -5px);\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n    &:after {\n      transform: translate(0px, 5px);\n      opacity: 0;\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n  }\n\n  // Active\n  &:active {\n    &:before {\n      background-color: ${p => p.theme.colors.bgYellow};\n    }\n  }\n`;\n\nexport const ButtonText = styled.span`\n  display: inline-flex;\n  position: relative;\n  top: 5%;\n  left: 2%;\n  z-index: 1000;\n  transition: transform 0.3s, color 0.2s;\n\n  @media screen and (min-width: 768px) {\n    top: 10%;\n    left: 0px;\n  }\n`;\n","import { ButtonMain, ButtonText } from './Button.styled';\n\nexport const ButtonUI = ({ text, type, onClick, selected }) => {\n  return (\n    <ButtonMain selected={selected} type={type} onClick={onClick}>\n      <ButtonText>{text}</ButtonText>\n    </ButtonMain>\n  );\n};\n","import daySun from '../images/conditions/day-sun-min.png';\nimport dayClouds from '../images/conditions/day-clouds-min.png';\nimport dayRain from '../images/conditions/day-rain-min.png';\nimport daySnow from '../images/conditions/day-snow-min.png';\nimport dayStorm from '../images/conditions/day-storm-min.png';\nimport dayWind from '../images/conditions/day-wind-min.png';\n\nimport nightMoon from '../images/conditions/night-moon-min.png';\nimport nightClouds from '../images/conditions/night-clouds-min.png';\nimport nightRain from '../images/conditions/night-rain-min.png';\nimport nightWind from '../images/conditions/night-wind-min.png';\nimport nightSnow from '../images/conditions/night-snow-min.png';\nimport nightStorm from '../images/conditions/night-storm-min.png';\n\nexport const conditionsWeatherApi = [\n  {\n    code: 1000,\n    day: 'Sunny',\n    night: 'Clear',\n    icon: 113,\n    png: [daySun, nightMoon],\n  },\n  {\n    code: 1003,\n    day: 'Partly cloudy',\n    night: 'Partly cloudy',\n    icon: 116,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1006,\n    day: 'Cloudy',\n    night: 'Cloudy',\n    icon: 119,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1009,\n    day: 'Overcast',\n    night: 'Overcast',\n    icon: 122,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1030,\n    day: 'Mist',\n    night: 'Mist',\n    icon: 143,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1063,\n    day: 'Patchy rain possible',\n    night: 'Patchy rain possible',\n    icon: 176,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1066,\n    day: 'Patchy snow possible',\n    night: 'Patchy snow possible',\n    icon: 179,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1069,\n    day: 'Patchy sleet possible',\n    night: 'Patchy sleet possible',\n    icon: 182,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1072,\n    day: 'Patchy freezing drizzle possible',\n    night: 'Patchy freezing drizzle possible',\n    icon: 185,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1087,\n    day: 'Thundery outbreaks possible',\n    night: 'Thundery outbreaks possible',\n    icon: 200,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1114,\n    day: 'Blowing snow',\n    night: 'Blowing snow',\n    icon: 227,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1117,\n    day: 'Blizzard',\n    night: 'Blizzard',\n    icon: 230,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1135,\n    day: 'Fog',\n    night: 'Fog',\n    icon: 248,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1147,\n    day: 'Freezing fog',\n    night: 'Freezing fog',\n    icon: 260,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1150,\n    day: 'Patchy light drizzle',\n    night: 'Patchy light drizzle',\n    icon: 263,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1153,\n    day: 'Light drizzle',\n    night: 'Light drizzle',\n    icon: 266,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1168,\n    day: 'Freezing drizzle',\n    night: 'Freezing drizzle',\n    icon: 281,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1171,\n    day: 'Heavy freezing drizzle',\n    night: 'Heavy freezing drizzle',\n    icon: 284,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1180,\n    day: 'Patchy light rain',\n    night: 'Patchy light rain',\n    icon: 293,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1183,\n    day: 'Light rain',\n    night: 'Light rain',\n    icon: 296,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1186,\n    day: 'Moderate rain at times',\n    night: 'Moderate rain at times',\n    icon: 299,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1189,\n    day: 'Moderate rain',\n    night: 'Moderate rain',\n    icon: 302,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1192,\n    day: 'Heavy rain at times',\n    night: 'Heavy rain at times',\n    icon: 305,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1195,\n    day: 'Heavy rain',\n    night: 'Heavy rain',\n    icon: 308,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1198,\n    day: 'Light freezing rain',\n    night: 'Light freezing rain',\n    icon: 311,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1201,\n    day: 'Moderate or heavy freezing rain',\n    night: 'Moderate or heavy freezing rain',\n    icon: 314,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1204,\n    day: 'Light sleet',\n    night: 'Light sleet',\n    icon: 317,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1207,\n    day: 'Moderate or heavy sleet',\n    night: 'Moderate or heavy sleet',\n    icon: 320,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1210,\n    day: 'Patchy light snow',\n    night: 'Patchy light snow',\n    icon: 323,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1213,\n    day: 'Light snow',\n    night: 'Light snow',\n    icon: 326,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1216,\n    day: 'Patchy moderate snow',\n    night: 'Patchy moderate snow',\n    icon: 329,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1219,\n    day: 'Moderate snow',\n    night: 'Moderate snow',\n    icon: 332,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1222,\n    day: 'Patchy heavy snow',\n    night: 'Patchy heavy snow',\n    icon: 335,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1225,\n    day: 'Heavy snow',\n    night: 'Heavy snow',\n    icon: 338,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1237,\n    day: 'Ice pellets',\n    night: 'Ice pellets',\n    icon: 350,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1240,\n    day: 'Light rain shower',\n    night: 'Light rain shower',\n    icon: 353,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1243,\n    day: 'Moderate or heavy rain shower',\n    night: 'Moderate or heavy rain shower',\n    icon: 356,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1246,\n    day: 'Torrential rain shower',\n    night: 'Torrential rain shower',\n    icon: 359,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1249,\n    day: 'Light sleet showers',\n    night: 'Light sleet showers',\n    icon: 362,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1252,\n    day: 'Moderate or heavy sleet showers',\n    night: 'Moderate or heavy sleet showers',\n    icon: 365,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1255,\n    day: 'Light snow showers',\n    night: 'Light snow showers',\n    icon: 368,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1258,\n    day: 'Moderate or heavy snow showers',\n    night: 'Moderate or heavy snow showers',\n    icon: 371,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1261,\n    day: 'Light showers of ice pellets',\n    night: 'Light showers of ice pellets',\n    icon: 374,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1264,\n    day: 'Moderate or heavy showers of ice pellets',\n    night: 'Moderate or heavy showers of ice pellets',\n    icon: 377,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1273,\n    day: 'Patchy light rain with thunder',\n    night: 'Patchy light rain with thunder',\n    icon: 386,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1276,\n    day: 'Moderate or heavy rain with thunder',\n    night: 'Moderate or heavy rain with thunder',\n    icon: 389,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1279,\n    day: 'Patchy light snow with thunder',\n    night: 'Patchy light snow with thunder',\n    icon: 392,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1282,\n    day: 'Moderate or heavy snow with thunder',\n    night: 'Moderate or heavy snow with thunder',\n    icon: 395,\n    png: [dayStorm, nightStorm],\n  },\n];\n","import { Indicator } from 'components/Indicator/Indicator.styled';\nimport styled from 'styled-components';\n\nexport const DataWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 16px;\n  margin: 0 auto;\n  border-radius: 30px;\n  padding: 32px 16px;\n  z-index: 10;\n  background-color: rgba(255, 255, 255, 0.63);\n  /* box-shadow: inset -5px -5px 9px rgba(255, 255, 255, 0.45),\n    inset 5px 5px 9px rgba(94, 104, 121, 0.3); */\n  box-shadow: -5px -5px 80px #fff, 5px 5px 20px #babecc;\n  backdrop-filter: blur(2.3px);\n  -webkit-backdrop-filter: blur(2.3px);\n  /* border: 1px solid rgba(255, 255, 255, 0.77); */\n\n  @media screen and (min-width: 768px) {\n    padding: 32px 56px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 70%;\n  }\n`;\n\nexport const WeatherDataWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 16px;\n  width: 100%;\n  position: relative;\n`;\n\nexport const WeatherInfoWrapper = styled.div`\n  padding: 32px 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-end;\n  gap: 16px;\n  border-radius: 30px;\n  background: rgba(255, 255, 255, 0.28);\n  border-radius: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n\n  @media screen and (min-width: 768px) {\n    padding: 56px 32px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40vw;\n  top: -25%;\n  left: -10%;\n  position: absolute;\n\n  & img {\n    width: 100%;\n  }\n\n  @media screen and (min-width: 420px) {\n    width: 170px;\n  }\n\n  @media screen and (min-width: 768px) {\n    position: static;\n    width: 30vw;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 40%;\n  }\n`;\n\nexport const CityName = styled.p`\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n  z-index: 10;\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n  }\n`;\n\nexport const WeatherConditions = styled.div`\n  padding: 10px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.mainLight};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  background-color: ${p => p.theme.colors.mainAccentPink};\n  border-radius: ${p => p.theme.radii.main};\n`;\n\nexport const IndicatorsWrapper = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n    align-items: stretch;\n  }\n`;\n\nexport const ChanceOfIndicator = styled(Indicator)`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${p => p.theme.colors.bgGrey};\n  color: #8495b2;\n  gap: 8px;\n\n  & div {\n    display: flex;\n  }\n\n  & img {\n    width: 30px;\n    height: 30px;\n    margin-right: 8px;\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    align-items: flex-start;\n  }\n`;\n\nexport const TemperatureWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  flex-grow: 1;\n`;\n\nexport const FeelsLike = styled.span`\n  font-size: 20px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.textGrey};\n`;\nexport const Temperature = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-family: ${p => p.theme.fonts.main};\n\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 96px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  & img {\n    width: 40px;\n  }\n\n  & span {\n    font-weight: ${p => p.theme.fontWeights[0]};\n    font-size: 24px;\n  }\n`;\n\nexport const ButtonsWrapper = styled.ul`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n\n  gap: 16px;\n\n  & li {\n    display: inline-flex;\n    width: calc(50% - 16px);\n  }\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-between;\n\n    & li {\n      width: calc(100% / 3 - 32px);\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { HourlyChartsUI } from 'components/ChartBox/HourlyCharts';\nimport WeatherUI from 'components/WeatherBox/WeatherBox';\nimport AstroUI from 'components/AstroBox/AstroBox';\nimport AirUI from 'components/AirBox/AirBox';\nimport { ButtonUI } from 'components/Button/Button';\nimport { IndicatorText } from 'components/Indicator/Indicator.styled';\nimport { IndicatorUI } from 'components/Indicator/Indicator';\n\nimport {\n  getAdditionalCurrentWeather,\n  getCityName,\n  getCountry,\n  getCurrentWeather,\n  getDayTime,\n  getForcast,\n} from 'redux/location/locSelectors';\nimport { conditionsWeatherApi } from 'utils/conditionsWeatherApi';\nimport {\n  ChanceOfIndicator,\n  CityName,\n  DataWrapper,\n  FeelsLike,\n  IconWrapper,\n  IndicatorsWrapper,\n  Temperature,\n  TemperatureWrapper,\n  WeatherConditions,\n  WeatherDataWrapper,\n  WeatherInfoWrapper,\n  ButtonsWrapper,\n} from './MainBox.styled';\n\nimport termometrPlus from '../../images/thermomater-max-min.png';\nimport termometrMinus from '../../images/thermomater-min-min.png';\nimport percipitationImg from '../../images/percipitation-min.png';\nimport windImg from '../../images/wind-min.png';\nimport humidityImg from '../../images/humidity-min.png';\nimport rain from '../../images/rain-min.png';\nimport snow from '../../images/snow-min.png';\nimport { useMediaQuery } from 'hooks/useMedia';\n\nexport const MainBoxUI = () => {\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n  const forecast = useSelector(getForcast);\n  const dayTime = useSelector(getDayTime);\n  const city = useSelector(getCityName);\n  const country = useSelector(getCountry);\n  const isRowBased = useMediaQuery('(min-width: 768px)');\n\n  const [showWeather, setShowWeather] = useState(false);\n  const [showAstro, setShowAstro] = useState(false);\n  const [showAir, setShowAir] = useState(false);\n  const [weatherPng, setWeatherPng] = useState(null);\n\n  useEffect(() => {\n    if (extraWeather) {\n      const weatherCode = extraWeather.condition.code;\n      const conditionPng = conditionsWeatherApi.find(\n        cond => cond.code === weatherCode\n      ).png;\n      dayTime ? setWeatherPng(conditionPng[0]) : setWeatherPng(conditionPng[1]);\n    }\n  }, [dayTime, extraWeather]);\n\n  const onWeatherBtnClick = () => {\n    setShowWeather(!showWeather);\n    setShowAstro(false);\n    setShowAir(false);\n  };\n\n  const onShowAstroBtnClick = () => {\n    setShowAstro(!showAstro);\n    setShowAir(false);\n    setShowWeather(false);\n  };\n\n  const onShowAirBtnClick = () => {\n    setShowAir(!showAir);\n    setShowAstro(false);\n    setShowWeather(false);\n  };\n\n  return (\n    <DataWrapper>\n      {weather && extraWeather ? (\n        <>\n          <WeatherDataWrapper>\n            <IconWrapper>\n              <img\n                src={weatherPng}\n                alt={extraWeather.condition.text}\n                loading=\"lazy\"\n              />\n            </IconWrapper>\n            <TemperatureWrapper>\n              <WeatherConditions>\n                <span>{extraWeather.condition.text}</span>\n              </WeatherConditions>\n              <CityName>\n                {city}, {country}\n              </CityName>\n              <Temperature>\n                <img\n                  src={\n                    extraWeather.temp_c >= 0 ? termometrPlus : termometrMinus\n                  }\n                  alt=\"temperature\"\n                  loading=\"lazy\"\n                />\n                {extraWeather.temp_c} <span>°C</span>\n              </Temperature>\n              <FeelsLike>Feels like {extraWeather.feelslike_c} °C</FeelsLike>\n              {/* <FeelsLike>\n                Local time {weather.current_weather.time.slice(11)}\n              </FeelsLike> */}\n            </TemperatureWrapper>\n          </WeatherDataWrapper>\n          <WeatherInfoWrapper>\n            <IndicatorsWrapper>\n              <ChanceOfIndicator>\n                <div>\n                  <img src={rain} alt=\"rain\" loading=\"lazy\" />\n                  <IndicatorText>Chance of rain:</IndicatorText>\n                  <span>{forecast[0].day.daily_chance_of_rain} %</span>\n                </div>\n                <div>\n                  <img src={snow} alt=\"snow\" loading=\"lazy\" />\n                  <IndicatorText>Chance of snow:</IndicatorText>\n                  <span>{forecast[0].day.daily_chance_of_snow} %</span>\n                </div>\n              </ChanceOfIndicator>\n              <IndicatorUI\n                color=\"blue\"\n                src={percipitationImg}\n                text=\"Precipitation:\"\n                source={`${weather.daily.precipitation_sum[0]} mm`}\n              />\n              <IndicatorUI\n                color=\"pink\"\n                src={humidityImg}\n                text=\"Humidity:\"\n                source={`${extraWeather.humidity} %`}\n              />\n\n              <IndicatorUI\n                color=\"violet\"\n                src={windImg}\n                text=\"Windspeed:\"\n                source={`${weather.current_weather.windspeed} km/h`}\n              />\n            </IndicatorsWrapper>\n            <HourlyChartsUI />\n            <ButtonsWrapper>\n              <li>\n                <ButtonUI\n                  type=\"button\"\n                  onClick={onWeatherBtnClick}\n                  text=\"Details\"\n                  selected={showWeather}\n                />\n              </li>\n              <li>\n                <ButtonUI\n                  type=\"button\"\n                  onClick={onShowAstroBtnClick}\n                  text=\"Astro\"\n                  selected={showAstro}\n                />\n              </li>\n              <li>\n                <ButtonUI\n                  type=\"button\"\n                  onClick={onShowAirBtnClick}\n                  text={isRowBased ? 'Air quality' : 'Air'}\n                  selected={showAir}\n                />\n              </li>\n            </ButtonsWrapper>\n          </WeatherInfoWrapper>\n          {showWeather && <WeatherUI />}\n          {showAstro && <AstroUI />}\n          {showAir && <AirUI />}\n        </>\n      ) : (\n        <div>No data to display</div>\n      )}\n    </DataWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\n\nconst text = keyframes`\nfrom {\n    transform: translateX(100%);\n  }\n  to {\n    transform: translateX(-100%);\n  }\n  `;\n\nexport const TextContainer = styled.div`\n  /* position: absolute; */\n  border-radius: 5px;\n  overflow: hidden;\n  margin-bottom: 16px;\n  padding: 8px;\n`;\n\nexport const RunningText = styled.div`\n  font-size: 20px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.textGrey};\n  width: max-content;\n  display: inline-flex;\n  animation: ${text} 25s linear infinite;\n  text-shadow: 2px 2px 2px #fbfff3;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import { RunningText, TextContainer } from './TextLine.styled';\n\nexport const TextLine = ({ text }) => {\n  return (\n    <TextContainer>\n      <RunningText>{text}</RunningText>\n    </TextContainer>\n  );\n};\n","import { CardUI } from 'components/Card/Card';\nimport { DEFAULT_LATITUDE, DEFAULT_LONGITUDE } from 'utils/consts/consts';\nimport { Container } from 'components/Container/Container';\nimport { Loader } from 'components/Loader/Loader';\nimport { MainBoxUI } from 'components/MainBox/MainBox';\nimport { TextLine } from 'components/TextLine/TextLine';\nimport React, { useEffect } from 'react';\nimport { useGeolocated } from 'react-geolocated';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchAirQuality,\n  fetchAstroDataFromWeatherApi,\n  fetchCity,\n  fetchCurrentWeather,\n  fetchCurrentWeatherFromWeatherApi,\n  fetchPexelsImage,\n  fetchWeatherForecastFromWeatherApi,\n} from 'redux/location/locOperations';\nimport {\n  getAdditionalCurrentWeather,\n  getCityImages,\n  getCityName,\n  getCurrentLatitude,\n  getCurrentLongitude,\n  getCurrentWeather,\n  getTimezone,\n} from 'redux/location/locSelectors';\nimport { setLatitude, setLongitude } from 'redux/location/locSlice';\n\nconst Homepage = () => {\n  const { coords, isGeolocationAvailable, isGeolocationEnabled } =\n    useGeolocated({\n      positionOptions: {\n        enableHighAccuracy: false,\n      },\n\n      userDecisionTimeout: undefined,\n      suppressLocationOnMount: false,\n    });\n\n  const dispatch = useDispatch();\n  const latitude = useSelector(getCurrentLatitude);\n  const longitude = useSelector(getCurrentLongitude);\n  const timezone = useSelector(getTimezone);\n  const city = useSelector(getCityName);\n  const images = useSelector(getCityImages);\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n\n  useEffect(() => {\n    if (coords) {\n      dispatch(setLatitude(coords.latitude));\n      dispatch(setLongitude(coords.longitude));\n      dispatch(fetchCity());\n\n      // dispatch(fetchTimezone());\n    }\n    if (!isGeolocationAvailable || !isGeolocationEnabled || !city) {\n      dispatch(setLatitude(DEFAULT_LATITUDE));\n      dispatch(setLongitude(DEFAULT_LONGITUDE));\n      dispatch(fetchCity());\n    }\n    return;\n  }, [city, coords, dispatch, isGeolocationAvailable, isGeolocationEnabled]);\n\n  useEffect(() => {\n    if (extraWeather) {\n      return;\n    }\n    if (latitude && longitude) {\n      dispatch(fetchAstroDataFromWeatherApi());\n      dispatch(fetchCurrentWeatherFromWeatherApi());\n      dispatch(fetchWeatherForecastFromWeatherApi());\n    }\n  }, [dispatch, extraWeather, latitude, longitude]);\n\n  useEffect(() => {\n    if (weather) {\n      return;\n    }\n    if (timezone) {\n      dispatch(fetchCurrentWeather());\n      dispatch(fetchAirQuality());\n    }\n  }, [dispatch, timezone, weather]);\n\n  useEffect(() => {\n    if (city && images.length === 0) {\n      dispatch(fetchPexelsImage(city));\n    }\n  }, [city, dispatch, images]);\n\n  return (\n    <main\n      style={{\n        minHeight: '70vh',\n      }}\n    >\n      {city && <CardUI selector={getCityImages} page=\"home\" />}\n      {!isGeolocationAvailable && (\n        <TextLine text=\"Due to your browser does not support geolocation, the default location data is being shown. Please update your browser, allow the location access and turn on geolocation on your device.\" />\n      )}\n      {!isGeolocationEnabled && (\n        <TextLine text=\"Due to the geolocation is not enabled on your device, the default location data is being shown. Please enable geolocation on your device to get your current location data.\" />\n      )}\n      <Container>\n        {latitude && longitude ? (\n          <>\n            <MainBoxUI />\n          </>\n        ) : (\n          <div>\n            <Loader />\n          </div>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default React.memo(Homepage);\n","export const getCityId = state => state.location.cityID;\nexport const getCityName = state => state.location.city;\nexport const getCountry = state => state.location.country;\nexport const getCityImages = state => state.location.image;\nexport const getCurrentLongitude = state => state.location.longitude;\nexport const getCurrentLatitude = state => state.location.latitude;\nexport const getCurrentWeather = state => state.location.weather;\nexport const getAdditionalCurrentWeather = state =>\n  state.location.weatherAdditional;\nexport const getDayTime = state => state.location.daytime;\nexport const getTimezone = state => state.location.timezone;\nexport const getAstroData = state => state.location.astrodata;\nexport const getForcast = state => state.location.weatherForecast;\nexport const getDailyForcast = state => state.location.weather.daily;\nexport const getHourlyForcast = state => state.location.weather.hourly;\nexport const getAirData = state => state.location.airdata;\nexport const getHistory = state => state.location.history;\nexport const getHistoryImages = state => state.location.historyImages;\nexport const getDate = state => state.location.date;\nexport const getGeoImages = state => state.location.geoImages;\n"],"names":["Card","styled","p","image","View","page","paper","compass","lightining","keyframes","Lightning","lightiningPng","Storm","drift","FogWrapper","fog1","fog2","Fog","CardUI","selector","isRowBased","useMediaQuery","images","useSelector","dayTime","getDayTime","currentWeather","getAdditionalCurrentWeather","useState","bgImg","setImage","bgImgMob","imageMob","setImageMob","weatherCode","setWeatherCode","showSnow","setShowSnow","showRain","setShowRain","showDrizzle","setShowDrizzle","showHeavyDrizzle","setShowHeavyDrizzle","showStorm","setShowStorm","showBigSnow","setShowBigSnow","showFog","setShowFog","showThunderSnow","setShowThunderSnow","useEffect","length","landscape","portrait","random","Math","floor","condition","code","Snowfall","style","position","width","height","snowflakeCount","wind","speed","id","dropletsAmount","amplitude","query","mediaMatch","window","matchMedia","matches","setMatches","handler","e","addListener","removeListener","renderCustomAxisTick","x","y","path","payload","value","viewBox","href","sprite","CustomizedDot","props","cx","cy","currentTime","getCurrentWeather","current_weather","time","slice","CustomizeActivedDot","CustomizeActivedDotTempMin","CustomizeActivedDotTempMax","CustomizeActivedDotPrecipitation","CustomizedDotEuAQI","fill","stroke","CustomizedDotUsAQI","ChartsWrapper","HourlyChartsUI","hourlyForecast","getHourlyForcast","hours","map","el","temp","temperature_2m","weathercode","hourlyData","index","temperature","ResponsiveContainer","AreaChart","data","margin","top","right","left","bottom","ReferenceLine","strokeDasharray","Tooltip","YAxis","interval","XAxis","dataKey","xAxisId","tick","Area","type","stackId","strokeWidth","activeDot","dot","Indicator","theme","radii","main","fonts","fontWeights","lineHeights","color","colors","accentBlue","accentPink","accentViolet","textGrey","bgBlue","bgPink","bgViolet","bgGrey","IndicatorText","IndicatorImg","IndicatorUI","src","text","source","alt","loading","formatDate","date","month","String","toLocaleString","day","getDate","padStart","DailyChartsUI","dailyForecast","getDailyForcast","dates","Date","tempMin","temperature_2m_min","tempMax","temperature_2m_max","precipitation","precipitation_sum","dailyData","dateShort","min","max","LineChart","Line","r","Legend","Header","mainDark","Subheader","Wrapper","WrapperBox","children","ForecastWrapper","IconWrapper","TextWrapper","DateText","ConditionText","mainLight","mainAccentPink","Text","TextRain","ForecastUI","icon","humidity","percipitation","formatedDate","tempPng","humidPng","yes","no","IndicatorsWrapper","WeatherUI","weather","extraWeather","forecast","getForcast","hot","daily","cold","clouds","cloud","windBlow","windgusts_10m_max","windSocket","windspeed_10m_max","windrose","wind_dir","pressure","pressure_mb","radio","shortwave_radiation_sum","uv","avghumidity","daily_will_it_rain","avgtemp_c","React","moonPhasesPng","phase","png","newMoon","waxingCrescent","firstQuarter","waxingGibbous","fullMoon","waningGibbous","lastQuarter","SunBox","MoonBox","AstroIndicator","MoonImg","MoonIndicatorsWrapper","SunIndicatorsWrapper","AstroUI","astro","getAstroData","moonPhase","moon_phase","moonPng","setMoonPng","dispatch","useDispatch","moonImg","find","cond","toLowerCase","fetchAstroDataFromWeatherApi","moon","moon_illumination","moonrise","moonset","sunrise","sunset","CurrentState","HourlyChartsAirUI","airData","getAirData","hourly","dust","alder_pollen","birch_pollen","grass_pollen","mugwort_pollen","olive_pollen","ragweed_pollen","euAQI","european_aqi","usAQI","us_aqi","AirUI","air","formatIndex","co","toFixed","no2","o3","so2","pm25","pm2_5","pm10","ButtonMain","iconsFill","selected","bgYellow","ButtonText","ButtonUI","onClick","conditionsWeatherApi","night","daySun","nightMoon","dayClouds","nightClouds","dayWind","nightWind","dayRain","nightRain","daySnow","nightSnow","dayStorm","nightStorm","DataWrapper","WeatherDataWrapper","WeatherInfoWrapper","CityName","WeatherConditions","ChanceOfIndicator","TemperatureWrapper","FeelsLike","Temperature","ButtonsWrapper","MainBoxUI","city","getCityName","country","getCountry","showWeather","setShowWeather","showAstro","setShowAstro","showAir","setShowAir","weatherPng","setWeatherPng","conditionPng","temp_c","termometrPlus","termometrMinus","feelslike_c","rain","daily_chance_of_rain","snow","daily_chance_of_snow","percipitationImg","humidityImg","windImg","windspeed","TextContainer","RunningText","TextLine","Homepage","useGeolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","undefined","suppressLocationOnMount","coords","isGeolocationAvailable","isGeolocationEnabled","latitude","getCurrentLatitude","longitude","getCurrentLongitude","timezone","getTimezone","getCityImages","setLatitude","setLongitude","fetchCity","DEFAULT_LATITUDE","DEFAULT_LONGITUDE","fetchCurrentWeatherFromWeatherApi","fetchWeatherForecastFromWeatherApi","fetchCurrentWeather","fetchAirQuality","fetchPexelsImage","minHeight","Container","Loader","state","location","weatherAdditional","daytime","astrodata","weatherForecast","airdata","getHistory","history","getHistoryImages","historyImages","getGeoImages","geoImages"],"sourceRoot":""}