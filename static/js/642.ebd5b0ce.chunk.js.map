{"version":3,"file":"static/js/642.ebd5b0ce.chunk.js","mappings":"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","sources":["components/Card/Card.styled.js","redux/location/locSelectors.js","hooks/useMedia.js","components/StormAnimation/Storm.styled.js","components/StormAnimation/Storm.jsx","components/FogAnimation/Fog.styled.js","components/FogAnimation/Fog.jsx","components/Card/Card.jsx","utils/customAxis.js","utils/customDot.js","components/ChartBox/HourlyCharts.styled.js","components/ChartBox/HourlyCharts.jsx","components/Indicator/Indicator.styled.js","components/Indicator/Indicator.jsx","utils/formatDate.js","components/ChartBox/DailyCharts.styled.js","components/ChartBox/DailyCharts.jsx","components/BoxSubheader/Subheader.styled.js","components/BoxSubheader/Subheader.jsx","components/BoxWrapper/Wrapper.styled.js","components/BoxWrapper/Wrapper.jsx","components/ForecastBox/Forecast.styled.js","components/ForecastBox/Forecast.jsx","components/WeatherBox/WeatherBox.styled.js","components/WeatherBox/WeatherBox.jsx","utils/moonPhases.js","components/AstroBox/AstroBox.styled.js","components/AstroBox/AstroBox.jsx","components/AirBox/AirBox.styled.js","components/ChartBox/HourlyChartsAir.styled.js","components/ChartBox/HourlyChartsAir.jsx","components/AirBox/AirBox.jsx","utils/formatAirIndex.js","components/Button/Button.styled.js","components/Button/Button.jsx","utils/conditionsWeatherApi.js","components/MainBox/MainBox.styled.js","components/MainBox/MainBox.jsx","components/TextLine/TextLine.styled.js","components/TextLine/TextLine.jsx","components/pages/Homepage/Homepage.jsx","components/consts/consts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Card = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n  background-image: ${p =>\n    p.image\n      ? p.image\n      : 'linear-gradient(47.75deg, #082276 7.07%, #030f34 97.3%), #082276;'};\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  -webkit-background-size: cover;\n  -o-background-size: cover;\n  -moz-background-size: cover;\n`;\n\nexport const View = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-size: cover;\n  z-index: -2;\n\n  background: ${p =>\n    p.dayTime\n      ? 'linear-gradient(45deg, rgba(245, 70, 66, 0.45), rgba(8, 83, 156, 0.45))'\n      : 'linear-gradient(to bottom, rgba(245, 246, 252, 0.52), rgba(117, 19, 93, 0.73))'};\n\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#002f4b', endColorstr='#00000000',GradientType=0 );\n  opacity: 0.8;\n`;\n","export const getCityId = state => state.location.cityID;\nexport const getCityName = state => state.location.city;\nexport const getCountry = state => state.location.country;\nexport const getCityImages = state => state.location.image;\nexport const getCurrentLongitude = state => state.location.longitude;\nexport const getCurrentLatitude = state => state.location.latitude;\nexport const getCurrentWeather = state => state.location.weather;\nexport const getAdditionalCurrentWeather = state =>\n  state.location.weatherAdditional;\nexport const getDayTime = state => state.location.daytime;\nexport const getTimezone = state => state.location.timezone;\nexport const getAstroData = state => state.location.astrodata;\nexport const getForcast = state => state.location.weatherForecast;\nexport const getDailyForcast = state => state.location.weather.daily;\nexport const getHourlyForcast = state => state.location.weather.hourly;\nexport const getAirData = state => state.location.airdata;\n","import { useEffect, useState } from 'react';\n\nexport const useMediaQuery = query => {\n  const mediaMatch = window.matchMedia(query);\n  const [matches, setMatches] = useState(mediaMatch.matches);\n\n  useEffect(() => {\n    const handler = e => setMatches(e.matches);\n    mediaMatch.addListener(handler);\n    return () => mediaMatch.removeListener(handler);\n  });\n  return matches;\n};\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\n\nimport lightiningPng from '../../images/lightining.png';\n\nconst lightining = keyframes`\n\n    0%{\n        opacity: 0;\n    }\n    20%{\n        opacity: 0;\n    }\n    21%{\n        opacity: 1;\n    }\n    25%{\n        opacity: 0;\n    }\n    30%{\n        opacity: 0;\n    }\n    31%{\n        opacity: 1;\n    }\n    35%{\n        opacity: 0;\n    }\n    100%{\n        opacity: 0;\n    }\n`;\n\nexport const Lightning = styled.div`\n  &::before {\n    content: '';\n    position: absolute;\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n    left: 0;\n    z-index: -1;\n    background-image: url(${lightiningPng});\n    transform: rotate(180deg);\n    animation: ${lightining} 4s linear infinite;\n    opacity: 1;\n  }\n`;\n","import { Lightning } from './Storm.styled';\n\nexport const Storm = () => {\n  return (\n    <>\n      <Lightning />\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\n\nimport fog1 from '../../images/fog1.png';\nimport fog2 from '../../images/fog2.png';\n\nconst drift = keyframes`\n  from {\n      transform: translate3d(0, 0, 0);\n    }\n    to {\n      transform: translate3d(-200vw, 0, 0);\n    }`;\n\nexport const FogWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100%;\n  overflow: hidden;\n  pointer-events: none;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 300%;\n    background-size: cover;\n    /* background-position: center; */\n    background-repeat: repeat;\n  }\n  &:before {\n    background-image: url(${fog1});\n    animation: ${drift} 60s linear 0s infinite;\n  }\n  &:after {\n    background-image: url(${fog2});\n    animation: ${drift} 25s linear 0s infinite;\n  }\n`;\n","import { FogWrapper } from './Fog.styled';\n\nexport const Fog = () => {\n  return <FogWrapper />;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Snowfall from 'react-snowfall';\nimport Rainfall from 'react-rainfall-animation/src/Rain';\nimport ObliqueRain from 'react-rainfall-animation/src/ObliqueRain';\n\nimport { Card, View } from './Card.styled';\nimport {\n  getAdditionalCurrentWeather,\n  getCityImages,\n  getDayTime,\n  // getCurrentWeather,\n} from 'redux/location/locSelectors';\nimport { useMediaQuery } from 'hooks/useMedia';\nimport bgImgMob from '../../images/umbrella-red-wallpaper-mob.jpg';\nimport bgImg from '../../images/umbrella-red-wallpaper.jpg'; // 'https://www.wallpaperflare.com/static/79/210/459/nature-sky-umbrella-red-wallpaper-preview.jpg';\nimport { Storm } from 'components/StormAnimation/Storm';\nimport { Fog } from 'components/FogAnimation/Fog';\n\nexport const CardUI = ({ children }) => {\n  const isRowBased = useMediaQuery('(min-width: 1280px)');\n  const images = useSelector(getCityImages);\n  const dayTime = useSelector(getDayTime);\n  // console.log(dayTime);\n\n  // const weather = useSelector(getCurrentWeather);\n  const currentWeather = useSelector(getAdditionalCurrentWeather);\n\n  const [image, setImage] = useState(bgImg);\n  const [imageMob, setImageMob] = useState(bgImgMob);\n  const [weatherCode, setWeatherCode] = useState('');\n  const [showSnow, setShowSnow] = useState(false);\n  const [showRain, setShowRain] = useState(false);\n  const [showDrizzle, setShowDrizzle] = useState(false);\n  const [showHeavyDrizzle, setShowHeavyDrizzle] = useState(false);\n  const [showStorm, setShowStorm] = useState(false);\n  const [showBigSnow, setShowBigSnow] = useState(false);\n  const [showFog, setShowFog] = useState(false);\n  const [showThunderSnow, setShowThunderSnow] = useState(false);\n\n  useEffect(() => {\n    if (images.length === 0) {\n      return;\n    }\n    if (images.length === 1) {\n      setImage(images[0].landscape);\n      setImageMob(images[0].portrait);\n    }\n    if (images.length > 1) {\n      const random = Math.floor(Math.random() * images.length);\n      setImage(images[random].landscape);\n      setImageMob(images[random].portrait);\n    }\n  }, [images]);\n\n  useEffect(() => {\n    if (currentWeather) {\n      // setWeatherCode(weather.current_weather.weathercode);\n      setWeatherCode(currentWeather.condition.code);\n    }\n    if (\n      // weatherCode === 77 ||\n      // weatherCode === 85 ||\n      // weatherCode === 71 ||\n      // weatherCode === 73\n\n      weatherCode === 1066 ||\n      weatherCode === 1210 ||\n      weatherCode === 1213 ||\n      weatherCode === 1216 ||\n      weatherCode === 1219 ||\n      weatherCode === 1261 ||\n      weatherCode === 1255\n    ) {\n      setShowSnow(true);\n      setShowRain(false);\n      setShowDrizzle(false);\n      setShowStorm(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1063 ||\n      weatherCode === 1069 ||\n      weatherCode === 1072 ||\n      weatherCode === 1150 ||\n      weatherCode === 1153 ||\n      weatherCode === 1168 ||\n      weatherCode === 1204 ||\n      weatherCode === 1249\n\n      // weatherCode === 51 ||\n      // weatherCode === 53 ||\n      // weatherCode === 55 ||\n      // weatherCode === 56 ||\n      // weatherCode === 57\n    ) {\n      setShowDrizzle(true);\n      setShowRain(false);\n      setShowSnow(false);\n      setShowStorm(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1180 ||\n      weatherCode === 1183 ||\n      weatherCode === 1186 ||\n      weatherCode === 1189 ||\n      weatherCode === 1192 ||\n      weatherCode === 1195 ||\n      weatherCode === 1198 ||\n      weatherCode === 1201 ||\n      weatherCode === 1240\n\n      // weatherCode === 61 ||\n      // weatherCode === 63 ||\n      // weatherCode === 66 ||\n      // weatherCode === 80 ||\n      // weatherCode === 81\n    ) {\n      setShowRain(true);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowStorm(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1087 ||\n      weatherCode === 1246 ||\n      weatherCode === 1243 ||\n      weatherCode === 1273 ||\n      weatherCode === 1276\n\n      // weatherCode === 95 ||\n      // weatherCode === 96 ||\n      // weatherCode === 99 ||\n      // weatherCode === 82 ||\n      // weatherCode === 65 ||\n      // weatherCode === 67\n    ) {\n      setShowStorm(true);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1114 ||\n      weatherCode === 1117 ||\n      weatherCode === 1222 ||\n      weatherCode === 1225 ||\n      weatherCode === 1237 ||\n      weatherCode === 1264 ||\n      weatherCode === 1258\n\n      // weatherCode === 75 ||\n      // weatherCode === 86\n    ) {\n      setShowBigSnow(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      // weatherCode === 45 ||\n      // weatherCode === 48\n\n      weatherCode === 1009 ||\n      weatherCode === 1030 ||\n      weatherCode === 1006 ||\n      weatherCode === 1135 ||\n      weatherCode === 1147\n    ) {\n      setShowFog(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowThunderSnow(false);\n      setShowHeavyDrizzle(false);\n    } else if (weatherCode === 1279 || weatherCode === 1282) {\n      setShowThunderSnow(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowHeavyDrizzle(false);\n    } else if (\n      weatherCode === 1252 ||\n      weatherCode === 1207 ||\n      weatherCode === 1171\n    ) {\n      setShowHeavyDrizzle(true);\n      setShowStorm(false);\n      setShowDrizzle(false);\n      setShowSnow(false);\n      setShowRain(false);\n      setShowBigSnow(false);\n      setShowFog(false);\n      setShowThunderSnow(false);\n    }\n  }, [currentWeather, weatherCode]);\n\n  return (\n    <>\n      {images && (\n        <Card image={!isRowBased ? `url(${imageMob})` : `url(${image})`}>\n          <View dayTime={dayTime} />\n          {children}\n        </Card>\n      )}\n      {showSnow && (\n        <Snowfall\n          style={{\n            position: 'fixed',\n            width: '100vw',\n            height: '100vh',\n          }}\n          snowflakeCount={200}\n        />\n      )}\n      {showBigSnow && (\n        <Snowfall\n          style={{\n            position: 'fixed',\n            width: '100vw',\n            height: '100vh',\n          }}\n          snowflakeCount={750}\n          wind={[2.5, 6.5]}\n          speed={[1.5, 5.5]}\n        />\n      )}\n      {showRain && (\n        <div id=\"Rain\">\n          <Rainfall dropletsAmount={1000} />\n        </div>\n      )}\n      {showDrizzle && (\n        <div id=\"Rain\">\n          <ObliqueRain dropletsAmount={300} amplitude={100} />\n        </div>\n      )}\n      {showHeavyDrizzle && (\n        <div id=\"Rain\">\n          <ObliqueRain dropletsAmount={1000} amplitude={100} />\n        </div>\n      )}\n      {showStorm && (\n        <div id=\"Rain\">\n          <Rainfall dropletsAmount={1000} />\n          <Storm />\n        </div>\n      )}\n      {showFog && <Fog />}\n      {showThunderSnow && (\n        <>\n          <Snowfall\n            style={{\n              position: 'fixed',\n              width: '100vw',\n              height: '100vh',\n            }}\n            snowflakeCount={750}\n            wind={[2.5, 6.5]}\n            speed={[1.5, 5.5]}\n          />\n          <Storm />\n        </>\n      )}\n    </>\n  );\n};\n","import sprite from 'images/icons_sprite.svg';\n\nexport const renderCustomAxisTick = ({ x, y, payload }) => {\n  let path = '';\n\n  switch (payload.value) {\n    case '0':\n      path = 'day';\n      break;\n    case '1':\n      path = 'cloudy-day-1';\n      break;\n    case '2':\n      path = 'cloudy-day-2';\n      break;\n    case '3':\n    case '45':\n    case '48':\n      path = 'cloudy';\n      break;\n    case '51':\n    case '53':\n    case '55':\n    case '56':\n    case '57':\n      path = 'rainy-5';\n      break;\n    case '61':\n    case '63':\n    case '65':\n    case '66':\n    case '67':\n    case '80':\n    case '81':\n    case '82':\n      path = 'rainy-7';\n      break;\n    case '85':\n    case '86':\n    case '77':\n    case '71':\n    case '73':\n    case '75':\n      path = 'snowy';\n      break;\n    case '95':\n    case '96':\n    case '99':\n      path = 'thunder';\n      break;\n    default:\n      path = 'weather';\n  }\n\n  return (\n    <svg x={x - 30} y={y - 20} width={42} height={42} viewBox=\"0 0 46 46\">\n      <use href={sprite + `#${path}`} />\n    </svg>\n  );\n};\n","import sprite from 'images/icons_sprite.svg';\n\nimport { useSelector } from 'react-redux';\nimport { getCurrentWeather } from 'redux/location/locSelectors';\n\nexport const CustomizedDot = props => {\n  const { cx, cy, payload } = props;\n\n  const weather = useSelector(getCurrentWeather);\n  const currentTime = weather.current_weather.time.slice(11);\n\n  if (payload.time === currentTime) {\n    return (\n      <svg x={cx - 14} y={cy - 14} width={28} height={28}>\n        <use href={sprite + `#sun`} />\n      </svg>\n    );\n  }\n\n  return <></>;\n};\n\nexport const CustomizeActivedDot = props => {\n  const { cx, cy } = props;\n\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#planet-earth`} />\n      </svg>\n    </>\n  );\n};\n\nexport const CustomizeActivedDotTempMin = props => {\n  const { cx, cy } = props;\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#temp-min`} />\n      </svg>\n    </>\n  );\n};\n\nexport const CustomizeActivedDotTempMax = props => {\n  const { cx, cy } = props;\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#temp-max`} />\n      </svg>\n    </>\n  );\n};\n\nexport const CustomizeActivedDotPrecipitation = props => {\n  const { cx, cy } = props;\n  return (\n    <>\n      <svg x={cx - 10} y={cy - 10} width={20} height={20}>\n        <use href={sprite + `#umbrella`} />\n      </svg>\n    </>\n  );\n};\n\nexport const CustomizedDotEuAQI = props => {\n  const { cx, cy, value } = props;\n\n  if (value <= 100 && value >= 80) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"red\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 79 && value >= 60) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"orange\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 59 && value >= 40) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"#ffb44a\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 39 && value >= 20) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"#a3d661\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  return (\n    <svg\n      x={cx - 8}\n      y={cy - 8}\n      width={16}\n      height={16}\n      fill=\"#4ad295\"\n      stroke=\"black\"\n    >\n      <use href={sprite + `#balloon`} />\n    </svg>\n  );\n};\n\nexport const CustomizedDotUsAQI = props => {\n  const { cx, cy, value } = props;\n\n  if (value <= 500 && value >= 301) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"red\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 300 && value >= 201) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"orange\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 200 && value >= 151) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"#ffb44a\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 150 && value >= 101) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"#bcba1c\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  if (value <= 100 && value >= 51) {\n    return (\n      <svg\n        x={cx - 8}\n        y={cy - 8}\n        width={16}\n        height={16}\n        fill=\"#a3d661\"\n        stroke=\"black\"\n      >\n        <use href={sprite + `#balloon`} />\n      </svg>\n    );\n  }\n  return (\n    <svg\n      x={cx - 8}\n      y={cy - 8}\n      width={16}\n      height={16}\n      fill=\"#4ad295\"\n      stroke=\"black\"\n    >\n      <use href={sprite + `#balloon`} />\n    </svg>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ChartsWrapper = styled.div`\n  width: 100%;\n  height: 250px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    height: 300px;\n    margin-top: 32px;\n  }\n`;\n","import { useMediaQuery } from 'hooks/useMedia';\nimport { useSelector } from 'react-redux';\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  ReferenceLine,\n} from 'recharts';\nimport { getHourlyForcast } from 'redux/location/locSelectors';\nimport { renderCustomAxisTick } from 'utils/customAxis';\nimport { CustomizeActivedDot, CustomizedDot } from 'utils/customDot';\nimport { ChartsWrapper } from './HourlyCharts.styled';\n\nexport const HourlyChartsUI = () => {\n  const hourlyForecast = useSelector(getHourlyForcast);\n  const isRowBased = useMediaQuery('(min-width: 768px)');\n\n  // FOR HOURLY FORECAST\n\n  const hours = hourlyForecast.time.map(el => el).slice(0, 24);\n  const temp = hourlyForecast.temperature_2m.map(el => el).slice(0, 24);\n  const code = hourlyForecast.weathercode.map(el => el).slice(0, 24);\n  const hourlyData = hours.map((el, index) => {\n    return {\n      time: `${el}`.slice(11),\n      temperature: `${temp[index]}`,\n      code: `${code[index]}`,\n    };\n  });\n\n  return (\n    <ChartsWrapper>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <AreaChart\n          width={200}\n          height={200}\n          data={hourlyData}\n          fill=\"rgba(233, 201, 57, 0.25)\"\n          margin={{\n            top: 5,\n            right: 16,\n            left: 16,\n            bottom: 5,\n          }}\n        >\n          <ReferenceLine\n            y={0}\n            strokeDasharray=\"5 5\"\n            stroke=\"rgba(51, 40, 33, 0.7)\"\n          />\n          <Tooltip />\n          {isRowBased && (\n            <>\n              <YAxis interval=\"preserveStartEnd\" />\n              <XAxis\n                dataKey=\"code\"\n                xAxisId=\"1\"\n                stroke=\"transparent\"\n                fill=\"transparent\"\n                tick={renderCustomAxisTick}\n              />\n            </>\n          )}\n          <XAxis dataKey=\"time\" xAxisId=\"0\" />\n\n          <Area\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"temperature\"\n            stroke=\"#E9C939\"\n            strokeWidth={3}\n            fill=\"rgba(233, 201, 57, 0.25)\"\n            activeDot={<CustomizeActivedDot />}\n            dot={<CustomizedDot />}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n    </ChartsWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Indicator = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  width: calc(50% - 32px);\n  box-shadow: 4px 0px 20px rgba(0, 0, 0, 0.25);\n  border-radius: ${p => p.theme.radii.main};\n  padding: 8px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p =>\n    p.color === 'blue'\n      ? p.theme.colors.accentBlue\n      : p.color === 'pink'\n      ? p.theme.colors.accentPink\n      : p.color === 'violet'\n      ? p.theme.colors.accentViolet\n      : p.theme.colors.textGrey};\n  background-color: ${p =>\n    p.color === 'blue'\n      ? p.theme.colors.bgBlue\n      : p.color === 'pink'\n      ? p.theme.colors.bgPink\n      : p.color === 'violet'\n      ? p.theme.colors.bgViolet\n      : p.theme.colors.bgGrey};\n\n  & svg {\n    width: 20px;\n    height: 20px;\n  }\n\n  & img {\n    width: 30px;\n    height: 30px;\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 10px;\n    width: 20%;\n\n    & img {\n      width: 40px;\n      height: 40px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: fit-content;\n    }\n  }\n`;\n\nexport const IndicatorText = styled.span`\n  display: none;\n\n  @media screen and (min-width: 1280px) {\n    display: inline-block;\n    margin-right: 8px;\n  }\n`;\n\nexport const IndicatorImg = styled.img`\n  display: block;\n  width: 40px;\n  height: auto;\n  margin: 0 !important;\n`;\n","import { Indicator, IndicatorText, IndicatorImg } from './Indicator.styled';\n\nexport const IndicatorUI = ({ src, text, source, color = 'grey' }) => {\n  return (\n    <Indicator color={color}>\n      <IndicatorImg src={src} alt={text} loading=\"lazy\" />\n      <IndicatorText>{text}</IndicatorText>\n      <span>{source}</span>\n    </Indicator>\n  );\n};\n","export const formatDate = date => {\n  const month = String(date.toLocaleString('en-us', { month: 'short' }));\n  const day = String(date.getDate()).padStart(2, '0');\n\n  return `${month}, ${day}`;\n};\n","import styled from 'styled-components';\n\nexport const ChartsWrapper = styled.div`\n  width: 100%;\n  height: 350px;\n\n  @media screen and (min-width: 768px) {\n    height: 450px;\n    margin-top: 0;\n  }\n`;\n","import { useMediaQuery } from 'hooks/useMedia';\nimport { useSelector } from 'react-redux';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  ReferenceLine,\n} from 'recharts';\nimport { getDailyForcast } from 'redux/location/locSelectors';\nimport { renderCustomAxisTick } from 'utils/customAxis';\n\nimport {\n  CustomizeActivedDotPrecipitation,\n  CustomizeActivedDotTempMax,\n  CustomizeActivedDotTempMin,\n} from 'utils/customDot';\nimport { formatDate } from 'utils/formatDate';\nimport { ChartsWrapper } from './DailyCharts.styled';\n\nexport const DailyChartsUI = () => {\n  const dailyForecast = useSelector(getDailyForcast);\n\n  const isRowBased = useMediaQuery('(min-width: 768px)');\n\n  //   FOR DAILY FORECAST\n\n  const dates = dailyForecast.time.map(el => formatDate(new Date(el)));\n  const tempMin = dailyForecast.temperature_2m_min.map(el => el);\n  const tempMax = dailyForecast.temperature_2m_max.map(el => el);\n  const code = dailyForecast.weathercode.map(el => el);\n  const precipitation = dailyForecast.precipitation_sum.map(el => el);\n\n  const dailyData = dates.map((el, index) => {\n    return {\n      date: `${el}`,\n      dateShort: `${el}`.slice(5),\n      min: `${tempMin[index]}`,\n      max: `${tempMax[index]}`,\n      code: `${code[index]}`,\n      precipitation: `${precipitation[index]}`,\n    };\n  });\n\n  return (\n    <ChartsWrapper>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          width={200}\n          height={200}\n          data={dailyData}\n          margin={{\n            top: 0,\n            right: 16,\n            left: 16,\n            bottom: 16,\n          }}\n        >\n          <Tooltip />\n          <ReferenceLine\n            y={0}\n            strokeDasharray=\"5 5\"\n            stroke=\"rgba(51, 40, 33, 0.7)\"\n          />\n          {isRowBased ? (\n            <>\n              <YAxis />\n              <XAxis\n                dataKey=\"code\"\n                xAxisId=\"1\"\n                stroke=\"transparent\"\n                fill=\"transparent\"\n                tick={renderCustomAxisTick}\n              />\n              <XAxis dataKey=\"date\" />\n            </>\n          ) : (\n            <XAxis dataKey=\"dateShort\" />\n          )}\n\n          <XAxis dataKey=\"date\" />\n          <Line\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"min\"\n            stroke=\"#658ED9\"\n            strokeWidth={3}\n            activeDot={<CustomizeActivedDotTempMin />}\n            dot={{ r: 2 }}\n          />\n          <Line\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"max\"\n            stroke=\"rgba(212, 66, 111, 0.5)\"\n            strokeWidth={3}\n            activeDot={<CustomizeActivedDotTempMax />}\n            dot={{ r: 2 }}\n          />\n          <Line\n            type=\"monotone\"\n            stackId=\"1\"\n            dataKey=\"precipitation\"\n            stroke=\"rgba(51, 40, 33, 0.4)\"\n            strokeWidth={3}\n            strokeDasharray=\"3 3\"\n            activeDot={<CustomizeActivedDotPrecipitation />}\n            dot={{ r: 2 }}\n          />\n          <Legend />\n        </LineChart>\n      </ResponsiveContainer>\n    </ChartsWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Header = styled.h3`\n  text-align: center;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n    font-size: 32px;\n  }\n`;\n","import { Header } from './Subheader.styled';\n\nexport const Subheader = ({ text }) => {\n  return <Header>{text}</Header>;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 32px 16px;\n  background: rgba(255, 255, 255, 0.23);\n  border-radius: 30px;\n  gap: 16px;\n  /* box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1); */\n  /* box-shadow: 0px 5px 10px 0px rgba(0, 255, 255, 0.7); */\n  box-shadow: inset -5px -5px 9px rgba(255, 255, 255, 0.45),\n    inset 5px 5px 9px rgba(94, 104, 121, 0.3);\n  backdrop-filter: blur(5.3px);\n  -webkit-backdrop-filter: blur(5.3px);\n  border: 1px solid rgba(255, 255, 255, 0.77);\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n\n  @media screen and (min-width: 768px) {\n    padding: 56px 32px;\n  }\n`;\n","import { Wrapper } from './Wrapper.styled';\n\nexport const WrapperBox = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n","import styled from 'styled-components';\n\nexport const ForecastWrapper = styled.li`\n  /* width: 80%; */\n  width: calc(100% / 3 - 16px);\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n  align-items: center;\n  padding: 16px 8px;\n  background: rgba(255, 255, 255, 0.28);\n  border-radius: 16px;\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border-radius: ${p => p.theme.radii.main};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 16px;\n  line-height: ${p => p.theme.lineHeights.main};\n\n  @media screen and (min-width: 768px) {\n    font-size: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: calc(100% / 3 - 16px);\n    padding: 16px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & img {\n    /* position: absolute;\n    top: -10%; */\n  }\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const DateText = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 24px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  @media screen and (min-width: 1280px) {\n    font-size: 46px;\n  }\n`;\n\nexport const ConditionText = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center; */\n  align-items: center;\n  gap: 6px;\n  margin-bottom: 8px;\n  flex-grow: 1;\n\n  & span {\n    display: flex;\n    padding: 10px;\n    color: ${p => p.theme.colors.mainLight};\n    background-color: ${p => p.theme.colors.mainAccentPink};\n    border-radius: ${p => p.theme.radii.main};\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: row;\n    gap: 16px;\n    margin-bottom: 12px;\n    justify-content: space-between;\n  }\n`;\n\nexport const Text = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & img {\n    width: 30px;\n  }\n\n  & span {\n    display: none;\n  }\n\n  @media screen and (min-width: 1280px) {\n    & span {\n      display: inline-flex;\n    }\n  }\n`;\n\nexport const TextRain = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  & img {\n    width: 20px;\n  }\n`;\n","import { formatDate } from 'utils/formatDate';\nimport {\n  ForecastWrapper,\n  IconWrapper,\n  Text,\n  ConditionText,\n  TextWrapper,\n  DateText,\n  TextRain,\n} from './Forecast.styled';\n\nimport tempPng from '../../images/celsius-min.png';\nimport humidPng from '../../images/hydrometer-min.png';\nimport yes from '../../images/yes-min.png';\nimport no from '../../images/no-min.png';\n\nexport const ForecastUI = ({\n  icon,\n  date,\n  temperature,\n  humidity,\n\n  condition,\n  percipitation,\n}) => {\n  const formatedDate = formatDate(new Date(date));\n  return (\n    <ForecastWrapper>\n      <DateText>{formatedDate}</DateText>\n      <ConditionText>\n        <IconWrapper>\n          <img src={icon} alt={condition} />\n        </IconWrapper>\n        <span>{condition}</span>\n      </ConditionText>\n      <TextWrapper>\n        <Text>\n          <img src={tempPng} alt=\"Temperature\" />\n          <span>Temperature:</span> {temperature} °C\n        </Text>\n        <Text>\n          <img src={humidPng} alt=\"Humidity\" />\n          <span>Humidity:</span> {humidity} %\n        </Text>\n        <TextRain>\n          <span>Rain:</span>\n          {percipitation ? (\n            <img src={yes} alt=\"yes\" />\n          ) : (\n            <img src={no} alt=\"no\" />\n          )}\n        </TextRain>\n      </TextWrapper>\n    </ForecastWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ForecastWrapper = styled.ul`\n  display: flex;\n  width: 100%;\n  align-items: stretch;\n  gap: 6px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    gap: 16px;\n  }\n`;\n\nexport const IndicatorsWrapper = styled.ul`\n  display: flex;\n  gap: 16px;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 16px;\n\n  & li {\n    display: flex;\n    width: 80%;\n\n    & span {\n      margin-right: 0;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-between;\n\n    & li {\n      width: 25%;\n    }\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  getAdditionalCurrentWeather,\n  getCurrentWeather,\n  getForcast,\n} from 'redux/location/locSelectors';\n\nimport { IndicatorUI } from 'components/Indicator/Indicator';\nimport { DailyChartsUI } from 'components/ChartBox/DailyCharts';\nimport { Subheader } from 'components/BoxSubheader/Subheader';\nimport { WrapperBox } from 'components/BoxWrapper/Wrapper';\nimport { ForecastUI } from 'components/ForecastBox/Forecast';\nimport { ForecastWrapper, IndicatorsWrapper } from './WeatherBox.styled';\n\nimport hot from '../../images/hot-min.png';\nimport cold from '../../images/cold-min.png';\nimport clouds from '../../images/cloud-min.png';\nimport windrose from '../../images/wind-rose-min.png';\nimport windBlow from '../../images/dashing-away-min.png';\nimport windSocket from '../../images/windsock-min.png';\nimport pressure from '../../images/pressure-min.png';\nimport uv from '../../images/uv-index-min.png';\nimport radio from '../../images/optical-radiation-min.png';\n\nconst WeatherUI = () => {\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n  const forecast = useSelector(getForcast);\n\n  return weather && extraWeather ? (\n    <WrapperBox>\n      <Subheader text=\"Today's data\" />\n      <IndicatorsWrapper>\n        <IndicatorUI\n          src={hot}\n          text=\"Max temperature:\"\n          source={`${weather.daily.temperature_2m_max[0]} °C`}\n        />\n        <IndicatorUI\n          src={cold}\n          text=\"Min temperature:\"\n          source={`${weather.daily.temperature_2m_min[0]} °C`}\n        />\n        <IndicatorUI\n          src={clouds}\n          text=\"Clouds:\"\n          source={`${extraWeather.cloud} %`}\n        />\n        <IndicatorUI\n          src={windBlow}\n          text=\"Max windgusts:\"\n          source={`${weather.daily.windgusts_10m_max[0]} km/h`}\n        />\n        <IndicatorUI\n          src={windSocket}\n          text=\"Max windspeed:\"\n          source={`${weather.daily.windspeed_10m_max[0]} km/h`}\n        />\n        <IndicatorUI\n          src={windrose}\n          text=\"Wind direction:\"\n          source={extraWeather.wind_dir}\n        />\n        <IndicatorUI\n          src={pressure}\n          text=\"Pressure:\"\n          source={`${extraWeather.pressure_mb} millibars`}\n        />\n        <IndicatorUI\n          src={radio}\n          text=\"Shortwave radiation:\"\n          source={`${weather.daily.shortwave_radiation_sum[0]} MJ/m²`}\n        />\n        <IndicatorUI src={uv} text=\"UV:\" source={`Index ${extraWeather.uv}`} />\n      </IndicatorsWrapper>\n      <Subheader text=\"Next days forecast\" />\n      <ForecastWrapper>\n        {forecast.map(el => {\n          return (\n            <ForecastUI\n              key={el.date}\n              date={el.date}\n              humidity={el.day.avghumidity}\n              percipitation={el.day.daily_will_it_rain}\n              condition={el.day.condition.text}\n              icon={el.day.condition.icon}\n              temperature={el.day.avgtemp_c}\n            />\n          );\n        })}\n      </ForecastWrapper>\n      <Subheader text=\"7-day forecast\" />\n      <DailyChartsUI />\n    </WrapperBox>\n  ) : (\n    <div>No weather data available</div>\n  );\n};\n\nexport default React.memo(WeatherUI);\n","import newMoon from '../images/moonPhases/new-moon-min.png';\nimport waxingCrescent from '../images/moonPhases/waxing-crescent-min.png';\nimport firstQuarter from '../images/moonPhases/first-quarter-min.png';\nimport waxingGibbous from '../images/moonPhases/waxing-gibbous-min.png';\nimport fullMoon from '../images/moonPhases/full-moon-min.png';\nimport waningGibbous from '../images/moonPhases/waning-gibbous-min.png';\nimport lastQuarter from '../images/moonPhases/last-quarter-min.png';\nimport waningCrescent from '../images/moonPhases/waning-crescent-min.png';\n\nexport const moonPhasesPng = [\n  { phase: 'New', png: newMoon },\n  { phase: 'New moon', png: newMoon },\n  { phase: 'Waxing Crescent', png: waxingCrescent },\n  { phase: 'First Quarter', png: firstQuarter },\n  { phase: 'Waxing Gibbous', png: waxingGibbous },\n  { phase: 'Full moon', png: fullMoon },\n  { phase: 'Full', png: fullMoon },\n  { phase: 'Waning Gibbous', png: waningGibbous },\n  { phase: 'Last Quarter', png: lastQuarter },\n  { phase: 'Third Quarter', png: lastQuarter },\n  { phase: 'Waning Crescent', png: waningCrescent },\n];\n","import { IndicatorUI } from 'components/Indicator/Indicator';\n\nimport styled from 'styled-components';\n\nexport const SunBox = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const MoonBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  column-gap: 32px;\n  row-gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const AstroIndicator = styled(IndicatorUI)`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MoonImg = styled.img`\n  width: 60%;\n  height: auto;\n  margin: 0;\n\n  @media screen and (min-width: 768px) {\n    width: calc(50% - 32px);\n    height: auto;\n  }\n`;\n\nexport const MoonIndicatorsWrapper = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  row-gap: 16px;\n  width: max-content;\n  width: 100%;\n\n  & li {\n    box-sizing: border-box;\n    width: 80%;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: column;\n    width: calc(50% - 16px);\n\n    & li {\n      width: 100%;\n    }\n  }\n`;\n\nexport const SunIndicatorsWrapper = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  row-gap: 16px;\n  column-gap: 32px;\n  width: 100%;\n\n  & li {\n    box-sizing: border-box;\n    width: 80%;\n  }\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n\n    & li {\n      width: calc(50% - 16px);\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAstroDataFromWeatherApi } from 'redux/location/locOperations';\nimport { getAstroData } from 'redux/location/locSelectors';\nimport { moonPhasesPng } from 'utils/moonPhases';\nimport moonrise from '../../images/moonrise-min.png';\nimport moonset from '../../images/moonset-min.png';\nimport phase from '../../images/waxing-gibbous-min.png';\nimport moon from '../../images/moon-min.png';\nimport sunrise from '../../images/sunrise-min.png';\nimport sunset from '../../images/sunset-min.png';\n\nimport {\n  MoonBox,\n  SunBox,\n  MoonImg,\n  AstroIndicator,\n  MoonIndicatorsWrapper,\n  SunIndicatorsWrapper,\n} from './AstroBox.styled';\nimport { WrapperBox } from 'components/BoxWrapper/Wrapper';\n\nfunction AstroUI() {\n  const astro = useSelector(getAstroData);\n  const moonPhase = astro.moon_phase;\n  const [moonPng, setMoonPng] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (astro) {\n      const moonImg = moonPhasesPng.find(\n        cond => cond.phase.toLowerCase() === moonPhase.toLowerCase()\n      ).png;\n\n      setMoonPng(moonImg);\n      return;\n    }\n    dispatch(fetchAstroDataFromWeatherApi());\n  }, [dispatch, astro, moonPhase]);\n\n  return astro && moonPng ? (\n    <WrapperBox>\n      <MoonBox>\n        <MoonImg src={moonPng} alt=\"moon phase\" loading=\"lazy\" />\n        <MoonIndicatorsWrapper>\n          <AstroIndicator\n            src={moon}\n            text=\"Moon illumination:\"\n            source={`${astro.moon_illumination} %`}\n          />\n          <AstroIndicator\n            src={phase}\n            text=\"Moon phase:\"\n            source={`${astro.moon_phase}`}\n          />\n          <AstroIndicator\n            src={moonrise}\n            text=\"Moonrise:\"\n            source={`${astro.moonrise}`}\n          />\n          <AstroIndicator\n            src={moonset}\n            text=\"Moonset:\"\n            source={`${astro.moonset}`}\n          />\n        </MoonIndicatorsWrapper>\n      </MoonBox>\n      <SunBox>\n        <SunIndicatorsWrapper>\n          <AstroIndicator\n            src={sunrise}\n            text=\"Sunrise:\"\n            source={`${astro.sunrise}`}\n          />\n          <AstroIndicator\n            src={sunset}\n            text=\"Sunset:\"\n            source={`${astro.sunset}`}\n          />\n        </SunIndicatorsWrapper>\n      </SunBox>\n    </WrapperBox>\n  ) : (\n    <div>No astro data available</div>\n  );\n}\n\nexport default React.memo(AstroUI);\n","import styled from 'styled-components';\n\nexport const CurrentState = styled.div`\n  padding: 10px 24px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.mainLight};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  background-color: ${p =>\n    p.index === 'Good'\n      ? '#31a37d'\n      : p.index === 'Moderate'\n      ? '#709f2e'\n      : p.index === 'Unhealthy for sensitive group'\n      ? '#bcba1c'\n      : p.index === 'Unhealthy'\n      ? '#ca7616'\n      : p.index === 'Very unhealthy'\n      ? '#ca5b16'\n      : p.index === 'Hazardous'\n      ? '#ca3116'\n      : '#5E4FC1'};\n  border-radius: ${p => p.theme.radii.main};\n\n  & span {\n    font-weight: ${p => p.theme.fontWeights[1]};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const IndicatorsWrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n\n  & li {\n    font-size: 16px;\n    justify-content: center;\n    width: 80%;\n    height: fit-content;\n\n    & img {\n      width: 40px;\n      height: auto;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-between;\n    & li {\n      width: 25%;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ChartsWrapper = styled.div`\n  width: 100%;\n  height: 250px;\n  margin-top: 16px;\n\n  @media screen and (min-width: 768px) {\n    height: 300px;\n    margin-top: 32px;\n  }\n`;\n","import { useMediaQuery } from 'hooks/useMedia';\nimport { useSelector } from 'react-redux';\nimport {\n  ReferenceLine,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  LineChart,\n  Line,\n} from 'recharts';\nimport { getAirData } from 'redux/location/locSelectors';\nimport { CustomizedDotEuAQI, CustomizedDotUsAQI } from 'utils/customDot';\nimport { ChartsWrapper } from './HourlyChartsAir.styled';\n\nexport const HourlyChartsAirUI = () => {\n  const airData = useSelector(getAirData);\n  const isRowBased = useMediaQuery('(min-width: 768px)');\n\n  const hours = airData.hourly.time.map(el => el).slice(0, 24);\n  const dust = airData.hourly.dust.map(el => el).slice(0, 24);\n  const alder_pollen = airData.hourly.alder_pollen.map(el => el).slice(0, 24);\n  const birch_pollen = airData.hourly.birch_pollen.map(el => el).slice(0, 24);\n  const grass_pollen = airData.hourly.grass_pollen.map(el => el).slice(0, 24);\n  const mugwort_pollen = airData.hourly.mugwort_pollen\n    .map(el => el)\n    .slice(0, 24);\n  const olive_pollen = airData.hourly.olive_pollen.map(el => el).slice(0, 24);\n  const ragweed_pollen = airData.hourly.ragweed_pollen\n    .map(el => el)\n    .slice(0, 24);\n  const euAQI = airData.hourly.european_aqi.map(el => el).slice(0, 24);\n  const usAQI = airData.hourly.us_aqi.map(el => el).slice(0, 24);\n\n  const hourlyData = hours.map((el, index) => {\n    return {\n      time: `${el}`.slice(11),\n      dust: `${dust[index]}`,\n      alder_pollen: `${alder_pollen[index]}`,\n      birch_pollen: `${birch_pollen[index]}`,\n      grass_pollen: `${grass_pollen[index]}`,\n      mugwort_pollen: `${mugwort_pollen[index]}`,\n      olive_pollen: `${olive_pollen[index]}`,\n      ragweed_pollen: `${ragweed_pollen[index]}`,\n      euAQI: `${euAQI[index]}`,\n      usAQI: `${usAQI[index]}`,\n    };\n  });\n\n  console.log(hourlyData);\n\n  return (\n    <ChartsWrapper>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          width={500}\n          height={300}\n          data={hourlyData}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <Tooltip />\n          <Legend />\n          {isRowBased && (\n            <>\n              <YAxis interval=\"preserveStartEnd\" />\n            </>\n          )}\n          <XAxis dataKey=\"time\" xAxisId=\"0\" />\n          <ReferenceLine y={0} stroke=\"#000\" />\n          <Line\n            dataKey=\"dust\"\n            stroke=\"rgba(21, 144, 165, 0.454)\"\n            // activeDot={<CustomizeActivedDot />}\n            // dot={<CustomizedDot />}\n          />\n          <Line\n            dataKey=\"usAQI\"\n            stroke=\"rgba(91, 138, 219, 0.763)\"\n            // activeDot={<CustomizeActivedDot />}\n            dot={<CustomizedDotUsAQI />}\n          />\n          <Line\n            dataKey=\"euAQI\"\n            stackId=\"a\"\n            stroke=\"rgba(103, 225, 66, 0.664)\"\n            // activeDot={<CustomizeActivedDot />}\n            dot={<CustomizedDotEuAQI />}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </ChartsWrapper>\n  );\n};\n","import { WrapperBox } from 'components/BoxWrapper/Wrapper';\nimport { IndicatorUI } from 'components/Indicator/Indicator';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { getAirData } from 'redux/location/locSelectors';\nimport { CurrentState, IndicatorsWrapper } from './AirBox.styled';\n\nimport co from '../../images/air/co-min.png';\nimport no2 from '../../images/air/no2-min.png';\nimport o3 from '../../images/air/o3-min.png';\nimport so2 from '../../images/air/so2-min.png';\nimport pm25 from '../../images/air/pm25-min.png';\nimport pm10 from '../../images/air/pm10-min.png';\nimport { formatIndex } from 'utils/formatAirIndex';\nimport { HourlyChartsAirUI } from 'components/ChartBox/HourlyChartsAir';\n\nconst AirUI = () => {\n  const air = useSelector(getAirData);\n  const index = formatIndex(air['us-epa-index']);\n  return (\n    <WrapperBox>\n      <CurrentState index={index}>\n        Air quality: <span> {index}</span>\n      </CurrentState>\n      <IndicatorsWrapper>\n        <IndicatorUI\n          src={co}\n          text=\"Carbon monoxide\"\n          source={`${air.co.toFixed(2)} μg/m3`}\n        />\n        <IndicatorUI\n          src={no2}\n          text=\"Nitrogen dioxide\"\n          source={`${air.no2.toFixed(2)} μg/m3`}\n        />\n        <IndicatorUI\n          src={o3}\n          text=\"Ozone\"\n          source={`${air.o3.toFixed(2)} μg/m3`}\n        />\n        <IndicatorUI\n          src={so2}\n          text=\"Sulphur dioxide\"\n          source={`${air.so2.toFixed(2)} μg/m3`}\n        />\n        <IndicatorUI\n          src={pm25}\n          text=\"PM2.5\"\n          source={`${air.pm2_5.toFixed(2)} μg/m3`}\n        />\n        <IndicatorUI\n          src={pm10}\n          text=\"PM10\"\n          source={`${air.pm10.toFixed(2)} μg/m3`}\n        />\n      </IndicatorsWrapper>\n      <HourlyChartsAirUI />\n    </WrapperBox>\n  );\n};\n\nexport default React.memo(AirUI);\n","export const formatIndex = index => {\n  switch (index) {\n    case 1:\n      return 'Good';\n    case 2:\n      return 'Moderate';\n    case 3:\n      return 'Unhealthy for sensitive group';\n    case 4:\n      return 'Unhealthy';\n    case 5:\n      return 'Very unhealthy';\n    case 6:\n      return 'Hazardous';\n    default:\n      return;\n  }\n};\n","import styled from 'styled-components';\n\nexport const ButtonMain = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  height: 50px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p =>\n    p.color === 'blue' ? p.theme.colors.accentBlue : p.theme.colors.textGrey};\n  text-align: center;\n  text-transform: uppercase;\n  border: none;\n  background-color: transparent;\n\n  @media screen and (min-width: 768px) {\n    height: 70px;\n  }\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    display: inline-block;\n    width: calc(100%);\n    height: 40px;\n    border: 4px solid\n      ${p =>\n        p.color === 'blue'\n          ? p.theme.colors.accentBlue\n          : p.color === 'pink'\n          ? p.theme.colors.accentPink\n          : p.color === 'violet'\n          ? p.theme.colors.accentViolet\n          : p.theme.colors.iconsFill};\n    border-radius: 50px;\n    z-index: -10;\n\n    @media screen and (min-width: 768px) {\n      width: calc(100%);\n      height: 50px;\n    }\n  }\n\n  &:before {\n    bottom: 0;\n    left: 0;\n    background-color: ${p =>\n      p.selected ? p.theme.colors.bgYellow : 'transparent'};\n    transition: transform 0.3s, background-color 0.3s;\n  }\n\n  &:after {\n    top: 10px;\n    left: 0px;\n    opacity: 0.3;\n    transition: transform 0.3s, opacity 0.3s;\n\n    @media screen and (min-width: 768px) {\n      left: 10px;\n      top: 0px;\n    }\n  }\n\n  // Hover\n\n  &:hover {\n    span {\n      color: ${p => p.theme.colors.mainLight};\n      transform: translate(0px, -5px);\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n    &:before {\n      background-color: ${p =>\n        p.color === 'blue'\n          ? p.theme.colors.accentBlue\n          : p.theme.colors.textGrey};\n      transform: translate(0px, -5px);\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n    &:after {\n      transform: translate(0px, 5px);\n      opacity: 0;\n\n      @media screen and (min-width: 768px) {\n        transform: translate(5px, -5px);\n      }\n    }\n  }\n\n  // Active\n  &:active {\n    &:before {\n      background-color: ${p => p.theme.colors.bgYellow};\n    }\n  }\n`;\n\nexport const ButtonText = styled.span`\n  display: inline-flex;\n  position: relative;\n  top: 5%;\n  left: 2%;\n  z-index: 1000;\n  transition: transform 0.3s, color 0.2s;\n\n  @media screen and (min-width: 768px) {\n    top: 10%;\n    left: 0px;\n  }\n`;\n","import { ButtonMain, ButtonText } from './Button.styled';\n\nexport const ButtonUI = ({ text, type, onClick, selected }) => {\n  return (\n    <ButtonMain selected={selected} type={type} onClick={onClick}>\n      <ButtonText>{text}</ButtonText>\n    </ButtonMain>\n  );\n};\n","import daySun from '../images/conditions/day-sun-min.png';\nimport dayClouds from '../images/conditions/day-clouds-min.png';\nimport dayRain from '../images/conditions/day-rain-min.png';\nimport daySnow from '../images/conditions/day-snow-min.png';\nimport dayStorm from '../images/conditions/day-storm-min.png';\nimport dayWind from '../images/conditions/day-wind-min.png';\n\nimport nightMoon from '../images/conditions/night-moon-min.png';\nimport nightClouds from '../images/conditions/night-clouds-min.png';\nimport nightRain from '../images/conditions/night-rain-min.png';\nimport nightWind from '../images/conditions/night-wind-min.png';\nimport nightSnow from '../images/conditions/night-snow-min.png';\nimport nightStorm from '../images/conditions/night-storm-min.png';\n\nexport const conditionsWeatherApi = [\n  {\n    code: 1000,\n    day: 'Sunny',\n    night: 'Clear',\n    icon: 113,\n    png: [daySun, nightMoon],\n  },\n  {\n    code: 1003,\n    day: 'Partly cloudy',\n    night: 'Partly cloudy',\n    icon: 116,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1006,\n    day: 'Cloudy',\n    night: 'Cloudy',\n    icon: 119,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1009,\n    day: 'Overcast',\n    night: 'Overcast',\n    icon: 122,\n    png: [dayClouds, nightClouds],\n  },\n  {\n    code: 1030,\n    day: 'Mist',\n    night: 'Mist',\n    icon: 143,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1063,\n    day: 'Patchy rain possible',\n    night: 'Patchy rain possible',\n    icon: 176,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1066,\n    day: 'Patchy snow possible',\n    night: 'Patchy snow possible',\n    icon: 179,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1069,\n    day: 'Patchy sleet possible',\n    night: 'Patchy sleet possible',\n    icon: 182,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1072,\n    day: 'Patchy freezing drizzle possible',\n    night: 'Patchy freezing drizzle possible',\n    icon: 185,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1087,\n    day: 'Thundery outbreaks possible',\n    night: 'Thundery outbreaks possible',\n    icon: 200,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1114,\n    day: 'Blowing snow',\n    night: 'Blowing snow',\n    icon: 227,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1117,\n    day: 'Blizzard',\n    night: 'Blizzard',\n    icon: 230,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1135,\n    day: 'Fog',\n    night: 'Fog',\n    icon: 248,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1147,\n    day: 'Freezing fog',\n    night: 'Freezing fog',\n    icon: 260,\n    png: [dayWind, nightWind],\n  },\n  {\n    code: 1150,\n    day: 'Patchy light drizzle',\n    night: 'Patchy light drizzle',\n    icon: 263,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1153,\n    day: 'Light drizzle',\n    night: 'Light drizzle',\n    icon: 266,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1168,\n    day: 'Freezing drizzle',\n    night: 'Freezing drizzle',\n    icon: 281,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1171,\n    day: 'Heavy freezing drizzle',\n    night: 'Heavy freezing drizzle',\n    icon: 284,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1180,\n    day: 'Patchy light rain',\n    night: 'Patchy light rain',\n    icon: 293,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1183,\n    day: 'Light rain',\n    night: 'Light rain',\n    icon: 296,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1186,\n    day: 'Moderate rain at times',\n    night: 'Moderate rain at times',\n    icon: 299,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1189,\n    day: 'Moderate rain',\n    night: 'Moderate rain',\n    icon: 302,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1192,\n    day: 'Heavy rain at times',\n    night: 'Heavy rain at times',\n    icon: 305,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1195,\n    day: 'Heavy rain',\n    night: 'Heavy rain',\n    icon: 308,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1198,\n    day: 'Light freezing rain',\n    night: 'Light freezing rain',\n    icon: 311,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1201,\n    day: 'Moderate or heavy freezing rain',\n    night: 'Moderate or heavy freezing rain',\n    icon: 314,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1204,\n    day: 'Light sleet',\n    night: 'Light sleet',\n    icon: 317,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1207,\n    day: 'Moderate or heavy sleet',\n    night: 'Moderate or heavy sleet',\n    icon: 320,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1210,\n    day: 'Patchy light snow',\n    night: 'Patchy light snow',\n    icon: 323,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1213,\n    day: 'Light snow',\n    night: 'Light snow',\n    icon: 326,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1216,\n    day: 'Patchy moderate snow',\n    night: 'Patchy moderate snow',\n    icon: 329,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1219,\n    day: 'Moderate snow',\n    night: 'Moderate snow',\n    icon: 332,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1222,\n    day: 'Patchy heavy snow',\n    night: 'Patchy heavy snow',\n    icon: 335,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1225,\n    day: 'Heavy snow',\n    night: 'Heavy snow',\n    icon: 338,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1237,\n    day: 'Ice pellets',\n    night: 'Ice pellets',\n    icon: 350,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1240,\n    day: 'Light rain shower',\n    night: 'Light rain shower',\n    icon: 353,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1243,\n    day: 'Moderate or heavy rain shower',\n    night: 'Moderate or heavy rain shower',\n    icon: 356,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1246,\n    day: 'Torrential rain shower',\n    night: 'Torrential rain shower',\n    icon: 359,\n    png: [dayRain, nightRain],\n  },\n  {\n    code: 1249,\n    day: 'Light sleet showers',\n    night: 'Light sleet showers',\n    icon: 362,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1252,\n    day: 'Moderate or heavy sleet showers',\n    night: 'Moderate or heavy sleet showers',\n    icon: 365,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1255,\n    day: 'Light snow showers',\n    night: 'Light snow showers',\n    icon: 368,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1258,\n    day: 'Moderate or heavy snow showers',\n    night: 'Moderate or heavy snow showers',\n    icon: 371,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1261,\n    day: 'Light showers of ice pellets',\n    night: 'Light showers of ice pellets',\n    icon: 374,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1264,\n    day: 'Moderate or heavy showers of ice pellets',\n    night: 'Moderate or heavy showers of ice pellets',\n    icon: 377,\n    png: [daySnow, nightSnow],\n  },\n  {\n    code: 1273,\n    day: 'Patchy light rain with thunder',\n    night: 'Patchy light rain with thunder',\n    icon: 386,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1276,\n    day: 'Moderate or heavy rain with thunder',\n    night: 'Moderate or heavy rain with thunder',\n    icon: 389,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1279,\n    day: 'Patchy light snow with thunder',\n    night: 'Patchy light snow with thunder',\n    icon: 392,\n    png: [dayStorm, nightStorm],\n  },\n  {\n    code: 1282,\n    day: 'Moderate or heavy snow with thunder',\n    night: 'Moderate or heavy snow with thunder',\n    icon: 395,\n    png: [dayStorm, nightStorm],\n  },\n];\n","import { Indicator } from 'components/Indicator/Indicator.styled';\nimport styled from 'styled-components';\n\nexport const DataWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 16px;\n  margin: 0 auto;\n  border-radius: 30px;\n  padding: 32px 16px;\n  background-color: rgba(255, 255, 255, 0.63);\n  /* box-shadow: inset -5px -5px 9px rgba(255, 255, 255, 0.45),\n    inset 5px 5px 9px rgba(94, 104, 121, 0.3); */\n  box-shadow: -5px -5px 80px #fff, 5px 5px 20px #babecc;\n  backdrop-filter: blur(2.3px);\n  -webkit-backdrop-filter: blur(2.3px);\n  /* border: 1px solid rgba(255, 255, 255, 0.77); */\n\n  @media screen and (min-width: 768px) {\n    padding: 32px 56px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 70%;\n  }\n`;\n\nexport const WeatherDataWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 16px;\n  width: 100%;\n  position: relative;\n`;\n\nexport const WeatherInfoWrapper = styled.div`\n  padding: 32px 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-end;\n  gap: 16px;\n  border-radius: 30px;\n  background: rgba(255, 255, 255, 0.28);\n  border-radius: 16px;\n  box-shadow: inset 2px 2px 5px #babecc, inset -5px -5px 10px #fff;\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n\n  @media screen and (min-width: 768px) {\n    padding: 56px 32px;\n  }\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40vw;\n  top: -25%;\n  left: -10%;\n  position: absolute;\n\n  & img {\n    width: 100%;\n  }\n\n  @media screen and (min-width: 420px) {\n    width: 170px;\n  }\n\n  @media screen and (min-width: 768px) {\n    position: static;\n    width: 30vw;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 40%;\n  }\n`;\n\nexport const CityName = styled.p`\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  @media screen and (min-width: 768px) {\n    font-size: 32px;\n  }\n`;\n\nexport const WeatherConditions = styled.div`\n  padding: 10px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.mainLight};\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n  background-color: ${p => p.theme.colors.mainAccentPink};\n  border-radius: ${p => p.theme.radii.main};\n`;\n\nexport const IndicatorsWrapper = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-items: center;\n  align-content: center;\n  gap: 16px;\n\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n    align-items: stretch;\n  }\n`;\n\nexport const ChanceOfIndicator = styled(Indicator)`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${p => p.theme.colors.bgGrey};\n  color: #8495b2;\n  gap: 8px;\n\n  & div {\n    display: flex;\n  }\n\n  & img {\n    width: 30px;\n    height: 30px;\n    margin-right: 8px;\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    align-items: flex-start;\n  }\n`;\n\nexport const TemperatureWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n  flex-grow: 1;\n`;\n\nexport const FeelsLike = styled.span`\n  font-size: 20px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.textGrey};\n`;\nexport const Temperature = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-family: ${p => p.theme.fonts.main};\n\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 96px;\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.mainDark};\n\n  & img {\n    width: 40px;\n  }\n\n  & span {\n    font-weight: ${p => p.theme.fontWeights[0]};\n    font-size: 24px;\n  }\n`;\n\nexport const ButtonsWrapper = styled.ul`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n\n  gap: 16px;\n\n  & li {\n    display: inline-flex;\n    width: calc(50% - 16px);\n  }\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-between;\n\n    & li {\n      width: calc(100% / 3 - 32px);\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { HourlyChartsUI } from 'components/ChartBox/HourlyCharts';\nimport WeatherUI from 'components/WeatherBox/WeatherBox';\nimport AstroUI from 'components/AstroBox/AstroBox';\nimport AirUI from 'components/AirBox/AirBox';\nimport { ButtonUI } from 'components/Button/Button';\nimport { IndicatorText } from 'components/Indicator/Indicator.styled';\nimport { IndicatorUI } from 'components/Indicator/Indicator';\n\nimport {\n  getAdditionalCurrentWeather,\n  getCityName,\n  getCountry,\n  getCurrentWeather,\n  getDayTime,\n  getForcast,\n} from 'redux/location/locSelectors';\nimport { conditionsWeatherApi } from 'utils/conditionsWeatherApi';\nimport {\n  ChanceOfIndicator,\n  CityName,\n  DataWrapper,\n  FeelsLike,\n  IconWrapper,\n  IndicatorsWrapper,\n  Temperature,\n  TemperatureWrapper,\n  WeatherConditions,\n  WeatherDataWrapper,\n  WeatherInfoWrapper,\n  ButtonsWrapper,\n} from './MainBox.styled';\n\nimport termometrPlus from '../../images/thermomater-max-min.png';\nimport termometrMinus from '../../images/thermomater-min-min.png';\nimport percipitationImg from '../../images/percipitation-min.png';\nimport windImg from '../../images/wind-min.png';\nimport humidityImg from '../../images/humidity-min.png';\nimport rain from '../../images/rain-min.png';\nimport snow from '../../images/snow-min.png';\nimport { useMediaQuery } from 'hooks/useMedia';\n\nexport const MainBoxUI = () => {\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n  const forecast = useSelector(getForcast);\n  const dayTime = useSelector(getDayTime);\n  const city = useSelector(getCityName);\n  const country = useSelector(getCountry);\n  const isRowBased = useMediaQuery('(min-width: 768px)');\n\n  const [showWeather, setShowWeather] = useState(false);\n  const [showAstro, setShowAstro] = useState(false);\n  const [showAir, setShowAir] = useState(false);\n  const [weatherPng, setWeatherPng] = useState(null);\n\n  useEffect(() => {\n    if (extraWeather) {\n      const weatherCode = extraWeather.condition.code;\n      const conditionPng = conditionsWeatherApi.find(\n        cond => cond.code === weatherCode\n      ).png;\n      dayTime ? setWeatherPng(conditionPng[0]) : setWeatherPng(conditionPng[1]);\n    }\n  }, [dayTime, extraWeather]);\n\n  const onWeatherBtnClick = () => {\n    setShowWeather(!showWeather);\n    setShowAstro(false);\n    setShowAir(false);\n  };\n\n  const onShowAstroBtnClick = () => {\n    setShowAstro(!showAstro);\n    setShowAir(false);\n    setShowWeather(false);\n  };\n\n  const onShowAirBtnClick = () => {\n    setShowAir(!showAir);\n    setShowAstro(false);\n    setShowWeather(false);\n  };\n\n  return (\n    <DataWrapper>\n      {weather && extraWeather ? (\n        <>\n          <WeatherDataWrapper>\n            <IconWrapper>\n              <img\n                src={weatherPng}\n                alt={extraWeather.condition.text}\n                loading=\"lazy\"\n              />\n            </IconWrapper>\n            <TemperatureWrapper>\n              <WeatherConditions>\n                <span>{extraWeather.condition.text}</span>\n              </WeatherConditions>\n              <CityName>\n                {city}, {country}\n              </CityName>\n              <Temperature>\n                <img\n                  src={\n                    extraWeather.temp_c >= 0 ? termometrPlus : termometrMinus\n                  }\n                  alt=\"temperature\"\n                  loading=\"lazy\"\n                />\n                {extraWeather.temp_c} <span>°C</span>\n              </Temperature>\n              <FeelsLike>Feels like {extraWeather.feelslike_c} °C</FeelsLike>\n              {/* <FeelsLike>\n                Local time {weather.current_weather.time.slice(11)}\n              </FeelsLike> */}\n            </TemperatureWrapper>\n          </WeatherDataWrapper>\n          <WeatherInfoWrapper>\n            <IndicatorsWrapper>\n              <ChanceOfIndicator>\n                <div>\n                  <img src={rain} alt=\"rain\" loading=\"lazy\" />\n                  <IndicatorText>Chance of rain:</IndicatorText>\n                  <span>{forecast[0].day.daily_chance_of_rain} %</span>\n                </div>\n                <div>\n                  <img src={snow} alt=\"snow\" loading=\"lazy\" />\n                  <IndicatorText>Chance of snow:</IndicatorText>\n                  <span>{forecast[0].day.daily_chance_of_snow} %</span>\n                </div>\n              </ChanceOfIndicator>\n              <IndicatorUI\n                color=\"blue\"\n                src={percipitationImg}\n                text=\"Precipitation:\"\n                source={`${weather.daily.precipitation_sum[0]} mm`}\n              />\n              <IndicatorUI\n                color=\"pink\"\n                src={humidityImg}\n                text=\"Humidity:\"\n                source={`${extraWeather.humidity} %`}\n              />\n\n              <IndicatorUI\n                color=\"violet\"\n                src={windImg}\n                text=\"Windspeed:\"\n                source={`${weather.current_weather.windspeed} km/h`}\n              />\n            </IndicatorsWrapper>\n            <HourlyChartsUI />\n            <ButtonsWrapper>\n              <li>\n                <ButtonUI\n                  type=\"button\"\n                  onClick={onWeatherBtnClick}\n                  text=\"Details\"\n                  selected={showWeather}\n                />\n              </li>\n              <li>\n                <ButtonUI\n                  type=\"button\"\n                  onClick={onShowAstroBtnClick}\n                  text=\"Astro\"\n                  selected={showAstro}\n                />\n              </li>\n              <li>\n                <ButtonUI\n                  type=\"button\"\n                  onClick={onShowAirBtnClick}\n                  text={isRowBased ? 'Air quality' : 'Air'}\n                  selected={showAir}\n                />\n              </li>\n            </ButtonsWrapper>\n          </WeatherInfoWrapper>\n          {showWeather && <WeatherUI />}\n          {showAstro && <AstroUI />}\n          {showAir && <AirUI />}\n        </>\n      ) : (\n        <div>No data to display</div>\n      )}\n    </DataWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\n\nconst text = keyframes`\nfrom {\n    transform: translateX(100%);\n  }\n  to {\n    transform: translateX(-100%);\n  }\n  `;\n\nexport const TextContainer = styled.div`\n  /* position: absolute; */\n  border-radius: 5px;\n  overflow: hidden;\n  margin-bottom: 16px;\n  padding: 8px;\n`;\n\nexport const RunningText = styled.div`\n  font-size: 20px;\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  line-height: ${p => p.theme.lineHeights.main};\n  color: ${p => p.theme.colors.textGrey};\n  width: max-content;\n  display: inline-flex;\n  animation: ${text} 25s linear infinite;\n  text-shadow: 2px 2px 2px #fbfff3;\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n  }\n`;\n","import { RunningText, TextContainer } from './TextLine.styled';\n\nexport const TextLine = ({ text }) => {\n  return (\n    <TextContainer>\n      <RunningText>{text}</RunningText>\n    </TextContainer>\n  );\n};\n","import { CardUI } from 'components/Card/Card';\nimport { DEFAULT_LATITUDE, DEFAULT_LONGITUDE } from 'components/consts/consts';\nimport { Container } from 'components/Container/Container';\nimport { Loader } from 'components/Loader/Loader';\nimport { MainBoxUI } from 'components/MainBox/MainBox';\nimport { TextLine } from 'components/TextLine/TextLine';\nimport { useEffect } from 'react';\nimport { useGeolocated } from 'react-geolocated';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchAirQuality,\n  fetchAstroDataFromWeatherApi,\n  fetchCity,\n  fetchCurrentWeather,\n  fetchCurrentWeatherFromWeatherApi,\n  fetchPexelsImage,\n  fetchWeatherForecastFromWeatherApi,\n} from 'redux/location/locOperations';\nimport {\n  getAdditionalCurrentWeather,\n  getCityName,\n  getCurrentLatitude,\n  getCurrentLongitude,\n  getCurrentWeather,\n  getTimezone,\n} from 'redux/location/locSelectors';\nimport { setLatitude, setLongitude } from 'redux/location/locSlice';\n\nconst Homepage = () => {\n  const { coords, isGeolocationAvailable, isGeolocationEnabled } =\n    useGeolocated({\n      positionOptions: {\n        enableHighAccuracy: false,\n      },\n\n      userDecisionTimeout: undefined,\n      suppressLocationOnMount: false,\n    });\n\n  const dispatch = useDispatch();\n  const latitude = useSelector(getCurrentLatitude);\n  const longitude = useSelector(getCurrentLongitude);\n  const timezone = useSelector(getTimezone);\n  const city = useSelector(getCityName);\n  const weather = useSelector(getCurrentWeather);\n  const extraWeather = useSelector(getAdditionalCurrentWeather);\n\n  useEffect(() => {\n    if (coords) {\n      dispatch(setLatitude(coords.latitude));\n      dispatch(setLongitude(coords.longitude));\n      dispatch(fetchCity());\n\n      // dispatch(fetchTimezone());\n    }\n    if (!isGeolocationAvailable || !isGeolocationEnabled) {\n      dispatch(setLatitude(DEFAULT_LATITUDE));\n      dispatch(setLongitude(DEFAULT_LONGITUDE));\n      dispatch(fetchCity());\n    }\n    return;\n  }, [coords, dispatch, isGeolocationAvailable, isGeolocationEnabled]);\n\n  useEffect(() => {\n    if (extraWeather) {\n      return;\n    }\n    if (latitude && longitude) {\n      dispatch(fetchAstroDataFromWeatherApi());\n      dispatch(fetchCurrentWeatherFromWeatherApi());\n      dispatch(fetchWeatherForecastFromWeatherApi());\n    }\n  }, [dispatch, extraWeather, latitude, longitude]);\n\n  useEffect(() => {\n    if (weather) {\n      return;\n    }\n    if (timezone) {\n      dispatch(fetchCurrentWeather());\n      dispatch(fetchAirQuality());\n    }\n  }, [dispatch, timezone, weather]);\n\n  useEffect(() => {\n    if (city) {\n      dispatch(fetchPexelsImage(city));\n    }\n  }, [city, dispatch]);\n  // console.log(images);\n\n  return (\n    <main\n      style={{\n        minHeight: '70vh',\n      }}\n    >\n      {city && <CardUI />}\n      {!isGeolocationAvailable && (\n        <TextLine text=\"Due to your browser does not support geolocation, the default location data is being shown. Please update your browser, allow the location access and turn on geolocation on your device.\" />\n      )}\n      {!isGeolocationEnabled && (\n        <TextLine text=\"Due to the geolocation is not enabled on your device, the default location data is being shown. Please enable geolocation on your device to get your current location data.\" />\n      )}\n      <Container>\n        {latitude && longitude ? (\n          <>\n            <MainBoxUI />\n          </>\n        ) : (\n          <div>\n            <Loader />\n          </div>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default Homepage;\n","// DNIPRO, UKRAINE\nexport const DEFAULT_LATITUDE = '48.464717';\nexport const DEFAULT_LONGITUDE = '35.046183';\n"],"names":["Card","styled","p","image","View","dayTime","getCityName","state","location","city","getCountry","country","getCityImages","getCurrentLongitude","longitude","getCurrentLatitude","latitude","getCurrentWeather","weather","getAdditionalCurrentWeather","weatherAdditional","getDayTime","daytime","getTimezone","timezone","getAstroData","astrodata","getForcast","weatherForecast","getDailyForcast","daily","getHourlyForcast","hourly","getAirData","airdata","useMediaQuery","query","mediaMatch","window","matchMedia","useState","matches","setMatches","useEffect","handler","e","addListener","removeListener","lightining","keyframes","Lightning","lightiningPng","Storm","drift","FogWrapper","fog1","fog2","Fog","CardUI","children","isRowBased","images","useSelector","currentWeather","bgImg","setImage","bgImgMob","imageMob","setImageMob","weatherCode","setWeatherCode","showSnow","setShowSnow","showRain","setShowRain","showDrizzle","setShowDrizzle","showHeavyDrizzle","setShowHeavyDrizzle","showStorm","setShowStorm","showBigSnow","setShowBigSnow","showFog","setShowFog","showThunderSnow","setShowThunderSnow","length","landscape","portrait","random","Math","floor","condition","code","Snowfall","style","position","width","height","snowflakeCount","wind","speed","id","dropletsAmount","amplitude","renderCustomAxisTick","x","y","path","payload","value","viewBox","href","sprite","CustomizedDot","props","cx","cy","currentTime","current_weather","time","slice","CustomizeActivedDot","CustomizeActivedDotTempMin","CustomizeActivedDotTempMax","CustomizeActivedDotPrecipitation","CustomizedDotEuAQI","fill","stroke","CustomizedDotUsAQI","ChartsWrapper","HourlyChartsUI","hourlyForecast","hours","map","el","temp","temperature_2m","weathercode","hourlyData","index","temperature","ResponsiveContainer","AreaChart","data","margin","top","right","left","bottom","ReferenceLine","strokeDasharray","Tooltip","YAxis","interval","XAxis","dataKey","xAxisId","tick","Area","type","stackId","strokeWidth","activeDot","dot","Indicator","theme","radii","main","fonts","fontWeights","lineHeights","color","colors","accentBlue","accentPink","accentViolet","textGrey","bgBlue","bgPink","bgViolet","bgGrey","IndicatorText","IndicatorImg","IndicatorUI","src","text","source","alt","loading","formatDate","date","month","String","toLocaleString","day","getDate","padStart","DailyChartsUI","dailyForecast","dates","Date","tempMin","temperature_2m_min","tempMax","temperature_2m_max","precipitation","precipitation_sum","dailyData","dateShort","min","max","LineChart","Line","r","Legend","Header","mainDark","Subheader","Wrapper","WrapperBox","ForecastWrapper","IconWrapper","TextWrapper","DateText","ConditionText","mainLight","mainAccentPink","Text","TextRain","ForecastUI","icon","humidity","percipitation","formatedDate","tempPng","humidPng","yes","no","IndicatorsWrapper","WeatherUI","extraWeather","forecast","hot","cold","clouds","cloud","windBlow","windgusts_10m_max","windSocket","windspeed_10m_max","windrose","wind_dir","pressure","pressure_mb","radio","shortwave_radiation_sum","uv","avghumidity","daily_will_it_rain","avgtemp_c","React","moonPhasesPng","phase","png","newMoon","waxingCrescent","firstQuarter","waxingGibbous","fullMoon","waningGibbous","lastQuarter","SunBox","MoonBox","AstroIndicator","MoonImg","MoonIndicatorsWrapper","SunIndicatorsWrapper","AstroUI","astro","moonPhase","moon_phase","moonPng","setMoonPng","dispatch","useDispatch","moonImg","find","cond","toLowerCase","fetchAstroDataFromWeatherApi","moon","moon_illumination","moonrise","moonset","sunrise","sunset","CurrentState","HourlyChartsAirUI","airData","dust","alder_pollen","birch_pollen","grass_pollen","mugwort_pollen","olive_pollen","ragweed_pollen","euAQI","european_aqi","usAQI","us_aqi","console","log","AirUI","air","formatIndex","co","toFixed","no2","o3","so2","pm25","pm2_5","pm10","ButtonMain","iconsFill","selected","bgYellow","ButtonText","ButtonUI","onClick","conditionsWeatherApi","night","daySun","nightMoon","dayClouds","nightClouds","dayWind","nightWind","dayRain","nightRain","daySnow","nightSnow","dayStorm","nightStorm","DataWrapper","WeatherDataWrapper","WeatherInfoWrapper","CityName","WeatherConditions","ChanceOfIndicator","TemperatureWrapper","FeelsLike","Temperature","ButtonsWrapper","MainBoxUI","showWeather","setShowWeather","showAstro","setShowAstro","showAir","setShowAir","weatherPng","setWeatherPng","conditionPng","temp_c","termometrPlus","termometrMinus","feelslike_c","rain","daily_chance_of_rain","snow","daily_chance_of_snow","percipitationImg","humidityImg","windImg","windspeed","TextContainer","RunningText","TextLine","useGeolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","undefined","suppressLocationOnMount","coords","isGeolocationAvailable","isGeolocationEnabled","setLatitude","setLongitude","fetchCity","fetchCurrentWeatherFromWeatherApi","fetchWeatherForecastFromWeatherApi","fetchCurrentWeather","fetchAirQuality","fetchPexelsImage","minHeight","Container","Loader"],"sourceRoot":""}