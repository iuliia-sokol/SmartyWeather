{"version":3,"file":"static/js/850.4f0ae51f.chunk.js","mappings":"oKAEaA,E,QAAUC,GAAAA,IAAH,mqBAcH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAMC,IAAlB,IACD,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAY,EAAxB,IAED,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,YAAYF,IAAxB,I,SCjBLG,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,OAAO,SAACT,EAAD,UAAUS,GAClB,C,8ICFYC,E,QAAgBT,GAAAA,GAAH,sB,SCK1B,SAASU,IACP,IAAMC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAClC,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,OACLT,GACFK,EAAUL,EAEb,GAAE,CAACM,EAAUN,IAEPI,GACL,SAAChB,EAAA,EAAD,WACE,SAACU,EAAD,UACGM,EAAOM,KAAI,SAAAC,GACV,OACE,eAAkBC,KAAMD,EAAGC,KAA3B,SACGD,EAAGE,MADGF,EAAGE,KAIf,SAIL,sDAEH,CAED,MAAeC,EAAAA,KAAWf,GC9B1B,EAJoB,WAClB,OAAO,SAACgB,EAAD,GACR,C,sYCJM,IACMC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,IAAnB,EACnBC,EAAa,SAAAH,GAAK,OAAIA,EAAMC,SAASG,OAAnB,EAClBC,EAAgB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EACrBC,EAAsB,SAAAP,GAAK,OAAIA,EAAMC,SAASO,SAAnB,EAC3BC,EAAqB,SAAAT,GAAK,OAAIA,EAAMC,SAASS,QAAnB,EAC1BC,EAAoB,SAAAX,GAAK,OAAIA,EAAMC,SAASW,OAAnB,EACzBC,EAA8B,SAAAb,GAAK,OAC9CA,EAAMC,SAASa,iBAD+B,EAEnCC,EAAa,SAAAf,GAAK,OAAIA,EAAMC,SAASe,OAAnB,EAClBC,EAAc,SAAAjB,GAAK,OAAIA,EAAMC,SAASiB,QAAnB,EACnBC,EAAe,SAAAnB,GAAK,OAAIA,EAAMC,SAASmB,SAAnB,EACpBC,EAAa,SAAArB,GAAK,OAAIA,EAAMC,SAASqB,eAAnB,EAClBC,EAAkB,SAAAvB,GAAK,OAAIA,EAAMC,SAASW,QAAQY,KAA3B,EACvBC,EAAmB,SAAAzB,GAAK,OAAIA,EAAMC,SAASW,QAAQc,MAA3B,EACxBC,EAAa,SAAA3B,GAAK,OAAIA,EAAMC,SAAS2B,OAAnB,EAClB3C,EAAa,SAAAe,GAAK,OAAIA,EAAMC,SAAS4B,OAAnB,C","sources":["components/BoxWrapper/Wrapper.styled.js","components/BoxWrapper/Wrapper.jsx","components/HistoryBox/HistoryBox.styled.js","components/HistoryBox/HistoryBox.jsx","components/pages/HistoryPage/HistoryPage.jsx","redux/location/locSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 32px 16px;\n  background: rgba(255, 255, 255, 0.23);\n  border-radius: 30px;\n  gap: 16px;\n  /* box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1); */\n  /* box-shadow: 0px 5px 10px 0px rgba(0, 255, 255, 0.7); */\n  box-shadow: inset -5px -5px 9px rgba(255, 255, 255, 0.45),\n    inset 5px 5px 9px rgba(94, 104, 121, 0.3);\n  backdrop-filter: blur(5.3px);\n  -webkit-backdrop-filter: blur(5.3px);\n  border: 1px solid rgba(255, 255, 255, 0.77);\n  font-family: ${p => p.theme.fonts.main};\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 20px;\n  line-height: ${p => p.theme.lineHeights.main};\n\n  @media screen and (min-width: 768px) {\n    padding: 56px 32px;\n  }\n`;\n","import { Wrapper } from './Wrapper.styled';\n\nexport const WrapperBox = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n","import styled from 'styled-components';\n\nexport const EventsWrapper = styled.ul``;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchHistory } from 'redux/location/locOperations';\nimport { getHistory } from 'redux/location/locSelectors';\nimport { WrapperBox } from 'components/BoxWrapper/Wrapper';\nimport { EventsWrapper } from './HistoryBox.styled';\n\nfunction HistoryUI() {\n  const historyEvents = useSelector(getHistory);\n  const [events, setEvents] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchHistory());\n    if (historyEvents) {\n      setEvents(historyEvents);\n    }\n  }, [dispatch, historyEvents]);\n\n  return events ? (\n    <WrapperBox>\n      <EventsWrapper>\n        {events.map(el => {\n          return (\n            <li key={el.text} year={el.year}>\n              {el.text}\n            </li>\n          );\n        })}\n      </EventsWrapper>\n    </WrapperBox>\n  ) : (\n    <div>No history data available</div>\n  );\n}\n\nexport default React.memo(HistoryUI);\n","import HistoryBox from 'components/HistoryBox/HistoryBox';\n\nconst HistoryPage = () => {\n  return <HistoryBox />;\n};\n\nexport default HistoryPage;\n","export const getCityId = state => state.location.cityID;\nexport const getCityName = state => state.location.city;\nexport const getCountry = state => state.location.country;\nexport const getCityImages = state => state.location.image;\nexport const getCurrentLongitude = state => state.location.longitude;\nexport const getCurrentLatitude = state => state.location.latitude;\nexport const getCurrentWeather = state => state.location.weather;\nexport const getAdditionalCurrentWeather = state =>\n  state.location.weatherAdditional;\nexport const getDayTime = state => state.location.daytime;\nexport const getTimezone = state => state.location.timezone;\nexport const getAstroData = state => state.location.astrodata;\nexport const getForcast = state => state.location.weatherForecast;\nexport const getDailyForcast = state => state.location.weather.daily;\nexport const getHourlyForcast = state => state.location.weather.hourly;\nexport const getAirData = state => state.location.airdata;\nexport const getHistory = state => state.location.history;\n"],"names":["Wrapper","styled","p","theme","fonts","main","fontWeights","lineHeights","WrapperBox","children","EventsWrapper","HistoryUI","historyEvents","useSelector","getHistory","useState","events","setEvents","dispatch","useDispatch","useEffect","fetchHistory","map","el","year","text","React","HistoryBox","getCityName","state","location","city","getCountry","country","getCityImages","image","getCurrentLongitude","longitude","getCurrentLatitude","latitude","getCurrentWeather","weather","getAdditionalCurrentWeather","weatherAdditional","getDayTime","daytime","getTimezone","timezone","getAstroData","astrodata","getForcast","weatherForecast","getDailyForcast","daily","getHourlyForcast","hourly","getAirData","airdata","history"],"sourceRoot":""}